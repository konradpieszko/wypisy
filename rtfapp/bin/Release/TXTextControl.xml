<?xml version="1.0" encoding="utf-8" ?>
<doc>
	<assembly>
		<name>TXTextControl</name>
	</assembly>
	<members>
		<member name="T:TXTextControl.TXTextControl">
			<summary>The TXTextControl JavaScript object provides a public API to manipulate the web editor via JavaScript functions in the browser.</summary>
		</member>
		<member name="T:TXTextControl.TXTextControl.EditMode">
			<summary>Determines the possible document edit modes.</summary>
		</member>
		<member name="F:TXTextControl.TXTextControl.EditMode.Edit">
			<summary>The document's text can be edited.</summary>
		</member>
		<member name="F:TXTextControl.TXTextControl.EditMode.ReadAndSelect">
			<summary>The document's text is read only but can be selected.</summary>
		</member>
		<member name="F:TXTextControl.TXTextControl.EditMode.ReadOnly">
			<summary>The document's text is read only.</summary>
		</member>
		<member name="T:TXTextControl.TXTextControl.FileType">
			<summary>Specifies the kind of file types.</summary>
		</member>
		<member name="F:TXTextControl.TXTextControl.FileType.Document">
			<summary>Specifies document file types.</summary>
		</member>
		<member name="F:TXTextControl.TXTextControl.FileType.Image">
			<summary>Specifies image file types.</summary>
		</member>
		<member name="F:TXTextControl.TXTextControl.FileType.DataBase">
			<summary>Specifies database file types.</summary>
		</member>
		<member name="T:TXTextControl.TXTextControl.StreamType">
			<summary>Determines a certain text format.</summary>
		</member>
		<member name="F:TXTextControl.TXTextControl.StreamType.HTMLFormat">
			<summary>Specifies HTML format (Hypertext Markup Language).</summary>
		</member>
		<member name="F:TXTextControl.TXTextControl.StreamType.RichTextFormat">
			<summary>Specifies RTF format (Rich Text Format).</summary>
		</member>
		<member name="F:TXTextControl.TXTextControl.StreamType.PlainText">
			<summary>Specifies text in Unicode format.</summary>
		</member>
		<member name="F:TXTextControl.TXTextControl.StreamType.InternalUnicodeFormat">
			<summary>Specifies the internal Text Control format (Unicode).</summary>
		</member>
		<member name="F:TXTextControl.TXTextControl.StreamType.MSWord">
			<summary>Specifies Microsoft Word format (.DOC version).</summary>
		</member>
		<member name="F:TXTextControl.TXTextControl.StreamType.AdobePDF">
			<summary>Specifies Adobe Portable Document Format (PDF).</summary>
		</member>
		<member name="F:TXTextControl.TXTextControl.StreamType.WordprocessingML">
			<summary>Specifies Microsoft Word format (.DOCX version).</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.addEventListener">
			<summary>The addEventListener function registers event listener functions on the TXTextControl object.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.focus">
			<summary>The focus function sets the text input focus to the web editor.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.getBackColor">
			<summary>Returns the background color of the main text area and the ruler bars by calling a provided callback function.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.getCultures">
			<summary>Returns the culture and the UI culture of the control. The UI culture affects the string resource language. The culture represents date and time string formats, for example.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.getFileDirectory">
			<summary>Requests the directory path where the files of a specific file type are stored on the web server.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.getFormattingPrinter">
			<summary>Returns the name of the currently selected formatting printer by calling a provided callback function. For more information on the formatting printer see function setFormattingPrinter.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.getInstalledPrinters">
			<summary>Gets the names of the printers installed on the server which are usable by Text Control.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.getStatusBarColor">
			<summary>Returns the background color of the status bar by calling a provided callback function.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.getTextParts">
			<summary>Requests a collection of all text parts the current document contains from the server and returns the collection by calling a callback function which has to be provided as a parameter to the function.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.loadDocument">
			<summary>Loads text in a certain format. The complete contents of the web editor are replaced.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.loadSelection">
			<summary>Loads text in a certain format into the current selection.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.loadXMLDatabase">
			<summary>Loads an XML database which is used to create table and field name menu items in the mailings ribbon tab.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.removeEventListener">
			<summary>The removeListener function removes the specified listener from the TXTextControl object.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.removeFromDom">
			<summary>The removeFromDom function closes the WebSocket connection gracefully and removes the whole editor from the DOM.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.resetContents">
			<summary>Deletes the entire contents of the control.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.saveDocument">
			<summary>Saves the current document in a certain format and sends the result back asynchronously by calling a given callback function.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.saveSelection">
			<summary>Saves the current selection in a certain format and sends the result back asynchronously by calling a given callback function.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.setBackColor">
			<summary>Sets the background color of the main text area and the ruler bars.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.setFileDirectory">
			<summary>Sets the directory path where the files of a specific file type are stored on the web server.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.setFormattingPrinter">
			<summary>Sets the name of a printer the text dimensions and capabilities of which are used to format the document. If the document is printed with this printer the displayed and the printed document have the same dimensions. If the property is set to "Standard", the system installed standard printer is used to format the document. If the property is set to "Display", the font dimensions of the display device are used to format the document. If the specified printer is not installed, the standard printer is used.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.setStatusBarColor">
			<summary>Sets the background color of the status bar.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.showHorizontalRuler">
			<summary>Shows or hides the web editor's horizontal ruler bar.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.showRibbonBar">
			<summary>Shows or hides the ribbon bar.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.showStatusBar">
			<summary>Shows or hides the web editor's status bar.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.showVerticalRuler">
			<summary>Shows or hides the web editor's vertical ruler bar.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.contextMenusEnabled">
			<summary>Gets or sets if a right click into the text area opens a context menu or not.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.controlChars">
			<summary>Gets or sets if control characters are visible.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.documentTargetMarkers">
			<summary>Gets or sets if document target markers are visible.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.editMode">
			<summary>Gets or sets the edit mode the control is in.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.isHyphenationEnabled">
			<summary>Gets or sets a value indicating whether hyphenation is active or not.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.isLanguageDetectionEnabled">
			<summary>Gets or sets a value indicating whether language detection is active or not.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.isLoadingDialogEnabled">
			<summary>Gets or sets if a wait dialog is shown while a document is being loaded.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.isSpellCheckingEnabled">
			<summary>Gets or sets a value indicating whether spell checking is active or not.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.ribbon">
			<summary>Gets the control's ribbon bar object.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.saveDocumentQuestionDialogEnabled">
			<summary>Gets or sets if a confirmation dialog should be shown before discarding unsaved changes.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.selection">
			<summary>Gets the current selection.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.tableGridLines">
			<summary>Gets or sets if table grid lines are visible.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.textFieldsEditable">
			<summary>Gets or sets if text fields are editable or not.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.textFrameMarkerLines">
			<summary>Gets or sets if text frame marker lines are visible.</summary>
		</member>
		<member name="T:TXTextControl.TXTextControl.CultureSettings">
			<summary>An object of this type is returned by the function getCultures.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.CultureSettings.culture">
			<summary>The control's culture.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.CultureSettings.uiCulture">
			<summary>The control's user interface culture.</summary>
		</member>
		<member name="T:TXTextControl.TXTextControl.DocumentLoadedEventArgs">
			<summary>The event argument object for the documentLoaded event.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.DocumentLoadedEventArgs.fileName">
			<summary>The file name of the loaded document.</summary>
		</member>
		<member name="T:TXTextControl.TXTextControl.HyperlinkClickedEventArgs">
			<summary>The event argument object for the hyperlinkClicked event.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.HyperlinkClickedEventArgs.target">
			<summary>The Link.</summary>
		</member>
		<member name="T:TXTextControl.TXTextControl.InputPositionChangedEventArgs">
			<summary>The event argument object for the inputPositionChanged event.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.InputPositionChangedEventArgs.column">
			<summary>The column number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.InputPositionChangedEventArgs.line">
			<summary>The line number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.InputPositionChangedEventArgs.page">
			<summary>The page number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.InputPositionChangedEventArgs.section">
			<summary>The section number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.InputPositionChangedEventArgs.textPosition">
			<summary>The 0-based text position of the current text input position.</summary>
		</member>
		<member name="T:TXTextControl.TXTextControl.Ribbon">
			<summary>The type of the ribbon property of the TXTextControl object.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.Ribbon.minimize">
			<summary>Minimizes the ribbon bar so that only the tab names stay visible.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.Ribbon.expand">
			<summary>Expands the ribbon bar if it is currently minimized.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.Ribbon.selectedTab">
			<summary>Gets or sets the currently selected ribbon tab name.</summary>
		</member>
		<member name="T:TXTextControl.TXTextControl.RibbonTabIndexChangedEventArgs">
			<summary>The event argument object for the ribbonTabIndexChanged event.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.RibbonTabIndexChangedEventArgs.name">
			<summary>The name of the ribbon tab which is now active.</summary>
		</member>
		<member name="T:TXTextControl.TXTextControl.SaveDocumentResult">
			<summary>The callback function argument for the saveDocument and the saveSelection functions.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.SaveDocumentResult.data">
			<summary>The Document data.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.SaveDocumentResult.streamType">
			<summary>Specifies one of the StreamType values.</summary>
		</member>
		<member name="T:TXTextControl.TXTextControl.Selection">
			<summary>Describes and handles the position and length of a text selection.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.Selection.getBounds">
			<summary>Takes a callback function with one parameter as a parameter. The callback function is called with a SelectionBounds object as a parameter upon receiving the selection information from the server.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.Selection.setBounds">
			<summary>Sets the selection start and length. Takes a SelectionBounds object as a parameter.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.Selection.load">
			<summary>For a detailed description of this function see loadSelection.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.Selection.save">
			<summary>For a detailed description of this function see saveSelection.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.Selection.getCulture">
			<summary>Takes a callback function as a parameter which is called with a languagecode2-country/regioncode2 string ("de-DE", "en-US" or "en", for example) as a parameter upon receiving the selection information from the server.</summary>
		</member>
		<member name="M:TXTextControl.TXTextControl.Selection.setCulture">
			<summary>Sets the selection culture. Takes a languagecode2-country/regioncode2 string ("de-DE", "en-US" or "en", for example) as a parameter.</summary>
		</member>
		<member name="T:TXTextControl.TXTextControl.SelectionBounds">
			<summary>Is used with the setter of the selection property of the TextPart object.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.SelectionBounds.start">
			<summary>The 0-based start character position of the selection.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.SelectionBounds.length">
			<summary>The length of the selection in characters.</summary>
		</member>
		<member name="T:TXTextControl.TXTextControl.SubTextPartEventArgs">
			<summary>The event argument for the SubTextPart related events.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.SubTextPartEventArgs.id">
			<summary>The subtextpart's identifier.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.SubTextPartEventArgs.start">
			<summary>The 1-based position of the first character which belongs to the subtextpart.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.SubTextPartEventArgs.length">
			<summary>The length of the SubTextPart in characters.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.SubTextPartEventArgs.name">
			<summary>The name of the subtextpart.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.SubTextPartEventArgs.number">
			<summary>The subtextpart's number.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.SubTextPartEventArgs.nestedLevel">
			<summary>The subtextpart's nested level.</summary>
		</member>
		<member name="T:TXTextControl.TXTextControl.TextDroppedEventArgs">
			<summary>The event argument object for the textDropped event.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.TextDroppedEventArgs.text">
			<summary>The dropped text.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.TextDroppedEventArgs.textType">
			<summary>The MIME type of the text.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.TextDroppedEventArgs.cancel">
			<summary>Set this property to true to cancel the event.</summary>
		</member>
		<member name="T:TXTextControl.TXTextControl.TextFieldEventArgs">
			<summary>The event argument object for text field related events.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.TextFieldEventArgs.fieldType">
			<summary>The field type ("APPLICATIONFIELD" or "TEXTFIELD").</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.TextFieldEventArgs.fieldName">
			<summary>The field's name.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.TextFieldEventArgs.typeName">
			<summary>The merge field type in case of field type "APPLICATIONFIELD" ("MERGEFIELD", "DATE", "NEXTIF" etc.).</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.TextFieldEventArgs.start">
			<summary>The 1-based first character position of the text field.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.TextFieldEventArgs.length">
			<summary>The number of characters in the text field.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.TextFieldEventArgs.id">
			<summary>The identifier of the text field.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.TextFieldEventArgs.parameters">
			<summary>A string array of the field's parameters, if fieldType is "APPLICATIONFIELD".</summary>
		</member>
		<member name="T:TXTextControl.TXTextControl.TextPart">
			<summary>The callback function argument for the getTextParts function.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.TextPart.type">
			<summary>The Text part type.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.TextPart.index">
			<summary>The 0-based index of the text part.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.TextPart.selection">
			<summary>The getter returns an object of type Selection.</summary>
		</member>
		<member name="T:TXTextControl.TXTextControl.WebSocketClosedEventArgs">
			<summary>The event argument object for the webSocketClosed event.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.WebSocketClosedEventArgs.code">
			<summary>The close code sent by the server.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.WebSocketClosedEventArgs.reason">
			<summary>The reason the server closed the connection.</summary>
		</member>
		<member name="P:TXTextControl.TXTextControl.WebSocketClosedEventArgs.wasClean">
			<summary>Indicates whether or not the connection was cleanly closed.</summary>
		</member>
		<member name="T:TXTextControl.AppendSettings">
			<summary>Determines how text is appended to the document.</summary>
		</member>
		<member name="F:TXTextControl.AppendSettings.None">
			<summary>The loaded text is inserted at the end of the last paragraph of the existing document.</summary>
		</member>
		<member name="F:TXTextControl.AppendSettings.StartWithNewParagraph">
			<summary>A new paragraph is created at the end of the document and the text is inserted in this paragraph.</summary>
		</member>
		<member name="F:TXTextControl.AppendSettings.StartWithNewSection">
			<summary>A new section is created at the end of the document and the text is inserted in this section.</summary>
		</member>
		<member name="T:TXTextControl.ApplicationFieldFormat">
			<summary>Determines the format of an ApplicationField.</summary>
		</member>
		<member name="F:TXTextControl.ApplicationFieldFormat.MSWord">
			<summary>The field is supported and defined through Microsoft Word.</summary>
		</member>
		<member name="F:TXTextControl.ApplicationFieldFormat.HighEdit">
			<summary>The field is supported and defined through the Heiler HighEdit component.</summary>
		</member>
		<member name="T:TXTextControl.AutoSizeDirection">
			<summary>Determines values for the AutoSize.AutoExpand and AutoSize.AutoShrink properties.</summary>
		</member>
		<member name="F:TXTextControl.AutoSizeDirection.None">
			<summary>The control does not shrink automatically.</summary>
		</member>
		<member name="F:TXTextControl.AutoSizeDirection.Vertical">
			<summary>The control automatically shrinks vertically.</summary>
		</member>
		<member name="F:TXTextControl.AutoSizeDirection.Horizontal">
			<summary>The control automatically shrinks horizontally.</summary>
		</member>
		<member name="F:TXTextControl.AutoSizeDirection.Both">
			<summary>The control automatically shrinks in both directions.</summary>
		</member>
		<member name="T:TXTextControl.BinaryStreamType">
			<summary>Determines a certain text format that must tbe stored in a one-dimensional byte array.</summary>
		</member>
		<member name="F:TXTextControl.BinaryStreamType.AdobePDF">
			<summary>Specifies Adobe Portable Document Format (PDF). If a document is loaded, only the text is imported.</summary>
		</member>
		<member name="F:TXTextControl.BinaryStreamType.AdobePDFA">
			<summary>Specifies Adobe Portable Document Format Archive (PDF/A). This format can only be used in saving operations.</summary>
		</member>
		<member name="F:TXTextControl.BinaryStreamType.InternalFormat">
			<summary>Specifies the internal Text Control format. Text is stored in ANSI format.</summary>
		</member>
		<member name="F:TXTextControl.BinaryStreamType.InternalUnicodeFormat">
			<summary>Specifies the internal Text Control format. Text is stored in Unicode format.</summary>
		</member>
		<member name="F:TXTextControl.BinaryStreamType.MSWord">
			<summary>Specifies Microsoft Word format.</summary>
		</member>
		<member name="F:TXTextControl.BinaryStreamType.WordprocessingML">
			<summary>Specifies Microsoft Word format (Office Open XML version).</summary>
		</member>
		<member name="T:TXTextControl.ContextMenuLocation">
			<summary>Determines the location in the document where a context menu will be shown.</summary>
		</member>
		<member name="F:TXTextControl.ContextMenuLocation.TextSelection">
			<summary>The menu context is a text selection.</summary>
		</member>
		<member name="F:TXTextControl.ContextMenuLocation.TextInputPosition">
			<summary>The menu context is the text input position.</summary>
		</member>
		<member name="F:TXTextControl.ContextMenuLocation.Header">
			<summary>The menu context is the top page margin which contains a header.</summary>
		</member>
		<member name="F:TXTextControl.ContextMenuLocation.NoHeader">
			<summary>The menu context is the top page margin which contains no header.</summary>
		</member>
		<member name="F:TXTextControl.ContextMenuLocation.Footer">
			<summary>The menu context is the bottom page margin which contains a footer.</summary>
		</member>
		<member name="F:TXTextControl.ContextMenuLocation.NoFooter">
			<summary>The menu context is the bottom page margin which contains no footer.</summary>
		</member>
		<member name="F:TXTextControl.ContextMenuLocation.PageMargin">
			<summary>The menu context is the top or the bottom page margin.</summary>
		</member>
		<member name="F:TXTextControl.ContextMenuLocation.PageNumberField">
			<summary>The menu context is a PageNumberField.</summary>
		</member>
		<member name="F:TXTextControl.ContextMenuLocation.SelectedFrame">
			<summary>The menu context is a selected frame (text frame, image, chart or barcode).</summary>
		</member>
		<member name="F:TXTextControl.ContextMenuLocation.Table">
			<summary>The menu context is a text selection or a text input position in a Table.</summary>
		</member>
		<member name="F:TXTextControl.ContextMenuLocation.Field">
			<summary>The menu context is a text selection or a text input position in a TextField.</summary>
		</member>
		<member name="F:TXTextControl.ContextMenuLocation.MisspelledWord">
			<summary>The menu context is a MisspelledWord.</summary>
		</member>
		<member name="T:TXTextControl.ControlChars">
			<summary>Determines values for the control characters used in a TextControl document.</summary>
		</member>
		<member name="F:TXTextControl.ControlChars.ParagraphEnd">
			<summary>Defines the end of a paragraph (Keyboard: ENTER).</summary>
		</member>
		<member name="F:TXTextControl.ControlChars.LineBreak">
			<summary>Defines a line break without beginning a new paragraph (Keyboard: SHIFT+ENTER).</summary>
		</member>
		<member name="F:TXTextControl.ControlChars.PageBreak">
			<summary>Defines a page break (Keyboard: CTRL+ENTER).</summary>
		</member>
		<member name="F:TXTextControl.ControlChars.ColumnBreak">
			<summary>Defines a page column break (Keyboard: CTRL+SHIFT+ENTER).</summary>
		</member>
		<member name="F:TXTextControl.ControlChars.Tab">
			<summary>Defines a tabulator (Keyboard: TAB).</summary>
		</member>
		<member name="F:TXTextControl.ControlChars.NonBreakingSpace">
			<summary>Defines a non-breaking space (Keyboard: CTRL+SHIFT+Space).</summary>
		</member>
		<member name="F:TXTextControl.ControlChars.NonVisibleHyphen">
			<summary>Defines a non-visible hyphen (Keyboard: CTRL+(-)).</summary>
		</member>
		<member name="T:TXTextControl.CursorKind">
			<summary>Determines the kind of the cursor at a certain location in a document.</summary>
		</member>
		<member name="F:TXTextControl.CursorKind.IBeam">
			<summary>The cursor is an I-beam.</summary>
		</member>
		<member name="F:TXTextControl.CursorKind.ArrowNE">
			<summary>The cursor is an arrow cursor pointing to northeast.</summary>
		</member>
		<member name="F:TXTextControl.CursorKind.VSplit">
			<summary>The cursor is a vertical splitting cursor.</summary>
		</member>
		<member name="F:TXTextControl.CursorKind.UpArrow">
			<summary>The cursor is an up arrow cursor.</summary>
		</member>
		<member name="F:TXTextControl.CursorKind.Arrow">
			<summary>The cursor is a standard arrow cursor pointing to northwest.</summary>
		</member>
		<member name="F:TXTextControl.CursorKind.DownArrow">
			<summary>The cursor is a down arrow cursor.</summary>
		</member>
		<member name="F:TXTextControl.CursorKind.SizeWE">
			<summary>The cursor is a two-headed horizontal (west/east) sizing cursor.</summary>
		</member>
		<member name="F:TXTextControl.CursorKind.SizeNS">
			<summary>The cursor is the two-headed vertical (north/south) sizing cursor.</summary>
		</member>
		<member name="F:TXTextControl.CursorKind.SizeNWSE">
			<summary>The cursor is the two-headed diagonal (northwest/southeast) sizing cursor.</summary>
		</member>
		<member name="F:TXTextControl.CursorKind.SizeNESW">
			<summary>The cursor is the two-headed diagonal (northeast/southwest) sizing cursor.</summary>
		</member>
		<member name="F:TXTextControl.CursorKind.SizeAll">
			<summary>The cursor is the four-headed sizing cursor, which consists of four joined arrows that point north, south, east, and west.</summary>
		</member>
		<member name="F:TXTextControl.CursorKind.Cross">
			<summary>The cursor is the crosshair cursor.</summary>
		</member>
		<member name="F:TXTextControl.CursorKind.No">
			<summary>The cursor is the cursor that indicates that a particular region is invalid for the current operation.</summary>
		</member>
		<member name="F:TXTextControl.CursorKind.DragDropCopy">
			<summary>The cursor is the standard cursor for copying data during a drag and drop operation.</summary>
		</member>
		<member name="F:TXTextControl.CursorKind.DragDropMove">
			<summary>The cursor is the standard cursor for moving data during a drag and drop operation.</summary>
		</member>
		<member name="T:TXTextControl.FrameInsertionMode">
			<summary>Determines how the frame of an image, text frame, chart, barcode or drawing can be inserted in the text.</summary>
		</member>
		<member name="F:TXTextControl.FrameInsertionMode.AsCharacter">
			<summary>The frame is inserted in the text as a single character.</summary>
		</member>
		<member name="F:TXTextControl.FrameInsertionMode.DisplaceCompleteLines">
			<summary>The frame is inserted at a certain geometrical location. The text stops at the top and continues at the bottom of the frame.</summary>
		</member>
		<member name="F:TXTextControl.FrameInsertionMode.DisplaceText">
			<summary>The frame is inserted at a certain geometrical location. The text flows around the frame and empty areas at the left and right side are filled.</summary>
		</member>
		<member name="F:TXTextControl.FrameInsertionMode.AboveTheText">
			<summary>The frame is inserted at a certain geometrical location above the text. This means that the frame overwrites the text.</summary>
		</member>
		<member name="F:TXTextControl.FrameInsertionMode.BelowTheText">
			<summary>The frame is inserted at a certain geometrical location below the text. This means that the text overwrites the frame.</summary>
		</member>
		<member name="F:TXTextControl.FrameInsertionMode.MoveWithText">
			<summary>The frame is anchored to a paragraph and moved with the text.</summary>
		</member>
		<member name="F:TXTextControl.FrameInsertionMode.FixedOnPage">
			<summary>The frame is fixed positioned on a page.</summary>
		</member>
		<member name="T:TXTextControl.ClipboardFormat">
			<summary>Determines a certain clipboard format that can be pasted into a TextControl document.</summary>
		</member>
		<member name="F:TXTextControl.ClipboardFormat.Barcode">
			<summary>Specifies a barcode.</summary>
		</member>
		<member name="F:TXTextControl.ClipboardFormat.Chart">
			<summary>Specifies a chart.</summary>
		</member>
		<member name="F:TXTextControl.ClipboardFormat.HTMLFormat">
			<summary>Specifies HTML format (Hypertext Markup Language).</summary>
		</member>
		<member name="F:TXTextControl.ClipboardFormat.Image">
			<summary>Specifies an image. An image can be pasted, if it is a device dependent or a device independent bitmap, a TIFF image or a Windows metafile.</summary>
		</member>
		<member name="F:TXTextControl.ClipboardFormat.PlainText">
			<summary>Specifies unformatted text.</summary>
		</member>
		<member name="F:TXTextControl.ClipboardFormat.RichTextFormat">
			<summary>Specifies RTF format (Rich Text Format).</summary>
		</member>
		<member name="F:TXTextControl.ClipboardFormat.TXTextControlFormat">
			<summary>Specifies formatted text in the internal TX Text Control format.</summary>
		</member>
		<member name="F:TXTextControl.ClipboardFormat.TXTextControlImage">
			<summary>Specifies an image including information about how the image is positioned in the document (inline or geometrically positioned).</summary>
		</member>
		<member name="F:TXTextControl.ClipboardFormat.TXTextControlTextframe">
			<summary>Specifies a TX Text Control textframe including its contents. The clipbord contains also information about how the textframe is positioned in the document (inline or geometrically positioned).</summary>
		</member>
		<member name="T:TXTextControl.Direction">
			<summary>Determines the writing direction of a paragraph.</summary>
		</member>
		<member name="F:TXTextControl.Direction.LeftToRight">
			<summary>The writing direction is left to right, which means that blocks of text with left to right and right to left characters are ordered from left to right.</summary>
		</member>
		<member name="F:TXTextControl.Direction.RightToLeft">
			<summary>The writing direction is right to left, which means that blocks of text with left to right and right to left characters are ordered from right to left.</summary>
		</member>
		<member name="T:TXTextControl.FindOptions">
			<summary>Determines search options for the Find methods.</summary>
		</member>
		<member name="F:TXTextControl.FindOptions.MatchCase">
			<summary>Locates only instances of the search text that have the exact casing.</summary>
		</member>
		<member name="F:TXTextControl.FindOptions.MatchWholeWord">
			<summary>Locates only instances of the search text which are whole words.</summary>
		</member>
		<member name="F:TXTextControl.FindOptions.NoHighlight">
			<summary>The search text, if found, is not highlighted.</summary>
		</member>
		<member name="F:TXTextControl.FindOptions.NoMessageBox">
			<summary>Does not display message boxes to inform about search results.</summary>
		</member>
		<member name="F:TXTextControl.FindOptions.Reverse">
			<summary>The search starts at the end of the control's document and searches to the beginning of the document.</summary>
		</member>
		<member name="T:TXTextControl.HeaderFooterType">
			<summary>Determines the type of a header or footer.</summary>
		</member>
		<member name="F:TXTextControl.HeaderFooterType.Header">
			<summary>The object is a header. When an even header exists, the object represents the odd header. Otherwise it represents the header of all pages.</summary>
		</member>
		<member name="F:TXTextControl.HeaderFooterType.FirstPageHeader">
			<summary>The object represents a special header of the document's or section's first page.</summary>
		</member>
		<member name="F:TXTextControl.HeaderFooterType.Footer">
			<summary>The object is a footer. When an even footer exists, this member represents the odd footer. Otherwise it represents the footer of all pages.</summary>
		</member>
		<member name="F:TXTextControl.HeaderFooterType.FirstPageFooter">
			<summary>The object represents a special footer of the document's or section's first page.</summary>
		</member>
		<member name="F:TXTextControl.HeaderFooterType.EvenHeader">
			<summary>The object represents an even header.</summary>
		</member>
		<member name="F:TXTextControl.HeaderFooterType.EvenFooter">
			<summary>The object represents an even footer.</summary>
		</member>
		<member name="T:TXTextControl.HorizontalAlignment">
			<summary>Determines values for the horizontal alignment of the text or of text frames, images and charts.</summary>
		</member>
		<member name="F:TXTextControl.HorizontalAlignment.Left">
			<summary>The alignment is left aligned.</summary>
		</member>
		<member name="F:TXTextControl.HorizontalAlignment.Right">
			<summary>The alignment right aligned.</summary>
		</member>
		<member name="F:TXTextControl.HorizontalAlignment.Center">
			<summary>The alignment is centered.</summary>
		</member>
		<member name="F:TXTextControl.HorizontalAlignment.Justify">
			<summary>The alignment is justified. This value is only used with text. It cannot be used with text frames, images and charts.</summary>
		</member>
		<member name="T:TXTextControl.ImageInsertionMode">
			<summary>Determines how an Image can be inserted in the text.</summary>
		</member>
		<member name="F:TXTextControl.ImageInsertionMode.AsCharacter">
			<summary>The image is inserted in the text as a single character.</summary>
		</member>
		<member name="F:TXTextControl.ImageInsertionMode.DisplaceCompleteLines">
			<summary>The image is inserted at a certain geometrical location. The text stops at the top and continues at the bottom of the image.</summary>
		</member>
		<member name="F:TXTextControl.ImageInsertionMode.DisplaceText">
			<summary>The image is inserted at a certain geometrical location. The text flows around the image and empty areas at the left and right side are filled.</summary>
		</member>
		<member name="F:TXTextControl.ImageInsertionMode.AboveTheText">
			<summary>The image is inserted at a certain geometrical location above the text. This means that the image overwrites the text.</summary>
		</member>
		<member name="F:TXTextControl.ImageInsertionMode.BelowTheText">
			<summary>The image is inserted at a certain geometrical location below the text. This means that the text overwrites the image.</summary>
		</member>
		<member name="F:TXTextControl.ImageInsertionMode.MoveWithText">
			<summary>The image is anchored to a paragraph and moved with the text. This member cannot be used with the ImageCollection.Add methods.</summary>
		</member>
		<member name="F:TXTextControl.ImageInsertionMode.FixedOnPage">
			<summary>The image is fixed positioned on a page. This member cannot be used with the ImageCollection.Add methods.</summary>
		</member>
		<member name="T:TXTextControl.ListType">
			<summary>Specifies the kind of a bulleted or numbered list.</summary>
		</member>
		<member name="F:TXTextControl.ListType.None">
			<summary>The text is neither a bulleted nor a numbered list.</summary>
		</member>
		<member name="F:TXTextControl.ListType.Bulleted">
			<summary>The list is a bulleted list.</summary>
		</member>
		<member name="F:TXTextControl.ListType.Numbered">
			<summary>The list is a numbered list.</summary>
		</member>
		<member name="F:TXTextControl.ListType.Structured">
			<summary>The list is a structured list. All numbers of higher levels (lower level numbers) are displayed in front of the list number. The additional text of all levels in front and behind the list numbers is also displayed.</summary>
		</member>
		<member name="T:TXTextControl.MisspelledWordKind">
			<summary>Specifies the kind of a misspelled word.</summary>
		</member>
		<member name="F:TXTextControl.MisspelledWordKind.All">
			<summary>Specifies all misspelled words.</summary>
		</member>
		<member name="F:TXTextControl.MisspelledWordKind.Duplicate">
			<summary>Specifies all misspelled words which are marked as duplicate.</summary>
		</member>
		<member name="F:TXTextControl.MisspelledWordKind.Ignored">
			<summary>Specifies all misspelled words which are marked as ignored.</summary>
		</member>
		<member name="F:TXTextControl.MisspelledWordKind.Normal">
			<summary>Specifies all misspelled words which do not have a special meaning.</summary>
		</member>
		<member name="T:TXTextControl.NumberFormat">
			<summary>Specifies the format of a numbered list.</summary>
		</member>
		<member name="F:TXTextControl.NumberFormat.ArabicNumbers">
			<summary>The list is numbered with Arabic numbers (1, 2, 3...).</summary>
		</member>
		<member name="F:TXTextControl.NumberFormat.Letters">
			<summary>The list is numbered with letters (a, b, c...).</summary>
		</member>
		<member name="F:TXTextControl.NumberFormat.CapitalLetters">
			<summary>The list is numbered with capital letters (A, B, C...).</summary>
		</member>
		<member name="F:TXTextControl.NumberFormat.RomanNumbers">
			<summary>The list is numbered with Roman numbers (I, II, III...).</summary>
		</member>
		<member name="F:TXTextControl.NumberFormat.SmallRomanNumbers">
			<summary>The list is numbered with small Roman numbers (i, ii, iii...).</summary>
		</member>
		<member name="F:TXTextControl.NumberFormat.None">
			<summary>A text selection contains different number formats.</summary>
		</member>
		<member name="T:TXTextControl.PageContent">
			<summary>Defines the contents of a page's image returned from the Page.GetImage method.</summary>
		</member>
		<member name="F:TXTextControl.PageContent.All">
			<summary>The image contains all parts without the screen elements.</summary>
		</member>
		<member name="F:TXTextControl.PageContent.Background">
			<summary>The image contains the background of the page.</summary>
		</member>
		<member name="F:TXTextControl.PageContent.HeadersAndFooters">
			<summary>The image contains the header and the footer of the page.</summary>
		</member>
		<member name="F:TXTextControl.PageContent.MainText">
			<summary>The image contains the page's text contents.</summary>
		</member>
		<member name="F:TXTextControl.PageContent.ScreenElements">
			<summary>The image contains all elements which are additionally displayed on a screen, such as the selection, the control characters and helper lines.</summary>
		</member>
		<member name="T:TXTextControl.PermanentControlChar">
			<summary>Defines a control character which is shown permanently on the screen.</summary>
		</member>
		<member name="F:TXTextControl.PermanentControlChar.Space">
			<summary>Shows the control character of a space.</summary>
		</member>
		<member name="F:TXTextControl.PermanentControlChar.Tab">
			<summary>Shows the control character of a tabstop.</summary>
		</member>
		<member name="F:TXTextControl.PermanentControlChar.ParagraphEnd">
			<summary>Shows the control character for the end of a paragraph.</summary>
		</member>
		<member name="F:TXTextControl.PermanentControlChar.ForcedLineBreak">
			<summary>Shows the control character of a forced line break.</summary>
		</member>
		<member name="F:TXTextControl.PermanentControlChar.ObjectAnchor">
			<summary>Shows the anchor position of an image, text frame, chart, barcode or drawing.</summary>
		</member>
		<member name="F:TXTextControl.PermanentControlChar.ForcedPageBreak">
			<summary>Marks a forced page break.</summary>
		</member>
		<member name="F:TXTextControl.PermanentControlChar.SectionBreak">
			<summary>Marks a section break.</summary>
		</member>
		<member name="F:TXTextControl.PermanentControlChar.Hyphen">
			<summary>Shows the control character of a hyphen.</summary>
		</member>
		<member name="F:TXTextControl.PermanentControlChar.NonBreakingSpace">
			<summary>Shows the control character of a non-breaking space.</summary>
		</member>
		<member name="F:TXTextControl.PermanentControlChar.TableCellEnd">
			<summary>Shows the control character for the end of a table cell.</summary>
		</member>
		<member name="F:TXTextControl.PermanentControlChar.All">
			<summary>Shows all control characters.</summary>
		</member>
		<member name="T:TXTextControl.SectionBreakKind">
			<summary>Specifies the kind of the section break.</summary>
		</member>
		<member name="F:TXTextControl.SectionBreakKind.BeginAtNewLine">
			<summary>The section begins on the next line with a new paragraph.</summary>
		</member>
		<member name="F:TXTextControl.SectionBreakKind.BeginAtNewPage">
			<summary>The section begins on the next page with a new paragraph.</summary>
		</member>
		<member name="T:TXTextControl.StreamType">
			<summary>Determines a certain text format.</summary>
		</member>
		<member name="F:TXTextControl.StreamType.AdobePDF">
			<summary>Specifies Adobe Portable Document Format (PDF). If a document is loaded, only the text is imported.</summary>
		</member>
		<member name="F:TXTextControl.StreamType.AdobePDFA">
			<summary>Specifies Adobe Portable Document Format Archive (PDF/A). This format can only be used in saving operations.</summary>
		</member>
		<member name="F:TXTextControl.StreamType.CascadingStylesheet">
			<summary>Specifies CSS format (Cascading Style Sheet). This format can only be used in saving operations.</summary>
		</member>
		<member name="F:TXTextControl.StreamType.HTMLFormat">
			<summary>Specifies HTML format (Hypertext Markup Language).</summary>
		</member>
		<member name="F:TXTextControl.StreamType.InternalFormat">
			<summary>Specifies the internal Text Control format. Text is stored in ANSI format.</summary>
		</member>
		<member name="F:TXTextControl.StreamType.InternalUnicodeFormat">
			<summary>Specifies the internal Text Control format. Text is stored in Unicode format.</summary>
		</member>
		<member name="F:TXTextControl.StreamType.MSWord">
			<summary>Specifies Microsoft Word format (.DOC version).</summary>
		</member>
		<member name="F:TXTextControl.StreamType.PlainAnsiText">
			<summary>Specifies text in Windows ANSI format (an end of a paragraph is marked with the control characters 13 and 10).</summary>
		</member>
		<member name="F:TXTextControl.StreamType.PlainText">
			<summary>Specifies text in Windows Unicode format (an end of a paragraph is marked with the control characters 13 and 10).</summary>
		</member>
		<member name="F:TXTextControl.StreamType.RichTextFormat">
			<summary>Specifies RTF format (Rich Text Format).</summary>
		</member>
		<member name="F:TXTextControl.StreamType.WordprocessingML">
			<summary>Specifies Microsoft Word format (Office Open XML version).</summary>
		</member>
		<member name="F:TXTextControl.StreamType.XMLFormat">
			<summary>Specifies XML format (Extensible Markup Language).</summary>
		</member>
		<member name="T:TXTextControl.StringStreamType">
			<summary>Determines a certain text format that can be stored as a string.</summary>
		</member>
		<member name="F:TXTextControl.StringStreamType.CascadingStylesheet">
			<summary>Specifies CSS format (Cascading Style Sheet). This format can only be used in saving operations.</summary>
		</member>
		<member name="F:TXTextControl.StringStreamType.HTMLFormat">
			<summary>Specifies HTML format (Hypertext Markup Language).</summary>
		</member>
		<member name="F:TXTextControl.StringStreamType.PlainText">
			<summary>Specifies Text in Windows Unicode format (an end of a paragraph is marked with the control characters 13 and 10).</summary>
		</member>
		<member name="F:TXTextControl.StringStreamType.RichTextFormat">
			<summary>Specifies RTF format (Rich Text Format).</summary>
		</member>
		<member name="F:TXTextControl.StringStreamType.XMLFormat">
			<summary>Specifies XML format (Extensible Markup Language).</summary>
		</member>
		<member name="T:TXTextControl.TableAddPosition">
			<summary>Specifies the position where to add table rows and columns or where to split a table.</summary>
		</member>
		<member name="F:TXTextControl.TableAddPosition.Before">
			<summary>Table rows or columns are inserted or the table is split in front of the row or column with the current input position.</summary>
		</member>
		<member name="F:TXTextControl.TableAddPosition.After">
			<summary>Table rows or columns are inserted or the table is split behind the row or column with the current input position.</summary>
		</member>
		<member name="T:TXTextControl.TextFieldPosition">
			<summary>Specifies special text input positions at the beginning and the end of a TextField.</summary>
		</member>
		<member name="F:TXTextControl.TextFieldPosition.InsideTextField">
			<summary>The specified position is inside the field.</summary>
		</member>
		<member name="F:TXTextControl.TextFieldPosition.OutsideTextField">
			<summary>The specified position is outside the field.</summary>
		</member>
		<member name="F:TXTextControl.TextFieldPosition.InsideNextTextField">
			<summary>The specified position is inside the next field. This member is only possible, if there are two following text fields without any character bewteen the fields. In this case InsideTextField is in the first field, OutsideTextField is between the fields and InsideNextTextField is in the second field.</summary>
		</member>
		<member name="T:TXTextControl.TextFieldType">
			<summary>Specifies types of text fields.</summary>
		</member>
		<member name="F:TXTextControl.TextFieldType.DocumentTarget">
			<summary>The field type is TXTextControl.DocumentTarget.</summary>
		</member>
		<member name="F:TXTextControl.TextFieldType.HypertextLink">
			<summary>The field type is TXTextControl.HypertextLink.</summary>
		</member>
		<member name="F:TXTextControl.TextFieldType.DocumentLink">
			<summary>The field type is TXTextControl.DocumentLink.</summary>
		</member>
		<member name="F:TXTextControl.TextFieldType.PageNumberField">
			<summary>The field type is TXTextControl.PageNumberField.</summary>
		</member>
		<member name="F:TXTextControl.TextFieldType.TextField">
			<summary>The field type is TXTextControl.TextField.</summary>
		</member>
		<member name="F:TXTextControl.TextFieldType.ApplicationField">
			<summary>The field type is TXTextControl.ApplicationField.</summary>
		</member>
		<member name="F:TXTextControl.TextFieldType.All">
			<summary>Specifies all types of text fields.</summary>
		</member>
		<member name="T:TXTextControl.TextFrameInsertionMode">
			<summary>Determines how a TextFrame can be inserted in the text.</summary>
		</member>
		<member name="F:TXTextControl.TextFrameInsertionMode.AsCharacter">
			<summary>The text frame is inserted in the text as a single character.</summary>
		</member>
		<member name="F:TXTextControl.TextFrameInsertionMode.DisplaceCompleteLines">
			<summary>The text frame is inserted at a certain geometrical location. The text stops at the top and continues at the bottom of the text frame.</summary>
		</member>
		<member name="F:TXTextControl.TextFrameInsertionMode.DisplaceText">
			<summary>The text frame is inserted at a certain geometrical location. The text flows around the text frame and empty areas at the left and right side are filled.</summary>
		</member>
		<member name="F:TXTextControl.TextFrameInsertionMode.AboveTheText">
			<summary>The text frame is inserted at a certain geometrical location above the text. This means that the text frame overwrites the text.</summary>
		</member>
		<member name="F:TXTextControl.TextFrameInsertionMode.BelowTheText">
			<summary>The text frame is inserted at a certain geometrical location below the text. This means that the text overwrites the text frame.</summary>
		</member>
		<member name="F:TXTextControl.TextFrameInsertionMode.MoveWithText">
			<summary>The text frame is anchored to a paragraph and moved with the text.</summary>
		</member>
		<member name="F:TXTextControl.TextFrameInsertionMode.FixedOnPage">
			<summary>The text frame is fixed positioned on a page.</summary>
		</member>
		<member name="T:TXTextControl.ZoomOption">
			<summary>Specifies options how to set the zoom factor of a TextControl.</summary>
		</member>
		<member name="F:TXTextControl.ZoomOption.PageWidth">
			<summary>The zoom factor is calculated so that the complete width of a page becomes visible.</summary>
		</member>
		<member name="F:TXTextControl.ZoomOption.TextWidth">
			<summary>The zoom factor is calculated so that the complete text of a line becomes visible.</summary>
		</member>
		<member name="F:TXTextControl.ZoomOption.WholePage">
			<summary>The zoom factor is calculated so that the current visible page becomes completely visible.</summary>
		</member>
		<member name="T:TXTextControl.ZOrder">
			<summary>Specifies how the z-order of a frame (image, text frame, chart, barcode or drawing) can be changed.</summary>
		</member>
		<member name="F:TXTextControl.ZOrder.Bottom">
			<summary>If the frame is in front of the text, it becomes the bottommost of all objects in front of the text. If it is behind the text, it is becomes the bottommost of all objects.</summary>
		</member>
		<member name="F:TXTextControl.ZOrder.BottomMost">
			<summary>The frame is moved behind the text below all other objects. This member is only possible, if the insertion mode is BehindTheText.</summary>
		</member>
		<member name="F:TXTextControl.ZOrder.Down">
			<summary>The frame is moved down one plane. If it is the bottommost object in front of the text, it is not moved behind the text.</summary>
		</member>
		<member name="F:TXTextControl.ZOrder.TopMost">
			<summary>The frame is moved in front of the text at the top of all other objects.</summary>
		</member>
		<member name="F:TXTextControl.ZOrder.Top">
			<summary>If the frame is behind the text, it becomes the topmost of all objects behind the text. If it is in front of the text, it becomes the topmost of all objects.</summary>
		</member>
		<member name="F:TXTextControl.ZOrder.Up">
			<summary>The frame is moved up one plane. If it is the topmost object behind the text, it is not moved in front of the text.</summary>
		</member>
		<member name="T:TXTextControl.AdaptFontEventArgs">
			<summary>The AdaptFontEventArgs class provides data for the TextControl.AdaptFont, WPF.TextControl.AdaptFont and ServerTextControl.AdaptFont events.</summary>
		</member>
		<member name="P:TXTextControl.AdaptFontEventArgs.AdaptedFontName">
			<summary>Gets or sets the adapted font.</summary>
		</member>
		<member name="P:TXTextControl.AdaptFontEventArgs.FontName">
			<summary>Gets the name of the original font which must be adapted.</summary>
		</member>
		<member name="P:TXTextControl.AdaptFontEventArgs.SupportedFonts">
			<summary>Gets a list of all fonts currently supported.</summary>
		</member>
		<member name="T:TXTextControl.ApplicationField">
			<summary>The ApplicationField class supports text field formats of applications such as Microsoft Word.</summary>
		</member>
		<member name="M:TXTextControl.ApplicationField.#ctor(TXTextControl.ApplicationFieldFormat,System.String,System.String,System.String[])">
			<summary>Initializes a new instance of the ApplicationField class. The format of the parameters depends on the application that supports the field. The field is initialized without syntax check.</summary>
			<param name="format">Specifies the format of the field.</param>
			<param name="typeName">Specifies the type name of the field.</param>
			<param name="text">Specifies the visible text of the field.</param>
			<param name="parameters">Specifies an array of strings which are the field's parameters.</param>
		</member>
		<member name="P:TXTextControl.ApplicationField.Format">
			<summary>Gets or sets the field's format.</summary>
		</member>
		<member name="P:TXTextControl.ApplicationField.TypeName">
			<summary>Gets or sets the field's type name.</summary>
		</member>
		<member name="P:TXTextControl.ApplicationField.Parameters">
			<summary>Gets or sets the field's parameters.</summary>
		</member>
		<member name="T:TXTextControl.ApplicationFieldCollection">
			<summary>An instance of the ApplicationFieldCollection class contains all created or imported Microsoft Word or Heiler HighEdit fields represented through objects of the type ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.ApplicationFieldCollection.Add(TXTextControl.ApplicationField)">
			<summary>Inserts a new object of the type ApplicationField at the current input position.</summary>
			<param name="applicationField">Specifies the field to add.</param>
		</member>
		<member name="M:TXTextControl.ApplicationFieldCollection.Clear(System.Boolean)">
			<summary>Removes all fields of the type ApplicationField from a TX Text Control document.</summary>
			<param name="keepText">If this parameter is set to true, all fields are removed without deleting their visible text.</param>
		</member>
		<member name="M:TXTextControl.ApplicationFieldCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.ApplicationFieldCollection.GetItem">
			<summary>Gets the field at the current input position or null, if there is no such field at the current input position.</summary>
		</member>
		<member name="M:TXTextControl.ApplicationFieldCollection.GetItem(System.Int32)">
			<summary>Gets the field with the specified id, previously set with the ID property.</summary>
			<param name="id">Specifies the field's identifier set with the ID property.</param>
		</member>
		<member name="M:TXTextControl.ApplicationFieldCollection.Remove(TXTextControl.ApplicationField)">
			<summary>Removes a field of the type ApplicationField including its visible text from a TX Text Control document.</summary>
			<param name="applicationField">Specifies the field to remove.</param>
		</member>
		<member name="M:TXTextControl.ApplicationFieldCollection.Remove(TXTextControl.ApplicationField,System.Boolean)">
			<summary>Removes a field of the type ApplicationField from a TX Text Control document. The visible text is deleted depending on the keepText parameter.</summary>
			<param name="applicationField">Specifies the field to remove.</param>
			<param name="keepText">If this parameter is set to true, the field is removed without deleting its visible text.</param>
		</member>
		<member name="T:TXTextControl.AutoSize">
			<summary>The AutoSize class is used with the TextControl.AutoControlSize property, to enable automatic expansion or shrinking of a Text Control's width or height.</summary>
		</member>
		<member name="M:TXTextControl.AutoSize.#ctor(TXTextControl.AutoSizeDirection,TXTextControl.AutoSizeDirection,System.Drawing.Size,System.Drawing.Size)">
			<summary>Initializes a new instance of the AutoSize class. The constructor offers the individual setting of all features.</summary>
			<param name="expand">Specifies possible directions for expanding the control.</param>
			<param name="shrink">Specifies possible directions for shrinking the control.</param>
			<param name="maxSize">Specifies the maximum size, in twips, for expanding the control.</param>
			<param name="minSize">Specifies the minimum size, in twips, for shrinking the control.</param>
		</member>
		<member name="P:TXTextControl.AutoSize.AutoExpand">
			<summary>Gets or sets possible directions for expanding the control.</summary>
		</member>
		<member name="P:TXTextControl.AutoSize.AutoShrink">
			<summary>Gets or sets possible directions for shrinking the control.</summary>
		</member>
		<member name="P:TXTextControl.AutoSize.MaxSize">
			<summary>Gets or sets the maximum size, in pixels, for expanding the control.</summary>
		</member>
		<member name="P:TXTextControl.AutoSize.MinSize">
			<summary>Gets or sets the minimum size, in pixels, for shrinking the control.</summary>
		</member>
		<member name="T:TXTextControl.BookmarkDialog">
			<summary>The BookmarkDialog class implements a Windows Forms dialog box to insert a DocumentTarget at the current input position.</summary>
		</member>
		<member name="M:TXTextControl.BookmarkDialog.#ctor(TXTextControl.TextControl)">
			<summary>Creates a BookmarkDialog object for the specified Windows Forms TextControl.</summary>
			<param name="textControl">Specifies the TextControl for which the dialog box is opened.</param>
		</member>
		<member name="T:TXTextControl.BookmarkDialog.DialogItem">
			<summary>Each DialogItem represents an item in a BookmarkDialog dialog box.</summary>
		</member>
		<member name="F:TXTextControl.BookmarkDialog.DialogItem.TXITEM_BookmarkNameLabel">
			<summary>Identifies the Bookmark Name label.</summary>
		</member>
		<member name="F:TXTextControl.BookmarkDialog.DialogItem.TXITEM_BookmarkName">
			<summary>Identifies the Bookmark Name text box.</summary>
		</member>
		<member name="F:TXTextControl.BookmarkDialog.DialogItem.TXITEM_Deletable">
			<summary>Identifies the Deletable check box.</summary>
		</member>
		<member name="F:TXTextControl.BookmarkDialog.DialogItem.TXITEM_OK">
			<summary>Identifies the OK button.</summary>
		</member>
		<member name="F:TXTextControl.BookmarkDialog.DialogItem.TXITEM_Cancel">
			<summary>Identifies the Cancel button.</summary>
		</member>
		<member name="M:TXTextControl.BookmarkDialog.FindItem(BookmarkDialog.DialogItem)">
			<summary>Finds a control that has the provided identifier name.</summary>
			<param name="dialogItem">The name of the requested control represented by an enum of type BookmarkDialog.DialogItem.</param>
		</member>
		<member name="T:TXTextControl.ButtonBar">
			<summary>The ButtonBar class represents a Windows Forms tool bar which can be used to show or to set font and paragraph attributes of a Windows Forms TextControl.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.ResetButtonOffsets">
			<summary>Resets the offset array to its default state.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.ResetButtonPositions">
			<summary>Resets the button array to its default state.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.ResetButtonSeparators">
			<summary>Resets the separator array to its default state.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.ResetDisplayColors">
			<summary>Resets all display colors of a button bar to their system dependent default values.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.BorderStyle">
			<summary>Gets or sets the border style of the button bar.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.ButtonOffsets">
			<summary>Gets or sets an array of additional offsets, in pixels, between the buttons.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.ButtonPositions">
			<summary>Gets or sets an array of buttons the button bar consists of.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.ButtonSeparators">
			<summary>Gets or sets an array of boolean values specifying whether or not a separator is drawn between two buttons.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.ButtonStyle">
			<summary>Gets or sets the painting style of the buttons.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.DisplayColors">
			<summary>Gets or sets the colors of the button bar.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.ReadOnly">
			<summary>Gets or sets a value determining the button bar's read only mode.</summary>
		</member>
		<member name="T:TXTextControl.ButtonBar.Colors">
			<summary>The ButtonBar.Colors class gets, sets or resets the display colors of a Windows Forms ButtonBar control.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.Colors.#ctor">
			<summary>Initializes a new instance of the ButtonBar.Colors class. After creating the object with this constuctor, individual colors can be set. If the Colors object is assigned to the ButtonBar.DisplayColors property, non-set colors are reset to their system dependent default values.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.Colors.ResetBackColor">
			<summary>Resets the button bar's BackColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.Colors.ResetButtonBackColorBottom">
			<summary>Resets the button bar's ButtonBackColorBottom to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.Colors.ResetButtonBackColorMiddle">
			<summary>Resets the button bar's ButtonBackColorMiddle to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.Colors.ResetButtonBackColorTop">
			<summary>Resets the button bar's ButtonBackColorTop to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.Colors.ResetButtonHotTrackBottom">
			<summary>Resets the button bar's ButtonHotTrackBottom to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.Colors.ResetButtonHotTrackTop">
			<summary>Resets the button bar's ButtonHotTrackTop to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.Colors.ResetButtonSelectedBottom">
			<summary>Resets the button bar's ButtonSelectedBottom to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.Colors.ResetButtonSelectedTop">
			<summary>Resets the button bar's ButtonSelectedTop to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.Colors.ResetButtonPressedBottom">
			<summary>Resets the button bar's ButtonPressedBottom to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.Colors.ResetButtonPressedTop">
			<summary>Resets the button bar's ButtonPressedTop to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.Colors.ResetButtonFrameColor">
			<summary>Resets the button bar's ButtonFrameColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.Colors.ResetComboBoxBackColor">
			<summary>Resets the button bar's ComboBoxBackColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.Colors.ResetForeColor">
			<summary>Resets the button bar's ForeColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.Colors.ResetGradientBackColor">
			<summary>Resets the button bar's GradientBackColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.Colors.ResetSeparatorColorDark">
			<summary>Resets the button bar's SeparatorColorDark to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ButtonBar.Colors.ResetSeparatorColorLight">
			<summary>Resets the button bar's SeparatorColorLight to its system dependent default value.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.Colors.BackColor">
			<summary>Gets or sets the background color at the left edge of the button bar.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.Colors.ButtonBackColorBottom">
			<summary>Gets or sets the background color at the bottom of a button.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.Colors.ButtonBackColorMiddle">
			<summary>Gets or sets the background color in the middle of a button.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.Colors.ButtonBackColorTop">
			<summary>Gets or sets the background color at the top of a button.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.Colors.ButtonHotTrackBottom">
			<summary>Gets or sets the background color at the bottom of a button, if the mouse cursor is over the button.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.Colors.ButtonHotTrackTop">
			<summary>Gets or sets the background color at the top of a button, if the mouse cursor is over the button.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.Colors.ButtonSelectedBottom">
			<summary>Gets or sets the background color at the bottom of a button used when the button is selected.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.Colors.ButtonSelectedTop">
			<summary>Gets or sets the background color at the top of a button used when the button is selected.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.Colors.ButtonPressedBottom">
			<summary>Gets or sets the background color at the bottom of a button used when the button is pressed down.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.Colors.ButtonPressedTop">
			<summary>Gets or sets the background color at the top of a button used when the button is pressed down.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.Colors.ButtonFrameColor">
			<summary>Gets or sets the frame color of a selected or pressed button.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.Colors.ComboBoxBackColor">
			<summary>Gets or sets the background color of the combo boxes.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.Colors.ForeColor">
			<summary>Gets or sets the color used for text and the button images.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.Colors.GradientBackColor">
			<summary>Gets or sets the background color at the right edge of the button bar.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.Colors.SeparatorColorDark">
			<summary>Gets or sets the color of the dark part of a separator.</summary>
		</member>
		<member name="P:TXTextControl.ButtonBar.Colors.SeparatorColorLight">
			<summary>Gets or sets the color of the light part of a separator.</summary>
		</member>
		<member name="T:TXTextControl.DeleteBookmarksDialog">
			<summary>The DeleteBookmarksDialog class implements a Windows Forms dialog box which shows all targets in the current document.</summary>
		</member>
		<member name="M:TXTextControl.DeleteBookmarksDialog.#ctor(TXTextControl.TextControl)">
			<summary>Creates a DeleteBookmarksDialog object for the specified Windows Forms TextControl.</summary>
			<param name="textControl">Specifies the TextControl for which the dialog box is opened.</param>
		</member>
		<member name="T:TXTextControl.DeleteBookmarksDialog.DialogItem">
			<summary>Each DialogItem represents an item in a DeleteBookmarksDialog dialog box.</summary>
		</member>
		<member name="F:TXTextControl.DeleteBookmarksDialog.DialogItem.TXITEM_BookmarkListLabel">
			<summary>Identifies the bookmark list label.</summary>
		</member>
		<member name="F:TXTextControl.DeleteBookmarksDialog.DialogItem.TXITEM_BookmarkList">
			<summary>Identifies the bookmark listbox.</summary>
		</member>
		<member name="F:TXTextControl.DeleteBookmarksDialog.DialogItem.TXITEM_DeleteBookmark">
			<summary>Identifies the Delete button.</summary>
		</member>
		<member name="F:TXTextControl.DeleteBookmarksDialog.DialogItem.TXITEM_GotoBookmark">
			<summary>Identifies the Goto button.</summary>
		</member>
		<member name="F:TXTextControl.DeleteBookmarksDialog.DialogItem.TXITEM_Cancel">
			<summary>Identifies the Cancel button.</summary>
		</member>
		<member name="M:TXTextControl.DeleteBookmarksDialog.FindItem(DeleteBookmarksDialog.DialogItem)">
			<summary>Finds a control that has the provided identifier name.</summary>
			<param name="dialogItem">The name of the requested control represented by an enum of type DeleteBookmarksDialog.DialogItem.</param>
		</member>
		<member name="T:TXTextControl.DigitalSignature">
			<summary>An instance of the DigitalSignature class represents an X.509 certificate which can be used to digitally sign a PDF or PDF/A document.</summary>
		</member>
		<member name="M:TXTextControl.DigitalSignature.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)">
			<summary>Initializes a new instance of the DigitalSignature class.</summary>
			<param name="x509">Specifies an X509Certificate2 object which represents an X.509 certificate.</param>
			<param name="timeServerURL">Specifies the URL of a time server which is used to get a time stamp for the certification.</param>
		</member>
		<member name="T:TXTextControl.DocumentLink">
			<summary>The DocumentLink class represents a link in a Text Control document that points to a target in the same document.</summary>
		</member>
		<member name="M:TXTextControl.DocumentLink.#ctor(System.String,TXTextControl.DocumentTarget)">
			<summary>Initializes a new instance of the DocumentLink class.</summary>
			<param name="text">Specifies the visible text of the link.</param>
			<param name="documentTarget">Specifies an object of the type DocumentTarget specifying to where the link points.</param>
		</member>
		<member name="P:TXTextControl.DocumentLink.DocumentTarget">
			<summary>Gets or sets an object of the type DocumentTarget specifying to where the link points.</summary>
		</member>
		<member name="T:TXTextControl.DocumentLinkCollection">
			<summary>An instance of the DocumentLinkCollection class contains all links in a Text Control document that point to targets in the same document.</summary>
		</member>
		<member name="M:TXTextControl.DocumentLinkCollection.Add(TXTextControl.DocumentLink)">
			<summary>Inserts a new document link at the current input position.</summary>
			<param name="documentLink">Specifies the document link to add.</param>
		</member>
		<member name="M:TXTextControl.DocumentLinkCollection.Clear(System.Boolean)">
			<summary>Removes all document links from a Text Control document.</summary>
			<param name="keepText">If this parameter is set to true, all document links are removed without deleting their texts.</param>
		</member>
		<member name="M:TXTextControl.DocumentLinkCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.DocumentLinkCollection.GetItem">
			<summary>Gets the document link at the current input position or null if there is no document link at the current input position.</summary>
		</member>
		<member name="M:TXTextControl.DocumentLinkCollection.GetItem(System.Int32)">
			<summary>Gets the document link with the specified id, previously set with the DocumentLink.ID property.</summary>
			<param name="id">Specifies the document link's identifier.</param>
		</member>
		<member name="M:TXTextControl.DocumentLinkCollection.Remove(TXTextControl.DocumentLink)">
			<summary>Removes a document link including its visible text from a Text Control document.</summary>
			<param name="documentLink">Specifies the document link to remove.</param>
		</member>
		<member name="M:TXTextControl.DocumentLinkCollection.Remove(TXTextControl.DocumentLink,System.Boolean)">
			<summary>Removes a document link from a Text Control document. The visible text is deleted depending on the keepText parameter.</summary>
			<param name="documentLink">Specifies the document link to remove.</param>
			<param name="keepText">If this parameter is set to true, the document link is removed without deleting its text.</param>
		</member>
		<member name="T:TXTextControl.DocumentLinkEventArgs">
			<summary>The DocumentLinkEventArgs class provides data for the TextControl.DocumentLinkClicked event.</summary>
		</member>
		<member name="P:TXTextControl.DocumentLinkEventArgs.DocumentLink">
			<summary>Gets an object that represents the clicked document link.</summary>
		</member>
		<member name="T:TXTextControl.DocumentTarget">
			<summary>The DocumentTarget class represents a text position in a Text Control document that is a target of a document link.</summary>
		</member>
		<member name="M:TXTextControl.DocumentTarget.#ctor(System.String)">
			<summary>Initializes a new instance of the DocumentTarget class.</summary>
			<param name="targetName">Specifies the name of the target.</param>
		</member>
		<member name="P:TXTextControl.DocumentTarget.TargetName">
			<summary>Gets or sets the name of the target.</summary>
		</member>
		<member name="T:TXTextControl.DocumentTargetCollection">
			<summary>An instance of the DocumentTargetCollection class contains all targets in a Text Control document represented through objects of the type DocumentTarget.</summary>
		</member>
		<member name="M:TXTextControl.DocumentTargetCollection.Add(TXTextControl.DocumentTarget)">
			<summary>Inserts the specified target at the current input position.</summary>
			<param name="documentTarget">Specifies the document target to add.</param>
		</member>
		<member name="M:TXTextControl.DocumentTargetCollection.Clear">
			<summary>Removes all document targets from a Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.DocumentTargetCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.DocumentTargetCollection.GetItem">
			<summary>Gets the document target at the current input position or null if there is no document target at the current input position.</summary>
		</member>
		<member name="M:TXTextControl.DocumentTargetCollection.GetItem(System.Int32)">
			<summary>Gets the document target with the specified id, previously set with the DocumentTarget.ID property.</summary>
			<param name="id">Specifies the document target's identifier.</param>
		</member>
		<member name="M:TXTextControl.DocumentTargetCollection.Remove(TXTextControl.DocumentTarget)">
			<summary>Removes the specified target from a Text Control document.</summary>
			<param name="documentTarget">Specifies the document target to remove.</param>
		</member>
		<member name="T:TXTextControl.FilterException">
			<summary>The FilterException class informs about errors which can occur when a text filter is used to convert a document to or from another format.</summary>
		</member>
		<member name="M:TXTextControl.FilterException.#ctor(FilterException.FilterError)">
			<summary>Initializes a new instance of the FilterException class with a specified error.</summary>
			<param name="error">The error that is the cause of the current exception.</param>
		</member>
		<member name="M:TXTextControl.FilterException.#ctor(FilterException.FilterError,System.String)">
			<summary>Initializes a new instance of the FilterException class with a specified error and a specified error message.</summary>
			<param name="error">The error that is the cause of the current exception.</param>
			<param name="message">The error message that explains the reason for the exception.</param>
		</member>
		<member name="T:TXTextControl.FilterException.FilterError">
			<summary>Enumerates errors which can occur when a text filter is used to convert a TX Text Control document to or from another format.</summary>
		</member>
		<member name="F:TXTextControl.FilterException.FilterError.WrongFileType">
			<summary>The file type is not supported through the filter.</summary>
		</member>
		<member name="F:TXTextControl.FilterException.FilterError.BadToken">
			<summary>There is a logical error in the file.</summary>
		</member>
		<member name="F:TXTextControl.FilterException.FilterError.OutOfMemory">
			<summary>Unable to allocate enough memory.</summary>
		</member>
		<member name="F:TXTextControl.FilterException.FilterError.CannotRead">
			<summary>File read error.</summary>
		</member>
		<member name="F:TXTextControl.FilterException.FilterError.CannotWrite">
			<summary>File write error.</summary>
		</member>
		<member name="F:TXTextControl.FilterException.FilterError.CannotOpen">
			<summary>Unable to open the file.</summary>
		</member>
		<member name="F:TXTextControl.FilterException.FilterError.FileTooBig">
			<summary>The input file is too big.</summary>
		</member>
		<member name="F:TXTextControl.FilterException.FilterError.Unsupported">
			<summary>Unsupported format version.</summary>
		</member>
		<member name="F:TXTextControl.FilterException.FilterError.Internal">
			<summary>Unspecified internal error.</summary>
		</member>
		<member name="F:TXTextControl.FilterException.FilterError.Obsolete">
			<summary>The filter is obsolete.</summary>
		</member>
		<member name="F:TXTextControl.FilterException.FilterError.NotWellFormed">
			<summary>The file contains not well-formed syntax.</summary>
		</member>
		<member name="F:TXTextControl.FilterException.FilterError.Encrypted">
			<summary>The document cannot be imported because the used encryption scheme is not supported.</summary>
		</member>
		<member name="F:TXTextControl.FilterException.FilterError.NonEmbeddableFont">
			<summary>The document cannot be saved, because it contains a non-embeddable font.</summary>
		</member>
		<member name="F:TXTextControl.FilterException.FilterError.InvalidCertificate">
			<summary>The specified certificate is invalid or has no private key.</summary>
		</member>
		<member name="F:TXTextControl.FilterException.FilterError.InvalidTimeServer">
			<summary>The specified time server does not exist or retrieves invalid data.</summary>
		</member>
		<member name="F:TXTextControl.FilterException.FilterError.InvalidPassword">
			<summary>The specified user-password is invalid.</summary>
		</member>
		<member name="P:TXTextControl.FilterException.Reason">
			<summary>Gets the error which is the cause of this exception.</summary>
		</member>
		<member name="T:TXTextControl.FontSettings">
			<summary>The FontSettings class provides settings determining which fonts can be used in a document.</summary>
		</member>
		<member name="P:TXTextControl.FontSettings.AdaptFontEvent">
			<summary>Specifies whether a TextControl.AdaptFont event is raised, if a font must be adapted.</summary>
		</member>
		<member name="P:TXTextControl.FontSettings.EmbeddableFontsOnly">
			<summary>Gets or sets a value specifying that only embeddable fonts can be used in a document.</summary>
		</member>
		<member name="P:TXTextControl.FontSettings.ScalableFontsOnly">
			<summary>Gets or sets a value specifying that only free scalable fonts can be used in a document.</summary>
		</member>
		<member name="P:TXTextControl.FontSettings.TrueTypeFontsOnly">
			<summary>Gets or sets a value specifying that only TrueType and OpenType fonts can be used in a document.</summary>
		</member>
		<member name="T:TXTextControl.FormattingStyle">
			<summary>The FormattingStyle class is the base class for the InlineStyle and ParagraphStyle classes.</summary>
		</member>
		<member name="M:TXTextControl.FormattingStyle.Apply">
			<summary>Applies all set attributes of the style to the current document.</summary>
		</member>
		<member name="P:TXTextControl.FormattingStyle.Baseline">
			<summary>Gets or sets the baseline alignment, in twips, of the style.</summary>
		</member>
		<member name="P:TXTextControl.FormattingStyle.BaseStyle">
			<summary>Gets the FormattingStyle which is the base style of this style.</summary>
		</member>
		<member name="P:TXTextControl.FormattingStyle.Bold">
			<summary>Gets or sets the bold attribute of the style.</summary>
		</member>
		<member name="P:TXTextControl.FormattingStyle.FontName">
			<summary>Gets or sets the font of the style.</summary>
		</member>
		<member name="P:TXTextControl.FormattingStyle.FontSize">
			<summary>Gets or sets the font's size of the style.</summary>
		</member>
		<member name="P:TXTextControl.FormattingStyle.ForeColor">
			<summary>Gets or sets the style's color used to display the text.</summary>
		</member>
		<member name="P:TXTextControl.FormattingStyle.Italic">
			<summary>Gets or sets the italic attribute of the style.</summary>
		</member>
		<member name="P:TXTextControl.FormattingStyle.Name">
			<summary>Gets or sets the name of the style.</summary>
		</member>
		<member name="P:TXTextControl.FormattingStyle.Strikeout">
			<summary>Gets or sets the strikeout attribute of the style.</summary>
		</member>
		<member name="P:TXTextControl.FormattingStyle.TextBackColor">
			<summary>Gets or sets the style's text background color.</summary>
		</member>
		<member name="P:TXTextControl.FormattingStyle.Underline">
			<summary>Gets or sets underlining styles for the style.</summary>
		</member>
		<member name="T:TXTextControl.FormattingStyleCollection">
			<summary>The FormattingStyleCollection class is the base class of the ParagraphStyleCollection and InlineStyleCollection classes.</summary>
		</member>
		<member name="M:TXTextControl.FormattingStyleCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="M:TXTextControl.FormattingStyleCollection.Remove(System.String)">
			<summary>Removes a formatting style from a Text Control document.</summary>
			<param name="styleName">Specifies the name of the style to remove.</param>
		</member>
		<member name="P:TXTextControl.FormattingStyleCollection.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
		</member>
		<member name="P:TXTextControl.FormattingStyleCollection.IsSynchronized">
			<summary>Returns true if the collection is designed to be thread safe, otherwise, it returns false.</summary>
		</member>
		<member name="P:TXTextControl.FormattingStyleCollection.SyncRoot">
			<summary>Gets an object that can be used to synchronize access to the collection.</summary>
		</member>
		<member name="T:TXTextControl.FrameBase">
			<summary>The FrameBase class is the base class of the Image, TextFrame, ChartFrame, BarcodeFrame and DrawingFrame classes.</summary>
		</member>
		<member name="M:TXTextControl.FrameBase.ChangeZOrder(TXTextControl.ZOrder)">
			<summary>Changes the frame's z-order.</summary>
			<param name="zOrder">Specifies how the z-order is changed.</param>
		</member>
		<member name="P:TXTextControl.FrameBase.Alignment">
			<summary>Gets or sets the frame's horizontal alignment when it is anchored to a paragraph.</summary>
		</member>
		<member name="P:TXTextControl.FrameBase.ID">
			<summary>Gets or sets an identifier for the frame.</summary>
		</member>
		<member name="P:TXTextControl.FrameBase.InsertionMode">
			<summary>Gets or sets a value determining whether the frame is treated as a single character or the document's text either flows around or overwrites the frame.</summary>
		</member>
		<member name="P:TXTextControl.FrameBase.Location">
			<summary>Gets or sets, in twips, the frame's current location.</summary>
		</member>
		<member name="P:TXTextControl.FrameBase.Moveable">
			<summary>Determines whether a frame can be moved in the document at run time with the built-in mouse interface.</summary>
		</member>
		<member name="P:TXTextControl.FrameBase.Name">
			<summary>Gets or sets a name for the frame.</summary>
		</member>
		<member name="P:TXTextControl.FrameBase.Size">
			<summary>Gets or sets the frame's size in twips.</summary>
		</member>
		<member name="P:TXTextControl.FrameBase.Sizeable">
			<summary>Determines whether the frame can be resized at run time with the built-in mouse interface.</summary>
		</member>
		<member name="P:TXTextControl.FrameBase.TextDistances">
			<summary>Gets or sets the distances, in twips, between the frame and the document's text.</summary>
		</member>
		<member name="P:TXTextControl.FrameBase.TextPosition">
			<summary>Read only. Gets the frame's character position in the document's text (one-based).</summary>
		</member>
		<member name="T:TXTextControl.FrameBaseCollection">
			<summary>The FrameBaseCollection class is the base class of the ImageCollection and TextFrameCollection classes.</summary>
		</member>
		<member name="M:TXTextControl.FrameBaseCollection.Clear">
			<summary>Removes all objects from the collection and from the document.</summary>
		</member>
		<member name="M:TXTextControl.FrameBaseCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="P:TXTextControl.FrameBaseCollection.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
		</member>
		<member name="P:TXTextControl.FrameBaseCollection.IsSynchronized">
			<summary>Returns true if the collection is designed to be thread safe, otherwise, it returns false.</summary>
		</member>
		<member name="P:TXTextControl.FrameBaseCollection.SyncRoot">
			<summary>Gets an object that can be used to synchronize access to the collection.</summary>
		</member>
		<member name="T:TXTextControl.FrameCollection">
			<summary>An instance of the FrameCollection class contains all images, text frames and charts in a document.</summary>
		</member>
		<member name="M:TXTextControl.FrameCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.FrameCollection.GetItem">
			<summary>Gets the image, text frame, chart, barcode or drawing selected by the user.</summary>
		</member>
		<member name="M:TXTextControl.FrameCollection.GetItem(System.Int32)">
			<summary>Gets the image, text frame, chart, barcode or drawing with the specified identifier. An identifier can be set with the FrameBase.ID property.</summary>
			<param name="id">Specifies the frame's identifier.</param>
		</member>
		<member name="M:TXTextControl.FrameCollection.GetItem(System.String)">
			<summary>Gets the image, text frame, chart, barcode or drawing with the specified name. A name can be set with the FrameBase.Name property.</summary>
			<param name="name">Specifies the frame's name.</param>
		</member>
		<member name="M:TXTextControl.FrameCollection.Remove(TXTextControl.FrameBase)">
			<summary>Removes a frame (image, text frame, chart, barcode or drawing) from a document.</summary>
			<param name="frame">Specifies the image, text frame, chart, barcode or drawing to remove.</param>
		</member>
		<member name="T:TXTextControl.FrameEventArgs">
			<summary>The FrameEventArgs class provides data for all events that occur with frames.</summary>
		</member>
		<member name="P:TXTextControl.FrameEventArgs.Frame">
			<summary>Gets an object that represents the frame which causes the event.</summary>
		</member>
		<member name="T:TXTextControl.GotoDialog">
			<summary>The GotoDialog class implements a Windows Forms dialog box which can be used to move the current input position to a certain page, section, line, table or bookmark.</summary>
		</member>
		<member name="M:TXTextControl.GotoDialog.#ctor(TXTextControl.TextControl)">
			<summary>Creates a GotoDialog object for the specified Windows Forms TextControl.</summary>
			<param name="textControl">Specifies the TextControl for which the dialog box is opened.</param>
		</member>
		<member name="T:TXTextControl.GotoDialog.DialogItem">
			<summary>Each DialogItem represents an item in a GotoDialog dialog box.</summary>
		</member>
		<member name="F:TXTextControl.GotoDialog.DialogItem.TXITEM_GotoLabel">
			<summary>Identifies the label of the Go to listbox.</summary>
		</member>
		<member name="F:TXTextControl.GotoDialog.DialogItem.TXITEM_GotoList">
			<summary>Identifies the Go to listbox.</summary>
		</member>
		<member name="F:TXTextControl.GotoDialog.DialogItem.TXITEM_NumberLabel">
			<summary>Identifies the label of the Number textbox.</summary>
		</member>
		<member name="F:TXTextControl.GotoDialog.DialogItem.TXITEM_Number">
			<summary>Identifies the Number respectively Bookmark combobox.</summary>
		</member>
		<member name="F:TXTextControl.GotoDialog.DialogItem.TXITEM_GotoPrevious">
			<summary>Identifies Previous button.</summary>
		</member>
		<member name="F:TXTextControl.GotoDialog.DialogItem.TXITEM_GotoNext">
			<summary>Identifies the Next button.</summary>
		</member>
		<member name="F:TXTextControl.GotoDialog.DialogItem.TXITEM_Close">
			<summary>Identifies the Close button.</summary>
		</member>
		<member name="M:TXTextControl.GotoDialog.FindItem(GotoDialog.DialogItem)">
			<summary>Finds a control that has the provided identifier name.</summary>
			<param name="dialogItem">The name of the requested control represented by an enum of type GotoDialog.DialogItem.</param>
		</member>
		<member name="T:TXTextControl.HeaderFooter">
			<summary>An instance of the HeaderFooter class represents a header or footer in a Text Control document.The TextControl class has events that inform about different occurrences like activation or deactivation of a header or footer.</summary>
		</member>
		<member name="M:TXTextControl.HeaderFooter.Activate">
			<summary>Activates a header or a footer.</summary>
		</member>
		<member name="M:TXTextControl.HeaderFooter.Deactivate">
			<summary>Deactivates a header or a footer.</summary>
		</member>
		<member name="M:TXTextControl.HeaderFooter.Find(System.String,System.Int32,TXTextControl.FindOptions)">
			<summary>Finds a text string in a header or footer.</summary>
			<param name="text">Specifies the text to search for.</param>
			<param name="start">Specifies the text position where the search starts, beginning with 0.</param>
			<param name="options">Specifies search options.</param>
		</member>
		<member name="M:TXTextControl.HeaderFooter.GetTextFields(TXTextControl.TextFieldType)">
			<summary>Returns a collection containing text fields of the specified types.</summary>
			<param name="fieldType">Specifies types of text fields.</param>
		</member>
		<member name="P:TXTextControl.HeaderFooter.ApplicationFields">
			<summary>Gets a collection of all Microsoft Word or Heiler HighEdit fields that have been created or imported from a Microsoft Word or RTF document.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.Barcodes">
			<summary>Gets a collection of all barcodes contained in a header or footer.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.Charts">
			<summary>Gets a collection of all charts contained in a header or footer.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.ConnectedToPrevious">
			<summary>Gets or sets a value specifying whether the header or footer is connected with the header or footer of the previous section.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.Distance">
			<summary>Gets or sets the distance, in twips, of a header or footer to the top or bottom of the page.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.DocumentLinks">
			<summary>Gets a collection of all links in a header or footer which point to targets in the same document.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.DocumentTargets">
			<summary>Gets a collection of all targets in a header or footer.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.Drawings">
			<summary>Gets a collection of all drawings contained in a header or footer.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.Frames">
			<summary>Gets a collection of all images, textframes, charts, barcodes and drawings in a header or footer.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.HypertextLinks">
			<summary>Gets a collection of all hypertext links the header or footer contains.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.Images">
			<summary>Gets a collection of all images the header or footer contains.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.Lines">
			<summary>Gets a collection of all text lines the header or footer contains.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.MisspelledWords">
			<summary>Gets a collection of all misspelled words the header or footer contains.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.PageNumberFields">
			<summary>Gets a collection of page number fields in the header or footer.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.Paragraphs">
			<summary>Gets a collection of all paragraphs the header or footer contains.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.SectionNumber">
			<summary>Returns the number of the section to which the header or footer belongs.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.Selection">
			<summary>Gets or sets the current selection in a header or footer.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.SubTextParts">
			<summary>Gets a collection of all subtextparts in the header or footer.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.Tables">
			<summary>Gets a collection of all tables in the header or footer.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.TextChars">
			<summary>Gets a collection of all characters the header or footer contains.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.TextFields">
			<summary>Gets a collection of all standard text fields in the header or footer.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.TextFrames">
			<summary>Gets a collection of all text frames contained in a header or footer.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooter.Type">
			<summary>Gets the type of the header or footer.</summary>
		</member>
		<member name="T:TXTextControl.HeaderFooterCollection">
			<summary>An instance of the HeaderFooterCollection class contains the headers and footers in a Text Control document represented through objects of the type HeaderFooter.</summary>
		</member>
		<member name="M:TXTextControl.HeaderFooterCollection.Add(TXTextControl.HeaderFooterType)">
			<summary>Adds a new header or footer to a Text Control document or to a certain section of the document. If a header or footer is added to the complete document the first section receives the header or footer and all other sections receive headers or footers which are connected to their previous section. To add more than one header or footer a combination of the HeaderFooterType enumeration values can be used.</summary>
			<param name="headerFooterType">Specifies the headers and/or footers to add.</param>
		</member>
		<member name="M:TXTextControl.HeaderFooterCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.HeaderFooterCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="M:TXTextControl.HeaderFooterCollection.GetItem(TXTextControl.HeaderFooterType)">
			<summary>Gets a particular header or footer from the collection. If the specified header or footer does not exist in the collection an ArgumentException is thrown.</summary>
			<param name="headerFooterType">Specifies the header or footer to return.</param>
		</member>
		<member name="M:TXTextControl.HeaderFooterCollection.Remove(TXTextControl.HeaderFooterType)">
			<summary>Removes a header or footer from a Text Control document or from a certain section. To remove more than one header or footer a combination of the HeaderFooterType enumeration can be used.</summary>
			<param name="headerFooterType">Specifies the headers and/or footers to remove.</param>
		</member>
		<member name="P:TXTextControl.HeaderFooterCollection.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
		</member>
		<member name="T:TXTextControl.HeaderFooterEventArgs">
			<summary>The HeaderFooterEventArgs class provides data for the TextControl.HeaderFooterActivated and TextControl.HeaderFooterDeactivated events.</summary>
		</member>
		<member name="P:TXTextControl.HeaderFooterEventArgs.HeaderFooter">
			<summary>Gets an object that represents the header or footer which causes the event.</summary>
		</member>
		<member name="T:TXTextControl.HyperlinkDialog">
			<summary>The HyperlinkDialog class implements a Windows Forms dialog box for inserting and editing a hyperlink at the current text input position.</summary>
		</member>
		<member name="M:TXTextControl.HyperlinkDialog.#ctor(TXTextControl.TextControl)">
			<summary>Creates a HyperlinkDialog object for the specified Windows Forms TextControl.</summary>
			<param name="textControl">Specifies the TextControl for which the dialog box is opened.</param>
		</member>
		<member name="T:TXTextControl.HyperlinkDialog.DialogItem">
			<summary>Each DialogItem represents an item in a HyperlinkDialog dialog box.</summary>
		</member>
		<member name="F:TXTextControl.HyperlinkDialog.DialogItem.TXITEM_HyperlinkTextLabel">
			<summary>Identifies the Hyperlink text label.</summary>
		</member>
		<member name="F:TXTextControl.HyperlinkDialog.DialogItem.TXITEM_HyperlinkText">
			<summary>Identifies the Hyperlink text edit control.</summary>
		</member>
		<member name="F:TXTextControl.HyperlinkDialog.DialogItem.TXITEM_HyperlinkLabel">
			<summary>Identifies the Hyperlink label.</summary>
		</member>
		<member name="F:TXTextControl.HyperlinkDialog.DialogItem.TXITEM_Hyperlink">
			<summary>Identifies the Hyperlink edit control.</summary>
		</member>
		<member name="F:TXTextControl.HyperlinkDialog.DialogItem.TXITEM_SelectFile">
			<summary>Identifies the Select File button.</summary>
		</member>
		<member name="F:TXTextControl.HyperlinkDialog.DialogItem.TXITEM_BookmarkListLabel">
			<summary>Identifies the bookmark list label.</summary>
		</member>
		<member name="F:TXTextControl.HyperlinkDialog.DialogItem.TXITEM_BookmarkList">
			<summary>Identifies the bookmark listbox.</summary>
		</member>
		<member name="F:TXTextControl.HyperlinkDialog.DialogItem.TXITEM_ShowBookmarks">
			<summary>Identifies the Show Bookmarks label.</summary>
		</member>
		<member name="F:TXTextControl.HyperlinkDialog.DialogItem.TXITEM_CurrentDocument">
			<summary>Identifies the Current Document radio button.</summary>
		</member>
		<member name="F:TXTextControl.HyperlinkDialog.DialogItem.TXITEM_SelectedFile">
			<summary>Identifies the Selected File radio button.</summary>
		</member>
		<member name="F:TXTextControl.HyperlinkDialog.DialogItem.TXITEM_DeleteHyperlink">
			<summary>Identifies the Delete Hyperlink button.</summary>
		</member>
		<member name="F:TXTextControl.HyperlinkDialog.DialogItem.TXITEM_OK">
			<summary>Identifies the OK button.</summary>
		</member>
		<member name="F:TXTextControl.HyperlinkDialog.DialogItem.TXITEM_Cancel">
			<summary>Identifies the Cancel button.</summary>
		</member>
		<member name="M:TXTextControl.HyperlinkDialog.FindItem(HyperlinkDialog.DialogItem)">
			<summary>Finds a control that has the provided identifier name.</summary>
			<param name="dialogItem">The name of the requested control represented by an enum of type HyperlinkDialog.DialogItem.</param>
		</member>
		<member name="T:TXTextControl.HypertextLink">
			<summary>The HypertextLink class represents a hypertext link in a Text Control document that points to a target outside of the document.</summary>
		</member>
		<member name="M:TXTextControl.HypertextLink.#ctor(System.String,System.String)">
			<summary>Initializes a new instance of the HypertextLink class.</summary>
			<param name="text">Specifies the visible text of the hypertext link.</param>
			<param name="target">Specifies a string specifying to where the hypertext link points.</param>
		</member>
		<member name="P:TXTextControl.HypertextLink.Target">
			<summary>Gets or sets a string that specifies the target to where the hypertext link points.</summary>
		</member>
		<member name="T:TXTextControl.HypertextLinkCollection">
			<summary>An instance of the HypertextLinkCollection class contains all hypertext links in a Text Control document represented through objects of the type HypertextLink.</summary>
		</member>
		<member name="M:TXTextControl.HypertextLinkCollection.Add(TXTextControl.HypertextLink)">
			<summary>Inserts a new hypertext link at the current input position.</summary>
			<param name="hypertextLink">Specifies the hypertext link to add.</param>
		</member>
		<member name="M:TXTextControl.HypertextLinkCollection.Clear(System.Boolean)">
			<summary>Removes all hypertext links from a Text Control document.</summary>
			<param name="keepText">If this parameter is set to true, all hypertext links are removed without deleting their texts.</param>
		</member>
		<member name="M:TXTextControl.HypertextLinkCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.HypertextLinkCollection.GetItem">
			<summary>Gets the hypertext link at the current input position or null if there is no hypertext link at the current input position.</summary>
		</member>
		<member name="M:TXTextControl.HypertextLinkCollection.GetItem(System.Int32)">
			<summary>Gets the hypertext link with the specified id. An id can be set with the HypertextLink.ID property.</summary>
			<param name="id">Specifies the hypertext link's identifier.</param>
		</member>
		<member name="M:TXTextControl.HypertextLinkCollection.Remove(TXTextControl.HypertextLink)">
			<summary>Removes a hypertext link including its visible text from a Text Control document.</summary>
			<param name="hypertextLink">Specifies the hypertext link to remove.</param>
		</member>
		<member name="M:TXTextControl.HypertextLinkCollection.Remove(TXTextControl.HypertextLink,System.Boolean)">
			<summary>Removes a hypertext link from a Text Control document. The visible text is deleted depending on the keepText parameter.</summary>
			<param name="hypertextLink">Specifies the hypertext link to remove.</param>
			<param name="keepText">If this parameter is set to true, the hypertext link is removed without deleting its text.</param>
		</member>
		<member name="T:TXTextControl.HypertextLinkEventArgs">
			<summary>The HypertextLinkEventArgs class provides data for the TextControl.HypertextLinkClicked event.</summary>
		</member>
		<member name="P:TXTextControl.HypertextLinkEventArgs.HypertextLink">
			<summary>Gets an object that represents the clicked hypertext link.</summary>
		</member>
		<member name="T:TXTextControl.HyphenateWordEventArgs">
			<summary>The HyphenateWordEventArgs class provides data for the TextControl.HyphenateWord, ServerTextControl.HyphenateWord and WPF.TextControl.HyphenateWord events.</summary>
		</member>
		<member name="P:TXTextControl.HyphenateWordEventArgs.Culture">
			<summary>Gets the culture of the word to hyphenate.</summary>
		</member>
		<member name="P:TXTextControl.HyphenateWordEventArgs.DividePos">
			<summary>Gets or sets the position at which the word should be divided.</summary>
		</member>
		<member name="P:TXTextControl.HyphenateWordEventArgs.MaxDividePos">
			<summary>Gets the maximum dividing position.</summary>
		</member>
		<member name="P:TXTextControl.HyphenateWordEventArgs.Word">
			<summary>Gets the word to hyphenate.</summary>
		</member>
		<member name="T:TXTextControl.IFormattedText">
			<summary>The IFormattedText interface contains properties and methods common to all text parts in a TX Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.IFormattedText.Find(System.String,System.Int32,TXTextControl.FindOptions)">
			<summary>Finds a text string.</summary>
			<param name="text">Specifies the text to search for.</param>
			<param name="start">Specifies the text position where the search starts, beginning with 0.</param>
			<param name="options">Specifies search options.</param>
		</member>
		<member name="M:TXTextControl.IFormattedText.GetTextFields(TXTextControl.TextFieldType)">
			<summary>Returns a collection containing text fields of the specified types.</summary>
			<param name="fieldType">Specifies types of text fields.</param>
		</member>
		<member name="P:TXTextControl.IFormattedText.ApplicationFields">
			<summary>Gets a collection of all Microsoft Word or Heiler HighEdit fields that have been created or imported from a Microsoft Word or RTF document.</summary>
		</member>
		<member name="P:TXTextControl.IFormattedText.Barcodes">
			<summary>Gets a collection of all barcodes.</summary>
		</member>
		<member name="P:TXTextControl.IFormattedText.DocumentLinks">
			<summary>Gets a collection of all links which point to targets in the same document.</summary>
		</member>
		<member name="P:TXTextControl.IFormattedText.DocumentTargets">
			<summary>Gets a collection of all targets.</summary>
		</member>
		<member name="P:TXTextControl.IFormattedText.Drawings">
			<summary>Gets a collection of all drawings.</summary>
		</member>
		<member name="P:TXTextControl.IFormattedText.Frames">
			<summary>Gets a collection of all images, textframes, charts, barcodes and drawings.</summary>
		</member>
		<member name="P:TXTextControl.IFormattedText.HypertextLinks">
			<summary>Gets a collection of all hypertext links.</summary>
		</member>
		<member name="P:TXTextControl.IFormattedText.Images">
			<summary>Gets a collection of all images.</summary>
		</member>
		<member name="P:TXTextControl.IFormattedText.Lines">
			<summary>Gets a collection of all lines the text consists of.</summary>
		</member>
		<member name="P:TXTextControl.IFormattedText.MisspelledWords">
			<summary>Gets a collection of all misspelled words.</summary>
		</member>
		<member name="P:TXTextControl.IFormattedText.Paragraphs">
			<summary>Gets a collection of all paragraphs the text consists of.</summary>
		</member>
		<member name="P:TXTextControl.IFormattedText.Selection">
			<summary>Gets or sets the current selection.</summary>
		</member>
		<member name="P:TXTextControl.IFormattedText.SubTextParts">
			<summary>Gets a collection of all subtextparts.</summary>
		</member>
		<member name="P:TXTextControl.IFormattedText.Tables">
			<summary>Gets a collection of all tables.</summary>
		</member>
		<member name="P:TXTextControl.IFormattedText.TextChars">
			<summary>Gets a collection of all characters the text consists of.</summary>
		</member>
		<member name="P:TXTextControl.IFormattedText.TextFields">
			<summary>Gets a collection of all standard text fields.</summary>
		</member>
		<member name="T:TXTextControl.Image">
			<summary>An instance of the Image class represents an image in a Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.Image.#ctor">
			<summary>Creates an empty instance of the Image class.</summary>
		</member>
		<member name="M:TXTextControl.Image.#ctor(System.String,System.Int32)">
			<summary>Initializes a new image from the specified image file and filter.</summary>
			<param name="fileName">Specifies the name and the path of the file from which the image is loaded.</param>
			<param name="filterIndex">Specifies the index of the filter used to load the image.</param>
		</member>
		<member name="M:TXTextControl.Image.#ctor(System.Drawing.Image)">
			<summary>Initializes a new image from the specified System.Drawing.Image.</summary>
			<param name="image">Specifies a System.Drawing.Image object which is used to initialize the TXTextControl image.</param>
		</member>
		<member name="M:TXTextControl.Image.#ctor(System.IO.MemoryStream)">
			<summary>Initializes a new image from the specified memory stream.</summary>
			<param name="memoryStream">Specifies a memory stream from which the data for the TXTextControl image is read.</param>
		</member>
		<member name="M:TXTextControl.Image.#ctor(System.IO.UnmanagedMemoryStream)">
			<summary>Initializes a new image from the specified unmanaged memory stream.</summary>
			<param name="unmanagedStream">Specifies an unmanaged memory stream from which the data for the TXTextControl image is read.</param>
		</member>
		<member name="P:TXTextControl.Image.ExportCompressionQuality">
			<summary>Sets a value between 1 and 100, which is the quality of a lossy data compression used if this image is saved.</summary>
		</member>
		<member name="P:TXTextControl.Image.ExportFileName">
			<summary>Gets or sets the file name of an image used, if a Text Control document is saved.</summary>
		</member>
		<member name="P:TXTextControl.Image.ExportFilterIndex">
			<summary>Gets or sets the format used if an image is saved.</summary>
		</member>
		<member name="P:TXTextControl.Image.ExportMaxResolution">
			<summary>Gets or sets the maximum resolution in dots per inch used if this image is saved.</summary>
		</member>
		<member name="P:TXTextControl.Image.FileName">
			<summary>Gets or sets the corresponding file name and path from which an inserted image is loaded.</summary>
		</member>
		<member name="P:TXTextControl.Image.FilterIndex">
			<summary>Gets or sets the format used, if an image is inserted.</summary>
		</member>
		<member name="P:TXTextControl.Image.HorizontalScaling">
			<summary>Gets or sets an images's horizontal scaling factor in percent.</summary>
		</member>
		<member name="P:TXTextControl.Image.InsertionMode">
			<summary>(Only for compatibility) Gets or sets a value determining whether an image is treated as a single character or the document's text either flows around or overwrites the image.</summary>
		</member>
		<member name="P:TXTextControl.Image.SaveMode">
			<summary>Determines whether the image is stored through its data or through its file reference.</summary>
		</member>
		<member name="P:TXTextControl.Image.VerticalScaling">
			<summary>Gets or sets an images's vertical scaling factor in percent.</summary>
		</member>
		<member name="T:TXTextControl.ImageCollection">
			<summary>An instance of the ImageCollection class contains all images in a Text Control document or part of the document represented through objects of the type Image.</summary>
		</member>
		<member name="M:TXTextControl.ImageCollection.Add">
			<summary>Inserts an image inline, which means that it is treated in the text like a single character. The image is inserted at the current text input position. A file open dialog box is shown to get the image's file name and filter.</summary>
		</member>
		<member name="M:TXTextControl.ImageCollection.Add(TXTextControl.Image,System.Int32)">
			<summary>Inserts an image inline, which means that it is treated in the text like a single character. The image is inserted at the specified text input position. A file open dialog box is shown to get the image's file name and filter. To avoid opening the dialog box set the Image.FileName and the Image.FilterIndex properties of the specified Image object.</summary>
			<param name="image">Specifies the image to add.</param>
			<param name="textPosition">Specifies the text position at which the image is to be inserted.</param>
		</member>
		<member name="M:TXTextControl.ImageCollection.Add(TXTextControl.Image,TXTextControl.HorizontalAlignment,System.Int32,TXTextControl.ImageInsertionMode)">
			<summary>Inserts a new image which is anchored to the specified text position. It has the specified horizontal alignment and a textflow which is given through the insertionMode parameter. Anchored images are moved with the text. A file open dialog box is shown to get the image's file name and filter. To avoid opening the dialog box set the Image.FileName and the Image.FilterIndex properties of the specified Image object.</summary>
			<param name="image">Specifies the image to add.</param>
			<param name="alignment">Specifies the image's horizontal alignment.</param>
			<param name="textPosition">Specifies the text position at which the image is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.ImageCollection.Add(TXTextControl.Image,System.Drawing.Point,System.Int32,TXTextControl.ImageInsertionMode)">
			<summary>Inserts a new image which is anchored to the specified text position. It has the specified location relative to the paragraph it is anchored to and a textflow which is given through the insertionMode parameter. Anchored images are moved with the text. A file open dialog box is shown to get the image's file name and filter. To avoid opening the dialog box set the Image.FileName and the Image.FilterIndex properties of the specified Image object.</summary>
			<param name="image">Specifies the image to add.</param>
			<param name="location">Specifies the location, in twips, at which the image is to be inserted.</param>
			<param name="textPosition">Specifies the text position at which the image is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.ImageCollection.Add(TXTextControl.Image,System.Int32,System.Drawing.Point,TXTextControl.ImageInsertionMode)">
			<summary>Inserts a new image which has a fixed geometrical position in the document. This position is specified through a page number and a location on this page. A file open dialog box is shown to get the image's file name and filter. To avoid opening the dialog box set the Image.FileName and the Image.FilterIndex properties of the specified Image object.</summary>
			<param name="image">Specifies the image to add.</param>
			<param name="pageNumber">Specifies the number of a page beginning with 1 where the image is located.</param>
			<param name="location">Specifies the location, in twips, at which the image is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.ImageCollection.Add(TXTextControl.Image,System.Drawing.Point,TXTextControl.ImageInsertionMode)">
			<summary>Inserts a new image which has a fixed geometrical position in the document. This position is specified through a location relative to the top left corner of the complete document. All gaps between the pages must be included. A file open dialog box is shown to get the image's file name and filter. To avoid opening the dialog box set the Image.FileName and the Image.FilterIndex properties of the specified Image object.</summary>
			<param name="image">Specifies the image to add.</param>
			<param name="location">Specifies the location, in twips, at which the image is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.ImageCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.ImageCollection.GetItem">
			<summary>Gets the image selected by the user.</summary>
		</member>
		<member name="M:TXTextControl.ImageCollection.GetItem(System.Int32)">
			<summary>Gets the image with the specified identifier. An identifier can be set with the Image.ID property.</summary>
			<param name="id">Specifies the image's identifier.</param>
		</member>
		<member name="M:TXTextControl.ImageCollection.GetItem(System.String)">
			<summary>Gets the image with the specified name. A name can be set with the Image.Name property.</summary>
			<param name="name">Specifies the image's name.</param>
		</member>
		<member name="M:TXTextControl.ImageCollection.Remove(TXTextControl.Image)">
			<summary>Removes an image from a Text Control document.</summary>
			<param name="image">Specifies the image to remove.</param>
		</member>
		<member name="P:TXTextControl.ImageCollection.ExportFilters">
			<summary>Gets all available filters for exporting images.</summary>
		</member>
		<member name="P:TXTextControl.ImageCollection.ImportFilters">
			<summary>Gets all available filters for importing images.</summary>
		</member>
		<member name="T:TXTextControl.ImageEventArgs">
			<summary>The ImageEventArgs class provides data for all events that occur with images.</summary>
		</member>
		<member name="P:TXTextControl.ImageEventArgs.Image">
			<summary>Gets an object that represents the image which causes the event.</summary>
		</member>
		<member name="T:TXTextControl.InlineStyle">
			<summary>The InlineStyle class defines a formatting style that can be used to format single words in a line of text.</summary>
		</member>
		<member name="M:TXTextControl.InlineStyle.#ctor(System.String)">
			<summary>Creates a new instance of the InlineStyle class based on the TextControl root style named [Normal].</summary>
			<param name="name">Specifies the new style's name.</param>
		</member>
		<member name="M:TXTextControl.InlineStyle.#ctor(System.String,System.String)">
			<summary>Creates a new instance of the InlineStyle class based on the specified base style.</summary>
			<param name="name">Specifies the new style's name.</param>
			<param name="baseStyle">Specifies the name of the style the new style based on.</param>
		</member>
		<member name="M:TXTextControl.InlineStyle.#ctor(TXTextControl.InlineStyle)">
			<summary>Creates a new root style that has all attributes of the specified style.</summary>
			<param name="style">Is a style the attributes of which are used to initialize the new style.</param>
		</member>
		<member name="T:TXTextControl.InlineStyle.Attributes">
			<summary>Determines the style's attributes.</summary>
		</member>
		<member name="F:TXTextControl.InlineStyle.Attributes.Baseline">
			<summary>Specifies the attribute set through the style's Baseline property.</summary>
		</member>
		<member name="F:TXTextControl.InlineStyle.Attributes.Bold">
			<summary>Specifies the attribute set through the style's Bold property.</summary>
		</member>
		<member name="F:TXTextControl.InlineStyle.Attributes.FontName">
			<summary>Specifies the attribute set through the style's FontName property.</summary>
		</member>
		<member name="F:TXTextControl.InlineStyle.Attributes.FontSize">
			<summary>Specifies the attribute set through the style's FontSize property.</summary>
		</member>
		<member name="F:TXTextControl.InlineStyle.Attributes.ForeColor">
			<summary>Specifies the attribute set through the style's ForeColor property.</summary>
		</member>
		<member name="F:TXTextControl.InlineStyle.Attributes.Italic">
			<summary>Specifies the attribute set through the style's Italic property.</summary>
		</member>
		<member name="F:TXTextControl.InlineStyle.Attributes.Strikeout">
			<summary>Specifies the attribute set through the style's Strikeout property.</summary>
		</member>
		<member name="F:TXTextControl.InlineStyle.Attributes.TextBackColor">
			<summary>Specifies the attribute set through the style's TextBackColor property.</summary>
		</member>
		<member name="F:TXTextControl.InlineStyle.Attributes.Underline">
			<summary>Specifies the attribute set through the style's Underline property.</summary>
		</member>
		<member name="M:TXTextControl.InlineStyle.IsInheritedFromParagraph(InlineStyle.Attributes)">
			<summary>Informs about whether one or more of the style's attributes are inherited from the surrounding paragraph. Text formatted through an inline style has all the attributes defined through the surrounding paragraph except the attributes explicitly defined through the inline style.</summary>
			<param name="attributes">Specifies one or more attributes.</param>
		</member>
		<member name="M:TXTextControl.InlineStyle.ResetToParagraph(InlineStyle.Attributes)">
			<summary>Resets one or more of the style's attributes to its default value which is the same value as defined for the surrounding paragraph. Text formatted through an inline style has all the attributes defined through the surrounding paragraph except the attributes explicitly defined through the inline style.</summary>
			<param name="attributes">Specifies one or more attributes to reset.</param>
		</member>
		<member name="T:TXTextControl.InlineStyleCollection">
			<summary>An instance of the InlineStyleCollection class contains all inline formatting styles in the current document represented through objects of the type InlineStyle.</summary>
		</member>
		<member name="M:TXTextControl.InlineStyleCollection.Add(TXTextControl.InlineStyle)">
			<summary>Adds to new formatting style to the current document.</summary>
			<param name="inlineStyle">Specifies the style to add.</param>
		</member>
		<member name="M:TXTextControl.InlineStyleCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.InlineStyleCollection.GetItem(System.String)">
			<summary>Gets a particular style from the collection.</summary>
			<param name="styleName">Specifies the name of the style.</param>
		</member>
		<member name="T:TXTextControl.InputFormat">
			<summary>The InputFormat class represents all formatting attributes at the current text input position.</summary>
		</member>
		<member name="M:TXTextControl.InputFormat.GetFontFamilies">
			<summary>Returns an array of strings specifying all supported fonts. These fonts depend on the formatting device set with the WPF.TextControl.FormattingPrinter or TextControl.FormattingPrinter property and on attributes set with the WPF.TextControl.FontSettings or TextControl.FontSettings property.</summary>
		</member>
		<member name="M:TXTextControl.InputFormat.GetFontSizes">
			<summary>Returns an array of strings specifying all possible font sizes for the font at the text input position. If the font is free scalable, standard sizes are returned.</summary>
		</member>
		<member name="M:TXTextControl.InputFormat.GetFontSizes(System.String)">
			<summary>Returns an array of strings specifying all possible font sizes for specified font. If the font is free scalable, standard sizes are returned.</summary>
			<param name="fontFamily">Specifies the font the possible sizes of which are returned.</param>
		</member>
		<member name="P:TXTextControl.InputFormat.AllFrameLines">
			<summary>Gets or sets a value specifying whether all frame lines, including all inner frame lines, are set for the selected text.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.FrameFillColor">
			<summary>Gets or sets the color used to display the frame fill color at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.Bold">
			<summary>Gets or sets a value specifying whether text is bold at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.BottomAligned">
			<summary>Gets or sets a value specifying whether text is bottom aligned at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.VerticallyCentered">
			<summary>Gets or sets a value specifying whether text is vertically centered at the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.BottomDistance">
			<summary>Gets or sets a bottom paragraph distance, in twips, at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.BottomFrameLine">
			<summary>Gets or sets a value specifying whether there is a frame line at the bottom of the text.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.BoxFrame">
			<summary>Gets or sets a value specifying whether there is a complete frame around the text.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.BulletCharacter">
			<summary>Gets or sets the bullet character at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.BulletedList">
			<summary>Gets or sets a value specifying whether there is a bulleted list at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.Centered">
			<summary>Gets or sets a value specifying whether text is centered at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.FontFamily">
			<summary>Gets or sets the font family at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.FontSize">
			<summary>Gets or sets the font's size, in twips, at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.FrameLineColor">
			<summary>Gets or sets the color used to display the color of frame lines at the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.FrameLineWidth">
			<summary>Gets or sets the line width, in twips, of the paragraph's or table's frame at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.HangingIndent">
			<summary>Gets or sets the hanging indent, in twips, at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.InnerHorizontalFrameLines">
			<summary>Gets or sets a value specifying whether all inner horizontal frame lines are set for the selected text.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.InnerVerticalFrameLines">
			<summary>Gets or sets a value specifying whether all inner vertical frame lines are set for the selected text.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.Italic">
			<summary>Gets or sets a value specifying whether the text is italic at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.Justified">
			<summary>Gets or sets a value specifying whether text is justified at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.LeftAligned">
			<summary>Gets or sets a value specifying whether text is left aligned at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.LeftFrameLine">
			<summary>Gets or sets a value specifying whether there is a frame line at the left side of the text.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.LeftIndent">
			<summary>Gets or sets the left indent, in twips, at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.LeftToRight">
			<summary>Gets or sets a value specifying whether the writung direction is left-to-right at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.LineSpacing">
			<summary>Gets or sets the line spacing, in percent, at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.NumberedList">
			<summary>Gets or sets a value specifying whether there is a numbered list at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.NumberedListFormat">
			<summary>Gets or sets the number format for a numbered list at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.NumberFormats">
			<summary>Returns an array of all supported number formats for numbered and structured lists.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.RightAligned">
			<summary>Gets or sets a value specifying whether text is right aligned at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.RightFrameLine">
			<summary>Gets or sets a value specifying whether there is a frame line at the right side of the text.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.RightIndent">
			<summary>Gets or sets the right indent, in twips, at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.RightToLeft">
			<summary>Gets or sets a value specifying whether the writing direction is right-to-left at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.Strikeout">
			<summary>Gets or sets a value specifying whether the text is strikeout at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.StructuredList">
			<summary>Gets or sets a value specifying whether there is a structured list at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.StructuredListFormat">
			<summary>Gets or sets the number format for a structured list at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.StyleName">
			<summary>Gets or sets the formatting style name at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.StyleNames">
			<summary>Returns an array of the names of all formatting styles, the document contains.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.Subscript">
			<summary>Gets or sets a value specifying whether text is subscript at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.Superscript">
			<summary>Gets or sets a value specifying whether text is superscript at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.TextBackColor">
			<summary>Gets or sets the color used to display the text background color at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.TextColor">
			<summary>Returns or sets the color used to display the text at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.TopAligned">
			<summary>Gets or sets a value specifying whether text is top aligned at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.TopDistance">
			<summary>Gets or sets a top paragraph distance, in twips, at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.TopFrameLine">
			<summary>Gets or sets a value specifying whether there is a frame line at the top of the text.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.Underline">
			<summary>Gets or sets a value specifying whether text is underlined at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.UnderlineStyle">
			<summary>Gets or sets the underline style at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.InputFormat.UnderlineStyles">
			<summary>Returns an array of all supported underline styles.</summary>
		</member>
		<member name="T:TXTextControl.InputPosition">
			<summary>An instance of the InputPosition class represents the current text input position of a TXTextControl document.</summary>
		</member>
		<member name="M:TXTextControl.InputPosition.#ctor(System.Int32,System.Int32,System.Int32)">
			<summary>Creates a new input position from a page, line and column number.</summary>
			<param name="page">Specifies a page number.</param>
			<param name="line">Specifies a line number.</param>
			<param name="column">Specifies a column number.</param>
		</member>
		<member name="M:TXTextControl.InputPosition.#ctor(System.Int32)">
			<summary>Creates a new input position from a text position.</summary>
			<param name="textPosition">Specifies a text position.</param>
		</member>
		<member name="M:TXTextControl.InputPosition.#ctor(System.Int32,TXTextControl.TextFieldPosition)">
			<summary>Creates a new input position from a text position with a special handling at the beginning and the end of a TextField.</summary>
			<param name="textPosition">Specifies a text position.</param>
			<param name="textFieldPosition">If the textPosition parameter is a position at the beginning or at the end of a TextField with a doubled input position, this parameter can be used to define whether the position is inside or outside the field.</param>
		</member>
		<member name="M:TXTextControl.InputPosition.#ctor(System.Drawing.Point)">
			<summary>Creates a new input position from a geometric location.</summary>
			<param name="location">Specifies a geometric location.</param>
		</member>
		<member name="M:TXTextControl.InputPosition.ScrollTo">
			<summary>Scrolls the contents of a Text Control so that the current input position becomes visible.</summary>
		</member>
		<member name="P:TXTextControl.InputPosition.CaretSize">
			<summary>Gets the size of the caret, in pixels, at the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.InputPosition.Column">
			<summary>Gets the column number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.InputPosition.InactiveMarker">
			<summary>Shows or hides a marker which indicates the current text input position when the TextControl is inactive and the blinking caret is not visible.</summary>
		</member>
		<member name="P:TXTextControl.InputPosition.Line">
			<summary>Gets the line number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.InputPosition.Location">
			<summary>Gets the geometric location of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.InputPosition.Page">
			<summary>Gets the page number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.InputPosition.PageInSection">
			<summary>Gets the page number in the section containing the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.InputPosition.Section">
			<summary>Gets the section number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.InputPosition.TextPosition">
			<summary>Gets the text position of the current text input position.</summary>
		</member>
		<member name="T:TXTextControl.LicenseLevelException">
			<summary>A LicenseLevelException is thrown when a feature is not contained in the currently licensed product level.</summary>
		</member>
		<member name="M:TXTextControl.LicenseLevelException.#ctor">
			<summary>Initializes a new instance of the LicenseLevelException class.</summary>
		</member>
		<member name="M:TXTextControl.LicenseLevelException.#ctor(System.String)">
			<summary>Initializes a new instance of the LicenseLevelException class with a specified error message.</summary>
			<param name="message">The error message that explains the reason for the exception.</param>
		</member>
		<member name="M:TXTextControl.LicenseLevelException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the LicenseLevelException class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
			<param name="message">The error message that explains the reason for the exception.</param>
			<param name="innerException">The exception that is the cause of the current exception.</param>
		</member>
		<member name="T:TXTextControl.Line">
			<summary>An instance of the Line class represents a single line in a Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.Line.Save(System.Byte[]@,TXTextControl.BinaryStreamType)">
			<summary>Saves the line's text in a byte array with the specified format.</summary>
			<param name="binaryData">Specifies a byte array into which the line's text is saved.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Line.Save(System.String@,TXTextControl.StringStreamType)">
			<summary>Saves the line's text as a string with the specified format.</summary>
			<param name="stringData">Specifies a string into which the line's text is saved.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Line.Save(System.Byte[]@,TXTextControl.BinaryStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the line's text in a byte array with the specified format and special settings.</summary>
			<param name="binaryData">Specifies a byte array into which the line's text is saved.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.Line.Save(System.String@,TXTextControl.StringStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the line's text as a string with the specified format and special settings.</summary>
			<param name="stringData">Specifies a string into which the line's text is saved.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="P:TXTextControl.Line.Baseline">
			<summary>Gets the line's baseline position.</summary>
		</member>
		<member name="P:TXTextControl.Line.Length">
			<summary>Gets the number of characters in the line including the break character.</summary>
		</member>
		<member name="P:TXTextControl.Line.Number">
			<summary>Gets the line's number.</summary>
		</member>
		<member name="P:TXTextControl.Line.Page">
			<summary>Gets the number of the page to which the line belongs.</summary>
		</member>
		<member name="P:TXTextControl.Line.Start">
			<summary>Gets the number (one-based) of the first character in the line.</summary>
		</member>
		<member name="P:TXTextControl.Line.Text">
			<summary>Gets the line's text.</summary>
		</member>
		<member name="P:TXTextControl.Line.TextBounds">
			<summary>Gets the bounding rectangle of the text belonging to the line.</summary>
		</member>
		<member name="T:TXTextControl.LineCollection">
			<summary>An instance of the LineCollection class contains all text lines in a Text Control document or part of the document represented through objects of the type Line.</summary>
		</member>
		<member name="M:TXTextControl.LineCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.LineCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="M:TXTextControl.LineCollection.GetItem(System.Drawing.Point)">
			<summary>Gets the line at a certain geometrical position.</summary>
			<param name="location">Specifies the line's location.</param>
		</member>
		<member name="M:TXTextControl.LineCollection.GetItem(System.Int32)">
			<summary>Gets the line at a certain text position.</summary>
			<param name="textPosition">Specifies a zero-based text position.</param>
		</member>
		<member name="M:TXTextControl.LineCollection.Item">
			<summary>Gets the line from the collection. In C# this property is the indexer for the LineCollection class.</summary>
		</member>
		<member name="P:TXTextControl.LineCollection.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
		</member>
		<member name="T:TXTextControl.ListFormat">
			<summary>An instance of the ListFormat class represents the formatting attributes of a bulleted or numbered list.</summary>
		</member>
		<member name="M:TXTextControl.ListFormat.#ctor">
			<summary>Creates a new empty instance of the ListFormat class.</summary>
		</member>
		<member name="M:TXTextControl.ListFormat.#ctor(TXTextControl.ListType)">
			<summary>Creates a new instance of the ListFormat class which has the specified list type.</summary>
			<param name="type">Specifies one of the ListType values.</param>
		</member>
		<member name="T:TXTextControl.ListFormat.Attribute">
			<summary>Determines a certain list format attribute.</summary>
		</member>
		<member name="F:TXTextControl.ListFormat.Attribute.BulletCharacter">
			<summary>Specifies the attribute set through the BulletCharacter property.</summary>
		</member>
		<member name="F:TXTextControl.ListFormat.Attribute.BulletSize">
			<summary>Specifies the attribute set through the BulletSize property.</summary>
		</member>
		<member name="F:TXTextControl.ListFormat.Attribute.CharAfterNumber">
			<summary>Obsolete. Use the TextAfterNumber attribute instead.</summary>
		</member>
		<member name="F:TXTextControl.ListFormat.Attribute.CharBeforeNumber">
			<summary>Obsolete. Use the TextBeforeNumber attribute instead.</summary>
		</member>
		<member name="F:TXTextControl.ListFormat.Attribute.FirstNumber">
			<summary>Specifies the attribute set through the FirstNumber property.</summary>
		</member>
		<member name="F:TXTextControl.ListFormat.Attribute.FontName">
			<summary>Specifies the attribute set through the FontName property.</summary>
		</member>
		<member name="F:TXTextControl.ListFormat.Attribute.FormatCharacter">
			<summary>Specifies the attribute set through the FormatChar property.</summary>
		</member>
		<member name="F:TXTextControl.ListFormat.Attribute.HangingIndent">
			<summary>Specifies the attribute set through the HangingIndent property.</summary>
		</member>
		<member name="F:TXTextControl.ListFormat.Attribute.Level">
			<summary>Specifies the attribute set through the Level property.</summary>
		</member>
		<member name="F:TXTextControl.ListFormat.Attribute.LeftIndent">
			<summary>Specifies the attribute set through the LeftIndent property.</summary>
		</member>
		<member name="F:TXTextControl.ListFormat.Attribute.NumberFormat">
			<summary>Specifies the attribute set through the NumberFormat property.</summary>
		</member>
		<member name="F:TXTextControl.ListFormat.Attribute.RestartNumbering">
			<summary>Specifies the attribute set through the RestartNumbering property.</summary>
		</member>
		<member name="F:TXTextControl.ListFormat.Attribute.TextAfterNumber">
			<summary>Specifies the attribute set through the TextAfterNumber property.</summary>
		</member>
		<member name="F:TXTextControl.ListFormat.Attribute.TextBeforeNumber">
			<summary>Specifies the attribute set through the TextBeforeNumber property.</summary>
		</member>
		<member name="F:TXTextControl.ListFormat.Attribute.Type">
			<summary>Specifies the attribute set through the Type property.</summary>
		</member>
		<member name="F:TXTextControl.ListFormat.MaxLevel">
			<summary>Represents the maximum of levels for bulleted and numbered lists.</summary>
		</member>
		<member name="F:TXTextControl.ListFormat.MaxText">
			<summary>Represents the maximum number of charcters for the additinal text in front and behind the number of a numbered list.</summary>
		</member>
		<member name="P:TXTextControl.ListFormat.BulletCharacter">
			<summary>Gets or sets the symbol character for a bulleted list.</summary>
		</member>
		<member name="P:TXTextControl.ListFormat.BulletSize">
			<summary>Gets or sets the size of the symbol character for a bulleted list.</summary>
		</member>
		<member name="P:TXTextControl.ListFormat.CharAfterNumber">
			<summary>Obsolete. Gets or sets a character that is displayed behind the number in a numbered list.</summary>
		</member>
		<member name="P:TXTextControl.ListFormat.CharBeforeNumber">
			<summary>Obsolete. Gets or sets a character that is displayed in front of the number in a numbered list.</summary>
		</member>
		<member name="P:TXTextControl.ListFormat.FirstNumber">
			<summary>Gets or sets the starting number for a numbered list.</summary>
		</member>
		<member name="P:TXTextControl.ListFormat.FontName">
			<summary>Gets or sets the font used for the bullet character.</summary>
		</member>
		<member name="P:TXTextControl.ListFormat.FormatCharacter">
			<summary>Gets or sets the formatting character for a bulleted or numbered list.</summary>
		</member>
		<member name="P:TXTextControl.ListFormat.HangingIndent">
			<summary>Gets or sets the hanging indent of a numbered list.</summary>
		</member>
		<member name="P:TXTextControl.ListFormat.LeftIndent">
			<summary>Gets or sets the left indent for a numbered list.</summary>
		</member>
		<member name="P:TXTextControl.ListFormat.Level">
			<summary>Gets or sets the level for a bulleted or numbered list.</summary>
		</member>
		<member name="P:TXTextControl.ListFormat.NumberFormat">
			<summary>Gets or sets the number format for a numbered list.</summary>
		</member>
		<member name="P:TXTextControl.ListFormat.RestartNumbering">
			<summary>Gets or sets a value determining whether a new numbered list begins.</summary>
		</member>
		<member name="P:TXTextControl.ListFormat.TextAfterNumber">
			<summary>Gets or sets the text that is displayed behind the number in a numbered list.</summary>
		</member>
		<member name="P:TXTextControl.ListFormat.TextBeforeNumber">
			<summary>Gets or sets the text that is displayed in front of the number in a numbered list.</summary>
		</member>
		<member name="P:TXTextControl.ListFormat.Type">
			<summary>Gets or sets the type of the list, bulleted, numbered or none.</summary>
		</member>
		<member name="T:TXTextControl.LoadSettings">
			<summary>The LoadSettings class provides properties for advanced settings and information during load operations.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.ApplicationFieldFormat">
			<summary>Specifies the format of text fields which are imported.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.ApplicationFieldTypeNames">
			<summary>Specifies an array of strings containing the type names of fields which are to be imported.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.Author">
			<summary>Gets the document's author.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.BytesRead">
			<summary>Gets the number of bytes read during the load operation.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.CreationDate">
			<summary>Gets the document's creation date.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.CreatorApplication">
			<summary>Gets the application, which has created the document.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.CssFileName">
			<summary>Gets the path and filename of the CSS file belonging to a HTML or XML document.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.DocumentAccessPermissions">
			<summary>Specifies how a document can be accessed after it has been loaded.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.DocumentBasePath">
			<summary>Sets a file path that is used to search for resources like images or hypertext links.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.DocumentKeywords">
			<summary>Gets the document's keywords.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.DocumentSubject">
			<summary>Gets the document's subject string.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.DocumentTitle">
			<summary>Gets the document's title.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.ImageSearchPath">
			<summary>Sets a file path that is used to search for resources like images or hypertext links.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.LastModificationDate">
			<summary>Gets the date the document is last modified.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.LoadDocumentBackColor">
			<summary>Specifies whether or not the document background color is loaded.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.LoadedFile">
			<summary>Gets the name and path of the file that has been loaded.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.LoadedStreamType">
			<summary>Gets the StreamType of the file that has been loaded.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.LoadHypertextLinks">
			<summary>Specifies whether or not hypertext links are loaded.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.LoadImages">
			<summary>Specifies whether or not images are loaded.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.LoadSubTextParts">
			<summary>DOCX Format only: Specifies whether or not bookmarks which extend over several characters are converted to SubTextParts.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.MasterPassword">
			<summary>Specifies the password when the document is restricted with access permissions.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.PageMargins">
			<summary>Gets the margins of the loaded document's pages.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.PageSize">
			<summary>Gets the width and height of the loaded document's pages.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.PDFImportSettings">
			<summary>Specifies how the document structure is generated when a PDF document is imported.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.ReportingMergeBlockFormat">
			<summary>Specifies how reporting merge blocks are handled when a document is loaded.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.UserDefinedDocumentProperties">
			<summary>Gets a dictionary with all user-defined document properties contained in the loaded document.</summary>
		</member>
		<member name="P:TXTextControl.LoadSettings.UserPassword">
			<summary>Specifies the password for the user to open a password protected document.</summary>
		</member>
		<member name="T:TXTextControl.MainText">
			<summary>The MainText class represents the main text of a TX Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.MainText.Find(System.String,System.Int32,TXTextControl.FindOptions)">
			<summary>Finds a text string in the main text of the document.</summary>
			<param name="text">Specifies the text to search for.</param>
			<param name="start">Specifies the text position where the search starts, beginning with 0.</param>
			<param name="options">Specifies search options.</param>
		</member>
		<member name="M:TXTextControl.MainText.GetTextFields(TXTextControl.TextFieldType)">
			<summary>Returns a collection containing text fields of the specified types.</summary>
			<param name="fieldType">Specifies types of text fields.</param>
		</member>
		<member name="P:TXTextControl.MainText.ApplicationFields">
			<summary>Gets a collection of all Microsoft Word or Heiler HighEdit fields that have been created or imported from a Microsoft Word or RTF document.</summary>
		</member>
		<member name="P:TXTextControl.MainText.Barcodes">
			<summary>Gets a collection of all barcodes contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.MainText.Charts">
			<summary>Gets a collection of all charts contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.MainText.DocumentLinks">
			<summary>Gets a collection of all links in the main text of the document which point to targets in the same document.</summary>
		</member>
		<member name="P:TXTextControl.MainText.DocumentTargets">
			<summary>Gets a collection of all targets in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.MainText.Drawings">
			<summary>Gets a collection of all drawings contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.MainText.Frames">
			<summary>Gets a collection of all images, textframes, charts, barcodes and drawings contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.MainText.HypertextLinks">
			<summary>Gets a collection of all hypertext links contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.MainText.Images">
			<summary>Gets a collection of all images contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.MainText.Lines">
			<summary>Gets a collection of all text lines contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.MainText.MisspelledWords">
			<summary>Gets a collection of all misspelled words contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.MainText.Paragraphs">
			<summary>Gets a collection of all paragraphs contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.MainText.Selection">
			<summary>Gets or sets the current selection in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.MainText.SubTextParts">
			<summary>Gets a collection of all subtextparts contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.MainText.Tables">
			<summary>Gets a collection of all tables contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.MainText.TextChars">
			<summary>Gets a collection of all characters contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.MainText.TextFields">
			<summary>Gets a collection of all standard text fields contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.MainText.TextFrames">
			<summary>Gets a collection of all text frames contained in the main text of the document.</summary>
		</member>
		<member name="T:TXTextControl.MisspelledWord">
			<summary>The MisspelledWord class represents a misspelled word in a document's text.</summary>
		</member>
		<member name="M:TXTextControl.MisspelledWord.#ctor(System.Int32,System.Int32)">
			<summary>Initializes a new instance of the MisspelledWord class with the specified starting position and length.</summary>
			<param name="start">Specifies the starting position of the misspelled word.</param>
			<param name="length">Specifies the length of the misspelled word.</param>
		</member>
		<member name="M:TXTextControl.MisspelledWord.Select">
			<summary>Selects the misspelled word in the text.</summary>
		</member>
		<member name="P:TXTextControl.MisspelledWord.Culture">
			<summary>Gets the culture of the misspelled word.</summary>
		</member>
		<member name="P:TXTextControl.MisspelledWord.IsDuplicate">
			<summary>Gets or sets a value which marks the misspelled word as duplicate.</summary>
		</member>
		<member name="P:TXTextControl.MisspelledWord.IsIgnored">
			<summary>Gets or sets a value which marks the misspelled word as ignored.</summary>
		</member>
		<member name="P:TXTextControl.MisspelledWord.Length">
			<summary>Gets the length of a misspelled word.</summary>
		</member>
		<member name="P:TXTextControl.MisspelledWord.Number">
			<summary>Gets the number of this misspelled word.</summary>
		</member>
		<member name="P:TXTextControl.MisspelledWord.Start">
			<summary>Gets the starting position of a misspelled word.</summary>
		</member>
		<member name="P:TXTextControl.MisspelledWord.Text">
			<summary>Gets the text of the misspelled word.</summary>
		</member>
		<member name="T:TXTextControl.MisspelledWordCollection">
			<summary>An instance of the MisspelledWordCollection class contains all misspelled words in the main part of a Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.MisspelledWordCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.MisspelledWordCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="M:TXTextControl.MisspelledWordCollection.GetCount(TXTextControl.MisspelledWordKind)">
			<summary>Returns the number of misspelled words with a special meaning from the collection.</summary>
			<param name="kind">Specifies the word's kind.</param>
		</member>
		<member name="M:TXTextControl.MisspelledWordCollection.GetItem">
			<summary>Gets the misspelled word at the current text input position. If there is no misspelled word, the next possible word is returned. If there is no misspelled word between the current input position and the end of the text, the first word is returned.</summary>
		</member>
		<member name="M:TXTextControl.MisspelledWordCollection.GetItem(TXTextControl.MisspelledWordKind)">
			<summary>Gets the misspelled word of the specified kind at the current text input position. If there is no misspelled word, the next possible word of is returned. If there is no misspelled word of the specified kind between the current input position and the end of the text, the first word of the specified kind is returned.</summary>
			<param name="kind">Specifies the word's kind.</param>
		</member>
		<member name="M:TXTextControl.MisspelledWordCollection.GetItem(System.Drawing.Point)">
			<summary>Gets the misspelled word at a certain geometrical location. If there is no misspelled word, null is returned.</summary>
			<param name="location">Specifies the word's location.</param>
		</member>
		<member name="M:TXTextControl.MisspelledWordCollection.GetItem(System.Int32)">
			<summary>Gets the misspelled word at the specified text input position. If there is no misspelled word, the next possible word is returned. If there is no misspelled word between the specified input position and the end of the text, the first word is returned.</summary>
			<param name="textPosition">Specifies a zero-based text postion.</param>
		</member>
		<member name="M:TXTextControl.MisspelledWordCollection.GetItem(System.Int32,TXTextControl.MisspelledWordKind)">
			<summary>Gets the misspelled word of the specified kind at the specified text input position. If there is no misspelled word, the next possible word is returned. If there is no misspelled word of the specified kind between the specified input position and the end of the text, the first word of the specified kind is returned.</summary>
			<param name="textPosition">Specifies a zero-based text postion.</param>
			<param name="kind">Specifies the word's kind.</param>
		</member>
		<member name="M:TXTextControl.MisspelledWordCollection.Ignore(TXTextControl.MisspelledWord,System.String)">
			<summary>Changes the text of the specified misspelled word and marks it as ignored. Ignored misspelled words are not underlined with a red zigzag line.</summary>
			<param name="misspelledWord">Specifies the misspelled word to change.</param>
			<param name="changedText">Specifies the changed text.</param>
		</member>
		<member name="M:TXTextControl.MisspelledWordCollection.Item">
			<summary>Gets a misspelled word from the collection. In C# this property is the indexer for the MisspelledWordCollection class.</summary>
		</member>
		<member name="M:TXTextControl.MisspelledWordCollection.Remove(TXTextControl.MisspelledWord)">
			<summary>Removes the specified misspelled word from a Text Control document. The method removes the word's reference in the list of misspelled words, but not the word's text in the document.</summary>
			<param name="misspelledWord">Specifies the misspelled word to remove.</param>
		</member>
		<member name="M:TXTextControl.MisspelledWordCollection.Remove(TXTextControl.MisspelledWord,System.String)">
			<summary>Removes the specified misspelled word from a Text Control document. The method removes the word's reference in the list of misspelled words and replaces the word's text with the specified text.</summary>
			<param name="misspelledWord">Specifies the misspelled word to remove.</param>
			<param name="correctedText">Specifies the corrected text.</param>
		</member>
		<member name="P:TXTextControl.MisspelledWordCollection.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
		</member>
		<member name="T:TXTextControl.Page">
			<summary>An object of the Page class represents a formatted page of a document.</summary>
		</member>
		<member name="M:TXTextControl.Page.GetImage(TXTextControl.PageContent)">
			<summary>Gets an image of the page's contents as an enhanced metafile.</summary>
			<param name="contents">Specifies the image's contents.</param>
		</member>
		<member name="M:TXTextControl.Page.GetImage(System.Int32,TXTextControl.PageContent)">
			<summary>Gets an image of the page's contents as a bitmap in screen resolution.</summary>
			<param name="zoomFactor">Specifies a zooming factor in percent.</param>
			<param name="contents">Specifies the image's contents.</param>
		</member>
		<member name="M:TXTextControl.Page.Select">
			<summary>Selects the text of the page. The page break characters bounding the page and the header and/or footer belonging to the page are not selected.</summary>
		</member>
		<member name="P:TXTextControl.Page.Bounds">
			<summary>Gets the bounding rectangle of the page, in twips, relative to the top of the document.</summary>
		</member>
		<member name="P:TXTextControl.Page.Footer">
			<summary>Gets the footer of the page.</summary>
		</member>
		<member name="P:TXTextControl.Page.Header">
			<summary>Gets the header of the page.</summary>
		</member>
		<member name="P:TXTextControl.Page.Length">
			<summary>Gets the number of characters of the page, including the page break character at the end of the page.</summary>
		</member>
		<member name="P:TXTextControl.Page.Number">
			<summary>Gets the page's number.</summary>
		</member>
		<member name="P:TXTextControl.Page.NumberInSection">
			<summary>Gets the page number relative to the beginning of the section the page belongs to.</summary>
		</member>
		<member name="P:TXTextControl.Page.Section">
			<summary>Gets the number, one-based, of the section the page belongs to.</summary>
		</member>
		<member name="P:TXTextControl.Page.Start">
			<summary>Gets the number (one-based) of the page's first character.</summary>
		</member>
		<member name="P:TXTextControl.Page.TextBounds">
			<summary>Gets the bounding rectangle of the page's text, in twips, relative to the top of the document.</summary>
		</member>
		<member name="T:TXTextControl.PageBorder">
			<summary>An instance of the PageBorder class represents the attributes of a border, which is drawn in the margin area of a page.</summary>
		</member>
		<member name="M:TXTextControl.PageBorder.#ctor">
			<summary>Creates an empty PageBorder object. Further properties must be set.</summary>
		</member>
		<member name="M:TXTextControl.PageBorder.#ctor(System.Int32,System.Int32,System.Drawing.Color)">
			<summary>Creates a PageBorder object with equal line widths, colors and distances from the edge of the page.</summary>
			<param name="lineWidth">Specifies the width for all border lines.</param>
			<param name="distance">Specifies the distance of the border lines from the edge of the page.</param>
			<param name="lineColor">Specifies the color for all border lines.</param>
		</member>
		<member name="T:TXTextControl.PageBorder.Attribute">
			<summary>Determines a certain page border attribute.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.Attribute.BottomDistance">
			<summary>Specifies the attribute set through the BottomDistance property.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.Attribute.BottomLineColor">
			<summary>Specifies the attribute set through the BottomLineColor property.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.Attribute.BottomLineWidth">
			<summary>Specifies the attribute set through the BottomLineWidth property.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.Attribute.FirstPageOnly">
			<summary>Specifies the attribute set through the FirstPageOnly property.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.Attribute.LeftDistance">
			<summary>Specifies the attribute set through the LeftDistance property.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.Attribute.LeftLineColor">
			<summary>Specifies the attribute set through the LeftLineColor property.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.Attribute.LeftLineWidth">
			<summary>Specifies the attribute set through the LeftLineWidth property.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.Attribute.MeasureFromText">
			<summary>Specifies the attribute set through the MeasureFromText property.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.Attribute.OmitFirstPage">
			<summary>Specifies the attribute set through the OmitFirstPage property.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.Attribute.RightDistance">
			<summary>Specifies the attribute set through the RightDistance property.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.Attribute.RightLineColor">
			<summary>Specifies the attribute set through the RightLineColor property.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.Attribute.RightLineWidth">
			<summary>Specifies the attribute set through the RightLineWidth property.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.Attribute.SurroundFooter">
			<summary>Specifies the attribute set through the SurroundFooter property.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.Attribute.SurroundHeader">
			<summary>Specifies the attribute set through the SurroundHeader property.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.Attribute.TopDistance">
			<summary>Specifies the attribute set through the TopDistance property.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.Attribute.TopLineColor">
			<summary>Specifies the attribute set through the TopLineColor property.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.Attribute.TopLineWidth">
			<summary>Specifies the attribute set through the TopLineWidth property.</summary>
		</member>
		<member name="F:TXTextControl.PageBorder.DefaultDistance">
			<summary>Represents the default distance of a page border from the edge of the page.</summary>
		</member>
		<member name="P:TXTextControl.PageBorder.BottomDistance">
			<summary>Gets or sets the distance, in twips, of the bottom border line either from the edge of the page or from the text, depending on the MeasureFromText property.</summary>
		</member>
		<member name="P:TXTextControl.PageBorder.BottomLineColor">
			<summary>Gets or sets the color of the bottom border line.</summary>
		</member>
		<member name="P:TXTextControl.PageBorder.BottomLineWidth">
			<summary>Gets or sets the width of the bottom border line.</summary>
		</member>
		<member name="P:TXTextControl.PageBorder.FirstPageOnly">
			<summary>Gets or sets a value indicating whether the page border is drawn only on the first page of the section.</summary>
		</member>
		<member name="P:TXTextControl.PageBorder.LeftDistance">
			<summary>Gets or sets the distance, in twips, of the left border line either from the edge of the page or from the text, depending on the MeasureFromText property.</summary>
		</member>
		<member name="P:TXTextControl.PageBorder.LeftLineColor">
			<summary>Gets or sets the color of the left border line.</summary>
		</member>
		<member name="P:TXTextControl.PageBorder.LeftLineWidth">
			<summary>Gets or sets the width of the left border line.</summary>
		</member>
		<member name="P:TXTextControl.PageBorder.MeasureFromText">
			<summary>Gets or sets a value indicating whether the page border's distances are measured from the text.</summary>
		</member>
		<member name="P:TXTextControl.PageBorder.OmitFirstPage">
			<summary>Gets or sets a value indicating whether the page border is not drawn on the first page of the section.</summary>
		</member>
		<member name="P:TXTextControl.PageBorder.RightDistance">
			<summary>Gets or sets the distance, in twips, of the right border line either from the edge of the page or from the text, depending on the MeasureFromText property.</summary>
		</member>
		<member name="P:TXTextControl.PageBorder.RightLineColor">
			<summary>Gets or sets the color of the right border line.</summary>
		</member>
		<member name="P:TXTextControl.PageBorder.RightLineWidth">
			<summary>Gets or sets the width of the right border line.</summary>
		</member>
		<member name="P:TXTextControl.PageBorder.SurroundFooter">
			<summary>Gets or sets a value indicating whether the page border surrounds the section's footer.</summary>
		</member>
		<member name="P:TXTextControl.PageBorder.SurroundHeader">
			<summary>Gets or sets a value indicating whether the page border surrounds the section's header.</summary>
		</member>
		<member name="P:TXTextControl.PageBorder.TopDistance">
			<summary>Gets or sets the distance, in twips, of the top border line either from the edge of the page or from the text, depending on the MeasureFromText property.</summary>
		</member>
		<member name="P:TXTextControl.PageBorder.TopLineColor">
			<summary>Gets or sets the color of the top border line.</summary>
		</member>
		<member name="P:TXTextControl.PageBorder.TopLineWidth">
			<summary>Gets or sets the width of the top border line.</summary>
		</member>
		<member name="T:TXTextControl.PageCollection">
			<summary>An instance of the PageCollection class contains all pages of a document.</summary>
		</member>
		<member name="M:TXTextControl.PageCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.PageCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="M:TXTextControl.PageCollection.GetItem">
			<summary>Gets the Page with the current text input position from the collection.</summary>
		</member>
		<member name="M:TXTextControl.PageCollection.Item">
			<summary>Gets a page from the collection. In C# this property is the indexer for the PageCollection class.</summary>
		</member>
		<member name="P:TXTextControl.PageCollection.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
		</member>
		<member name="T:TXTextControl.PageMargins">
			<summary>An instance of the PageMargins class represents the page margins of a TX Text Control document or document section.</summary>
		</member>
		<member name="M:TXTextControl.PageMargins.#ctor">
			<summary>Creates a new instance of the PageMargins class with a left, top, right and bottom margin of 1 inch.</summary>
		</member>
		<member name="M:TXTextControl.PageMargins.#ctor(System.Double,System.Double,System.Double,System.Double)">
			<summary>Creates a new instance of the PageMargins class with the specified margins.</summary>
			<param name="left">Specifies the left page margin.</param>
			<param name="top">Specifies the top page margin.</param>
			<param name="right">Specifies the right page margin.</param>
			<param name="bottom">Specifies the bottom page margin.</param>
		</member>
		<member name="T:TXTextControl.PageMargins.Attribute">
			<summary>Determines a certain attribute.</summary>
		</member>
		<member name="F:TXTextControl.PageMargins.Attribute.Bottom">
			<summary>Specifies the attribute set through the Bottom property.</summary>
		</member>
		<member name="F:TXTextControl.PageMargins.Attribute.Left">
			<summary>Specifies the attribute set through the Left property.</summary>
		</member>
		<member name="F:TXTextControl.PageMargins.Attribute.Right">
			<summary>Specifies the attribute set through the Right property.</summary>
		</member>
		<member name="F:TXTextControl.PageMargins.Attribute.Top">
			<summary>Specifies the attribute set through the Top property.</summary>
		</member>
		<member name="P:TXTextControl.PageMargins.Left">
			<summary>Specifies the left margin of a TX Text Control document or document section.</summary>
		</member>
		<member name="P:TXTextControl.PageMargins.Top">
			<summary>Specifies the top margin of a TX Text Control document or document section.</summary>
		</member>
		<member name="P:TXTextControl.PageMargins.Right">
			<summary>Specifies the right margin of a TX Text Control document or document section.</summary>
		</member>
		<member name="P:TXTextControl.PageMargins.Bottom">
			<summary>Specifies the bottom margin of a TX Text Control document or document section.</summary>
		</member>
		<member name="T:TXTextControl.PageNumberField">
			<summary>The PageNumberField class represents a field in a header or footer of a Text Control document that automatically displays the current page number.</summary>
		</member>
		<member name="M:TXTextControl.PageNumberField.#ctor">
			<summary>Creates a new PageNumberField which displays Arabic numbers starting with 1.</summary>
		</member>
		<member name="M:TXTextControl.PageNumberField.#ctor(System.Int32,TXTextControl.NumberFormat)">
			<summary>Creates a new PageNumberField which displays page numbers with the specified number format starting with the specified start number.</summary>
			<param name="startNumber">Specifies the page number for the first page.</param>
			<param name="numberFormat">Specifies the number format.</param>
		</member>
		<member name="M:TXTextControl.PageNumberField.PageNumberDialog">
			<summary>Opens a dialog box to alter the formatting and numbering attributes of the page number field.</summary>
		</member>
		<member name="P:TXTextControl.PageNumberField.NumberFormat">
			<summary>Gets or sets the number format.</summary>
		</member>
		<member name="P:TXTextControl.PageNumberField.ShowNumberOfPages">
			<summary>Gets or sets a value indicating whether the field shows the page number or the total number of pages.</summary>
		</member>
		<member name="P:TXTextControl.PageNumberField.StartNumber">
			<summary>Gets or sets the page number for the first page.</summary>
		</member>
		<member name="T:TXTextControl.PageNumberFieldCollection">
			<summary>An instance of the PageNumberFieldCollection class contains the page number fields in a header or footer of a Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.PageNumberFieldCollection.Add(TXTextControl.PageNumberField)">
			<summary>Inserts a new page number field at the current input position of a header or footer.</summary>
			<param name="pageNumberField">Specifies the page number field to add.</param>
		</member>
		<member name="M:TXTextControl.PageNumberFieldCollection.Clear(System.Boolean)">
			<summary>Removes all page number fields contained in the collection from the document.</summary>
			<param name="keepText">If this parameter is set to true, all page number fields are removed without deleting their texts.</param>
		</member>
		<member name="M:TXTextControl.PageNumberFieldCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.PageNumberFieldCollection.GetItem">
			<summary>Gets the page number field at the current input position or null if there is no page number field at the current input position.</summary>
		</member>
		<member name="M:TXTextControl.PageNumberFieldCollection.GetItem(System.Int32)">
			<summary>Gets the page number field with the specified id. An id can be set with the PageNumberField.ID property.</summary>
			<param name="id">Specifies the page number field's identifier.</param>
		</member>
		<member name="M:TXTextControl.PageNumberFieldCollection.Remove(TXTextControl.PageNumberField)">
			<summary>Removes a page number from a header or footer of a Text control document.</summary>
			<param name="pageNumberField">Specifies the page number field to remove.</param>
		</member>
		<member name="T:TXTextControl.PageSize">
			<summary>An instance of the PageSize class represents the page size of a TX Text Control document or document section.</summary>
		</member>
		<member name="M:TXTextControl.PageSize.#ctor">
			<summary>Creates a new PageSize object representing an US Letter page size (8.5 x 11 inch).</summary>
		</member>
		<member name="M:TXTextControl.PageSize.#ctor(System.Double,System.Double)">
			<summary>Creates a new PageSize object representing a page size with the specified width and height. The measure for the width and height parameters depends on the TextControl.PageUnit, WPF.TextControl.PageUnit or ServerTextControl.PageUnit property.</summary>
			<param name="width">Specifies the width of the page.</param>
			<param name="height">Specifies the height of the page.</param>
		</member>
		<member name="T:TXTextControl.PageSize.Attribute">
			<summary>Determines a certain attribute.</summary>
		</member>
		<member name="F:TXTextControl.PageSize.Attribute.Height">
			<summary>Specifies the attribute set through the Height property.</summary>
		</member>
		<member name="F:TXTextControl.PageSize.Attribute.Width">
			<summary>Specifies the attribute set through the Width property.</summary>
		</member>
		<member name="P:TXTextControl.PageSize.Height">
			<summary>Specifies the page height of a document or document section.</summary>
		</member>
		<member name="P:TXTextControl.PageSize.Width">
			<summary>Specifies the page width of a document or document section.</summary>
		</member>
		<member name="T:TXTextControl.PaperSize">
			<summary>The PaperSize class is used with the TextControl.GetSupportedPaperSizes and WPF.TextControl.GetSupportedPaperSizes methods, which return the names and the sizes of all currently supported paper sizes.</summary>
		</member>
		<member name="P:TXTextControl.PaperSize.Height">
			<summary>Gets the height of the paper size, in twips.</summary>
		</member>
		<member name="P:TXTextControl.PaperSize.Name">
			<summary>Gets the name of the paper size.</summary>
		</member>
		<member name="P:TXTextControl.PaperSize.Width">
			<summary>Gets the width of the paper size, in twips.</summary>
		</member>
		<member name="T:TXTextControl.Paragraph">
			<summary>An instance of the Paragraph class represents a single paragraph in a Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.Paragraph.Save(System.Byte[]@,TXTextControl.BinaryStreamType)">
			<summary>Saves the paragraph's text in a byte array with the specified format.</summary>
			<param name="binaryData">Specifies a byte array into which the paragraph's text is saved.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Paragraph.Save(System.String@,TXTextControl.StringStreamType)">
			<summary>Saves the paragraph's text as a string with the specified format.</summary>
			<param name="stringData">Specifies a string into which the paragraph's text is saved.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Paragraph.Save(System.Byte[]@,TXTextControl.BinaryStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the paragraph's text in a byte array with the specified format and special settings.</summary>
			<param name="binaryData">Specifies a byte array into which the paragraph's text is saved.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.Paragraph.Save(System.String@,TXTextControl.StringStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the paragraph's text as a string with the specified format and special settings.</summary>
			<param name="stringData">Specifies a string into which the paragraph's text is saved.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.Paragraph.Select">
			<summary>Selects the paragraph. The paragraph break characters bounding the paragraph are not selected.</summary>
		</member>
		<member name="P:TXTextControl.Paragraph.FormattingStyle">
			<summary>Gets or sets the paragraph's formatting style.</summary>
		</member>
		<member name="P:TXTextControl.Paragraph.Format">
			<summary>Gets or sets the paragraph's formatting attributes.</summary>
		</member>
		<member name="P:TXTextControl.Paragraph.Length">
			<summary>Gets the number of characters in the paragraph including the paragraph end character.</summary>
		</member>
		<member name="P:TXTextControl.Paragraph.ListFormat">
			<summary>Gets or sets the paragraph's bulleted or numbered list and/or its formatting attributes.</summary>
		</member>
		<member name="P:TXTextControl.Paragraph.Lines">
			<summary>Gets the number of lines the paragraph consists of.</summary>
		</member>
		<member name="P:TXTextControl.Paragraph.ListNumber">
			<summary>Gets the paragraph's list number.</summary>
		</member>
		<member name="P:TXTextControl.Paragraph.ListNumberText">
			<summary>Gets the paragraph's list number text.</summary>
		</member>
		<member name="P:TXTextControl.Paragraph.Number">
			<summary>Gets the paragraph's number.</summary>
		</member>
		<member name="P:TXTextControl.Paragraph.Start">
			<summary>Gets the number (one-based) of the paragraph's first character.</summary>
		</member>
		<member name="P:TXTextControl.Paragraph.StartLine">
			<summary>Gets the number (one-based) of the paragraph's first line.</summary>
		</member>
		<member name="P:TXTextControl.Paragraph.Text">
			<summary>Gets the paragraph's text.</summary>
		</member>
		<member name="T:TXTextControl.ParagraphCollection">
			<summary>An instance of the ParagraphCollection class contains all paragraphs in a Text Control document or part of the document represented through objects of the type Paragraph.</summary>
		</member>
		<member name="M:TXTextControl.ParagraphCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.ParagraphCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="M:TXTextControl.ParagraphCollection.GetItem(System.Drawing.Point)">
			<summary>Gets the paragraph at a certain geometrical position.</summary>
			<param name="location">Specifies the paragraph's location.</param>
		</member>
		<member name="M:TXTextControl.ParagraphCollection.GetItem(System.Int32)">
			<summary>Gets the paragraph at a certain text position.</summary>
			<param name="textPosition">Specifies a zero-based text position.</param>
		</member>
		<member name="M:TXTextControl.ParagraphCollection.Item">
			<summary>Gets a paragraph from the collection. In C# this property is the indexer for the ParagraphCollection class.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphCollection.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
		</member>
		<member name="T:TXTextControl.ParagraphFormat">
			<summary>An instance of the ParagraphFormat class represents the formatting attributes of a paragraph.</summary>
		</member>
		<member name="M:TXTextControl.ParagraphFormat.#ctor">
			<summary>Creates an empty ParagraphFormat object with all properties set to their default values.</summary>
		</member>
		<member name="M:TXTextControl.ParagraphFormat.#ctor(TXTextControl.HorizontalAlignment)">
			<summary>Creates a new ParagraphFormat object with the specified horizontal alignment. All other properties are set to their default values.</summary>
			<param name="alignment">Specifies one of the HorizontalAlignment values.</param>
		</member>
		<member name="T:TXTextControl.ParagraphFormat.Attribute">
			<summary>Determines a certain paragraph format attribute.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.AbsoluteLineSpacing">
			<summary>Specifies the attribute set through the AbsoluteLineSpacing property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.Alignment">
			<summary>Specifies the attribute set through the Alignment property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.BackColor">
			<summary>Specifies the attribute set through the BackColor property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.BottomDistance">
			<summary>Specifies the attribute set through the BottomDistance property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.Direction">
			<summary>Specifies the attribute set through the Direction property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.Frame">
			<summary>Specifies the attribute set through the Frame property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.FrameDistance">
			<summary>Specifies the attribute set through the FrameDistance property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.FrameLineColor">
			<summary>Specifies the attribute set through the FrameLineColor property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.FrameLineWidth">
			<summary>Specifies the attribute set through the FrameLineWidth property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.FrameStyle">
			<summary>Specifies the attribute set through the FrameStyle property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.HangingIndent">
			<summary>Specifies the attribute set through the HangingIndent property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.Direction">
			<summary>Specifies the attribute set through the Direction property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.Justification">
			<summary>Specifies the attribute set through the Justification property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.KeepWithNext">
			<summary>Specifies the attribute set through the KeepWithNext property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.LeftIndent">
			<summary>Specifies the attribute set through the LeftIndent property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.LineSpacing">
			<summary>Specifies the attribute set through the LineSpacing property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.PageBreakBefore">
			<summary>Specifies the attribute set through the PageBreakBefore property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.RightIndent">
			<summary>Specifies the attribute set through the RightIndent property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.TabPositions">
			<summary>Specifies the attribute set through the TabPositions property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.TabTypes">
			<summary>Specifies the attribute set through the TabTypes property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.TopDistance">
			<summary>Specifies the attribute set through the TopDistance property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.Attribute.WidowOrphanLines">
			<summary>Specifies the attribute set through the WidowOrphanLines property.</summary>
		</member>
		<member name="F:TXTextControl.ParagraphFormat.MaxTabs">
			<summary>Represents the maximum number of tabs in a line.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.AbsoluteLineSpacing">
			<summary>Gets or sets the line spacing of a paragraph in twips.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.Alignment">
			<summary>Gets or sets the horizontal text alignment.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.BackColor">
			<summary>Gets or sets the background color of a paragraph.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.FrameLineColor">
			<summary>Gets or sets the color used for the frame lines of a paragraph.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.BottomDistance">
			<summary>Gets or sets the bottom distance, in twips, between this and the next paragraph.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.Direction">
			<summary>Gets or sets the writing direction.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.Frame">
			<summary>Gets or sets a frame around the paragraph.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.FrameDistance">
			<summary>Gets or sets the distance, in twips, between the text and the paragraph's frame.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.FrameLineWidth">
			<summary>Gets or sets the line width, in twips, of the paragraph's frame.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.FrameStyle">
			<summary>Gets or sets the style of the paragraph's frame.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.HangingIndent">
			<summary>Gets or sets the distance, in twips, for the hanging indent.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.Justification">
			<summary>Gets or sets the kind of justification in documents containing Arabic or Hebrew characters.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.KeepLinesTogether">
			<summary>Gets or sets a value indicating whether a page break is allowed within the paragraph.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.KeepWithNext">
			<summary>If this property is set to true, the paragraph is displayed on the same page as its following paragraph.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.LeftIndent">
			<summary>Gets or sets the distance, in twips, between the left edge of the Text Control and the left edge of the text.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.LineSpacing">
			<summary>Specifies the line spacing of a paragraph as a percentage of the font size.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.PageBreakBefore">
			<summary>If this property is set to true, the paragraph is always displayed on top of a page.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.RightIndent">
			<summary>Gets or sets the distance, in twips, between the right edge of a Text Control document and the right edge of the text.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.TabPositions">
			<summary>Gets or sets an array containing the absolute tab stop positions, in twips, in a paragraph.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.TabTypes">
			<summary>Gets or sets an array containing the tab types in a paragraph.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.TopDistance">
			<summary>Gets or sets a top distance, in twips, between this and the previous paragraph.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphFormat.WidowOrphanLines">
			<summary>Gets or sets the number of lines for widow/orphan control.</summary>
		</member>
		<member name="T:TXTextControl.ParagraphStyle">
			<summary>The ParagraphStyle class defines a formatting style for paragraphs.</summary>
		</member>
		<member name="M:TXTextControl.ParagraphStyle.#ctor(System.String)">
			<summary>Creates a new instance of the ParagraphStyle class based on the TextControl root style named [Normal].</summary>
			<param name="name">Specifies the new style's name.</param>
		</member>
		<member name="M:TXTextControl.ParagraphStyle.#ctor(System.String,System.String)">
			<summary>Creates a new instance of the ParagraphStyle class based on the specified base style.</summary>
			<param name="name">Specifies the new style's name.</param>
			<param name="baseStyle">Specifies the name of the style the new style is based on.</param>
		</member>
		<member name="M:TXTextControl.ParagraphStyle.#ctor(TXTextControl.ParagraphStyle)">
			<summary>Creates a new root style that has all attributes of the specified style.</summary>
			<param name="style">Is a style the attributes of which are used to initialize the new style.</param>
		</member>
		<member name="P:TXTextControl.ParagraphStyle.FollowingStyle">
			<summary>Gets or sets the name of the style that TextControl automatically selects for the following paragraph after the user has pressed the ENTER key.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphStyle.ListFormat">
			<summary>Gets or sets the style's bulleted or numbered list and/or its formatting attributes.</summary>
		</member>
		<member name="P:TXTextControl.ParagraphStyle.ParagraphFormat">
			<summary>Gets or sets the style's paragraph attributes.</summary>
		</member>
		<member name="T:TXTextControl.ParagraphStyleCollection">
			<summary>An instance of the ParagraphStyleCollection class contains all paragraph formatting styles in the current document represented through objects of the type ParagraphStyle.</summary>
		</member>
		<member name="M:TXTextControl.ParagraphStyleCollection.Add(TXTextControl.ParagraphStyle)">
			<summary>Adds to new formatting style to the current document.</summary>
			<param name="paragraphStyle">Specifies the style to add.</param>
		</member>
		<member name="M:TXTextControl.ParagraphStyleCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.ParagraphStyleCollection.GetItem(System.String)">
			<summary>Gets a particular style from the collection.</summary>
			<param name="styleName">Specifies the name of the style.</param>
		</member>
		<member name="T:TXTextControl.RulerBar">
			<summary>The RulerBar class represents a Windows Forms tool bar which can be used to show or to set indents, margins and tabs of a Windows Forms TextControl.</summary>
		</member>
		<member name="M:TXTextControl.RulerBar.ResetDisplayColors">
			<summary>Resets all display colors of a ruler bar to their system dependent default values.</summary>
		</member>
		<member name="P:TXTextControl.RulerBar.Alignment">
			<summary>Gets or sets a value specifying the alignment of the ruler bar in the document.</summary>
		</member>
		<member name="P:TXTextControl.RulerBar.BorderStyle">
			<summary>Gets or sets the border style of the ruler bar.</summary>
		</member>
		<member name="P:TXTextControl.RulerBar.DisplayColors">
			<summary>Gets or sets the colors of the ruler bar.</summary>
		</member>
		<member name="P:TXTextControl.RulerBar.EnablePageMargins">
			<summary>Enables or disables the setting of page margins.</summary>
		</member>
		<member name="P:TXTextControl.RulerBar.ReadOnly">
			<summary>Gets or sets a value determining the ruler bar's read only mode.</summary>
		</member>
		<member name="P:TXTextControl.RulerBar.ScaleUnit">
			<summary>Gets or sets the unit of the ruler bar's scale.</summary>
		</member>
		<member name="T:TXTextControl.RulerBar.Colors">
			<summary>The RulerBar.Colors class gets, sets or resets the display colors of a Windows Forms RulerBar control.</summary>
		</member>
		<member name="M:TXTextControl.RulerBar.Colors.#ctor">
			<summary>Initializes a new instance of the RulerBar.Colors class. After creating the object with this constuctor, individual colors can be set. If the Colors object is assigned to the RulerBar.DisplayColors property, non-set colors are reset to their system dependent default values.</summary>
		</member>
		<member name="M:TXTextControl.RulerBar.Colors.ResetBackColor">
			<summary>Resets the ruler bar's BackColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.RulerBar.Colors.ResetForeColor">
			<summary>Resets the ruler bar's ForeColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.RulerBar.Colors.ResetGradientBackColor">
			<summary>Resets the ruler bar's GradientBackColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.RulerBar.Colors.ResetRulerColor">
			<summary>Resets the ruler bar's RulerColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.RulerBar.Colors.ResetSeparatorColorDark">
			<summary>Resets the ruler bar's SeparatorColorDark to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.RulerBar.Colors.ResetSeparatorColorLight">
			<summary>Resets the ruler bar's SeparatorColorLight to its system dependent default value.</summary>
		</member>
		<member name="P:TXTextControl.RulerBar.Colors.BackColor">
			<summary>Gets or sets the background color at the left or top edge of the ruler bar.</summary>
		</member>
		<member name="P:TXTextControl.RulerBar.Colors.ForeColor">
			<summary>Gets or sets the color used for the numbers of the ruler.</summary>
		</member>
		<member name="P:TXTextControl.RulerBar.Colors.GradientBackColor">
			<summary>Gets or sets the background color at the right or bottom edge of the ruler bar.</summary>
		</member>
		<member name="P:TXTextControl.RulerBar.Colors.RulerColor">
			<summary>Gets or sets the color of the ruler.</summary>
		</member>
		<member name="P:TXTextControl.RulerBar.Colors.SeparatorColorDark">
			<summary>Gets or sets the color of dark separators.</summary>
		</member>
		<member name="P:TXTextControl.RulerBar.Colors.SeparatorColorLight">
			<summary>Gets or sets the color of light separators.</summary>
		</member>
		<member name="T:TXTextControl.SaveSettings">
			<summary>The SaveSettings class provides properties for advanced settings and information during save operations.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.Author">
			<summary>Sets the document's author which will be saved in the document.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.BytesWritten">
			<summary>Gets the number of bytes written during a save operation.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.CreationDate">
			<summary>Sets the document's creation date which will be saved in the document.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.CreatorApplication">
			<summary>Sets the application, which has created the document.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.CssFileName">
			<summary>HTML only. Sets the path and filename of a CSS file belonging to a HTML document.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.CssSaveMode">
			<summary>HTML only. Specifies how to save stylesheet data with a HTML document.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.DigitalSignature">
			<summary>Specifies a DigitalSignature object, which defines an X.509 certificate.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.DocumentAccessPermissions">
			<summary>Specifies how a document can be accessed after it has been opened.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.DocumentKeywords">
			<summary>Sets the document's keywords which will be saved in the document.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.DocumentLevelJavaScriptActions">
			<summary>Specifies an array of strings containing Javascript.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.DocumentSubject">
			<summary>Sets the document's subject string which will be saved in the document.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.DocumentTitle">
			<summary>Sets the document's title that will be saved in the document.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.DocumentBasePath">
			<summary>Sets a base path saved in the document that is used to resolve relative file paths.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.ImageCompressionQuality">
			<summary>Sets a value between 1 and 100, which is the quality of a lossy image compression used when a document is saved.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.ImageExportFilterIndex">
			<summary>Sets the format used for saving all images contained in the document.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.ImageMaxResolution">
			<summary>Sets the maximum resolution for all images in the document in dots per inch when the document is saved.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.ImageSaveMode">
			<summary>Determines whether the document's images are stored through its data or through its file reference.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.ImageSavePath">
			<summary>Sets a file path that is used to save resources like images when images are saved as file link.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.LastModificationDate">
			<summary>Sets the date the document is last modified.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.MasterPassword">
			<summary>Specifies the password for the document's access permissions.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.PageMargins">
			<summary>Sets the margins saved for the document's pages.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.PageSize">
			<summary>Sets the width and height saved for the document's pages.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.ReportingMergeBlockFormat">
			<summary>Specifies how reporting merge blocks are handled when a document is saved.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.SavedFile">
			<summary>Read only. Gets the name and path of the file that has been saved.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.SaveDocumentBackColor">
			<summary>Specifies whether or not the document background color is saved.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.SavedStreamType">
			<summary>Read only. Gets the StreamType of the file that has been saved.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.UserDefinedDocumentProperties">
			<summary>Sets a dictionary with all user-defined document properties which will be saved in the document.</summary>
		</member>
		<member name="P:TXTextControl.SaveSettings.UserPassword">
			<summary>Specifies the password for the user when the document is reopened.</summary>
		</member>
		<member name="T:TXTextControl.Section">
			<summary>An object of the Section class represents a section of a document.</summary>
		</member>
		<member name="M:TXTextControl.Section.Select">
			<summary>Selects the section. The section break characters bounding the section are not selected.</summary>
		</member>
		<member name="P:TXTextControl.Section.Format">
			<summary>Gets or sets the section's formatting attributes.</summary>
		</member>
		<member name="P:TXTextControl.Section.HeadersAndFooters">
			<summary>Gets a collection of all headers and footers of the section.</summary>
		</member>
		<member name="P:TXTextControl.Section.Length">
			<summary>Gets the number of characters in the section.</summary>
		</member>
		<member name="P:TXTextControl.Section.Number">
			<summary>Gets the section's number.</summary>
		</member>
		<member name="P:TXTextControl.Section.Start">
			<summary>Gets the number (one-based) of the first character in the section.</summary>
		</member>
		<member name="T:TXTextControl.SectionCollection">
			<summary>An instance of the SectionCollection class contains all sections of a document.</summary>
		</member>
		<member name="M:TXTextControl.SectionCollection.Add(TXTextControl.SectionBreakKind)">
			<summary>Adds a new section at the current text input position. The new section ends at the end position of the section containing the input position. If a new section is inserted in a paragraph or table, the paragraph or table is split into two paragraphs or tables.</summary>
			<param name="sectionBreakKind">Specifies the kind of the section break.</param>
		</member>
		<member name="M:TXTextControl.SectionCollection.Add(TXTextControl.SectionBreakKind,System.Int32)">
			<summary>Adds a new section at the specified text input position. The new section ends at the end position of the section containing the input position. If a new section is inserted in a paragraph or table, the paragraph or table is split into two paragraphs or tables.</summary>
			<param name="sectionBreakKind">Specifies the kind of the section break.</param>
			<param name="textPosition">Specifies the text position at which the section is to be inserted.</param>
		</member>
		<member name="M:TXTextControl.SectionCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.SectionCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="M:TXTextControl.SectionCollection.GetItem">
			<summary>Gets the Section with the current text input position from the collection.</summary>
		</member>
		<member name="M:TXTextControl.SectionCollection.Item">
			<summary>Gets a section from the collection. In C# this property is the indexer for the SectionCollection class.</summary>
		</member>
		<member name="P:TXTextControl.SectionCollection.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
		</member>
		<member name="T:TXTextControl.SectionFormat">
			<summary>An instance of the SectionFormat class represents the formatting attributes of a section.</summary>
		</member>
		<member name="M:TXTextControl.SectionFormat.#ctor">
			<summary>Creates an empty SectionFormat object. Further properties must be set.</summary>
		</member>
		<member name="M:TXTextControl.SectionFormat.#ctor(System.Int32,System.Int32)">
			<summary>Creates a SectionFormat object for a section with equal column widths. The SectionFormat.EqualColumnWidth property is automatically set to true.</summary>
			<param name="columns">Specifies the number of columns for the section.</param>
			<param name="columnDistance">Specifies the distance between equal columns.</param>
		</member>
		<member name="M:TXTextControl.SectionFormat.#ctor(System.Int32,System.Int32[],System.Int32[])">
			<summary>Creates a SectionFormat object for a section with individual column widths and distances. The SectionFormat.EqualColumnWidth property is automatically set to false.</summary>
			<param name="columns">Specifies the number of columns for the section.</param>
			<param name="columnWidths">Specifies the widths of the columns.</param>
			<param name="columnDistances">Specifies the distances between the columns.</param>
		</member>
		<member name="T:TXTextControl.SectionFormat.Attribute">
			<summary>Determines a certain section format attribute.</summary>
		</member>
		<member name="F:TXTextControl.SectionFormat.Attribute.BreakKind">
			<summary>Specifies the attribute set through the BreakKind property.</summary>
		</member>
		<member name="F:TXTextControl.SectionFormat.Attribute.ColumnDistances">
			<summary>Specifies the attribute set through the ColumnDistances property.</summary>
		</member>
		<member name="F:TXTextControl.SectionFormat.Attribute.ColumnLineColor">
			<summary>Specifies the attribute set through the ColumnLineColor property.</summary>
		</member>
		<member name="F:TXTextControl.SectionFormat.Attribute.ColumnLineWidth">
			<summary>Specifies the attribute set through the ColumnLineWidth property.</summary>
		</member>
		<member name="F:TXTextControl.SectionFormat.Attribute.Columns">
			<summary>Specifies the attribute set through the Columns property.</summary>
		</member>
		<member name="F:TXTextControl.SectionFormat.Attribute.ColumnWidths">
			<summary>Specifies the attribute set through the ColumnWidths property.</summary>
		</member>
		<member name="F:TXTextControl.SectionFormat.Attribute.EqualColumnWidth">
			<summary>Specifies the attribute set through the EqualColumnWidth property.</summary>
		</member>
		<member name="F:TXTextControl.SectionFormat.Attribute.Landscape">
			<summary>Specifies the attribute set through the Landscape property.</summary>
		</member>
		<member name="F:TXTextControl.SectionFormat.Attribute.PageSize">
			<summary>Specifies the attribute set through the PageSize property.</summary>
		</member>
		<member name="F:TXTextControl.SectionFormat.Attribute.RestartPageNumbering">
			<summary>Specifies the attribute set through the RestartPageNumbering property.</summary>
		</member>
		<member name="P:TXTextControl.SectionFormat.BreakKind">
			<summary>Gets or sets the kind of the section break the section starts with.</summary>
		</member>
		<member name="P:TXTextControl.SectionFormat.ColumnDistances">
			<summary>Gets the distances, in twips, between the columns on a page.</summary>
		</member>
		<member name="P:TXTextControl.SectionFormat.ColumnLineColor">
			<summary>Gets or sets the color of a dividing line between two columns.</summary>
		</member>
		<member name="P:TXTextControl.SectionFormat.ColumnLineWidth">
			<summary>Gets or sets the width of a dividing line between two columns.</summary>
		</member>
		<member name="P:TXTextControl.SectionFormat.Columns">
			<summary>Gets or sets the number of columns on a page.</summary>
		</member>
		<member name="P:TXTextControl.SectionFormat.ColumnWidths">
			<summary>Gets the widths, in twips, of the columns on a page.</summary>
		</member>
		<member name="P:TXTextControl.SectionFormat.EqualColumnWidth">
			<summary>Gets or sets a value indicating whether the columns on a page have all the same width and the same distance between them.</summary>
		</member>
		<member name="P:TXTextControl.SectionFormat.Landscape">
			<summary>Gets or sets a value indicating whether the section's page size is in landscape orientation.</summary>
		</member>
		<member name="P:TXTextControl.SectionFormat.PageBorder">
			<summary>Gets or sets the attributes of a section's page border.</summary>
		</member>
		<member name="P:TXTextControl.SectionFormat.PageMargins">
			<summary>Gets or sets the section's page margins.</summary>
		</member>
		<member name="P:TXTextControl.SectionFormat.PageSize">
			<summary>Gets or sets the section's page size.</summary>
		</member>
		<member name="P:TXTextControl.SectionFormat.RestartPageNumbering">
			<summary>Gets or sets a value indicating whether page numbering is restarted at the section's beginning.</summary>
		</member>
		<member name="T:TXTextControl.Selection">
			<summary>The Selection class describes and handles the attributes of a text selection.</summary>
		</member>
		<member name="M:TXTextControl.Selection.#ctor">
			<summary>Creates an empty Selection object with all properties set to their default values.</summary>
		</member>
		<member name="M:TXTextControl.Selection.#ctor(System.Int32,System.Int32)">
			<summary>Creates an instance of the Selection class with the specified start value and length. All other properties are set to their default values.</summary>
			<param name="start">Specifies the selection's start position.</param>
			<param name="length">Specifies the number of selected characters.</param>
		</member>
		<member name="T:TXTextControl.Selection.Attribute">
			<summary>Determines a certain attribute.</summary>
		</member>
		<member name="F:TXTextControl.Selection.Attribute.Baseline">
			<summary>Specifies the attribute set through the Baseline property.</summary>
		</member>
		<member name="F:TXTextControl.Selection.Attribute.Bold">
			<summary>Specifies the attribute set through the Bold property.</summary>
		</member>
		<member name="F:TXTextControl.Selection.Attribute.FontName">
			<summary>Specifies the attribute set through the FontName property.</summary>
		</member>
		<member name="F:TXTextControl.Selection.Attribute.FontSize">
			<summary>Specifies the attribute set through the FontSize property.</summary>
		</member>
		<member name="F:TXTextControl.Selection.Attribute.ForeColor">
			<summary>Specifies the attribute set through the ForeColor property.</summary>
		</member>
		<member name="F:TXTextControl.Selection.Attribute.FormattingStyle">
			<summary>Specifies the attribute set through the FormattingStyle property.</summary>
		</member>
		<member name="F:TXTextControl.Selection.Attribute.Italic">
			<summary>Specifies the attribute set through the Italic property.</summary>
		</member>
		<member name="F:TXTextControl.Selection.Attribute.Strikeout">
			<summary>Specifies the attribute set through the Strikeout property.</summary>
		</member>
		<member name="F:TXTextControl.Selection.Attribute.TextBackColor">
			<summary>Specifies the attribute set through the TextBackColor property.</summary>
		</member>
		<member name="F:TXTextControl.Selection.Attribute.Underline">
			<summary>Specifies the attribute set through the Underline property.</summary>
		</member>
		<member name="T:TXTextControl.Selection.DialogResult">
			<summary>Specifies identifiers to indicate the return value of a dialog box.</summary>
		</member>
		<member name="F:TXTextControl.Selection.DialogResult.Cancel">
			<summary>Specifies that the dialog box has been canceled.</summary>
		</member>
		<member name="F:TXTextControl.Selection.DialogResult.None">
			<summary>Specifies that the dialog box has been left with the Escape key.</summary>
		</member>
		<member name="F:TXTextControl.Selection.DialogResult.OK">
			<summary>Specifies that the dialog box has been left with OK.</summary>
		</member>
		<member name="M:TXTextControl.Selection.ChangeDirection(TXTextControl.Direction)">
			<summary>Changes the writing direction of all selected paragraphs. When the direction of a paragraph is changed, this paragraph's alignment is toggled from left to right or from right to left. The alignment of centered and justified paragraphs is not changed. Left and right tabulators are also toggled.</summary>
			<param name="direction">Specifies the writing direction.</param>
		</member>
		<member name="M:TXTextControl.Selection.DecreaseIndent">
			<summary>Decreases the left indent of all paragraphs contained in the current text selection. If no text is selected, this method decreases the left indent at the text input position. Left indent positions are defined through the paragraphs' tab positions and the indents of the paragraphs in front and behind the paragraph with the text input position.</summary>
		</member>
		<member name="M:TXTextControl.Selection.GrowFont">
			<summary>Increases the font size of each font contained in the current text selection. If no text is selected, this method increases the font size at the text input position. The font sizes used with this method are the same as shown through the ButtonBar or the built-in font dialog.</summary>
		</member>
		<member name="M:TXTextControl.Selection.IncreaseIndent">
			<summary>Increases the left indent of all paragraphs contained in the current text selection. If no text is selected, this method increases the left indent at the text input position. left indent positions are defined through the paragraphs' tab positions and the indents of the paragraphs in front and behind the paragraph with the text input position.</summary>
		</member>
		<member name="M:TXTextControl.Selection.IsCommonValueSelected(Selection.Attribute)">
			<summary>Informs about whether an attribute from the Selection.Attribute enumeration has the same value for the complete selection.</summary>
			<param name="attribute">Specifies a possible value from the enumeration.</param>
		</member>
		<member name="M:TXTextControl.Selection.IsCommonValueSelected(ParagraphFormat.Attribute)">
			<summary>Informs about whether an attribute from the ParagraphFormat.Attribute enumeration has the same value for the complete selection.</summary>
			<param name="attribute">Specifies a possible value from the enumeration.</param>
		</member>
		<member name="M:TXTextControl.Selection.IsCommonValueSelected(ListFormat.Attribute)">
			<summary>Informs about whether an attribute from the ListFormat.Attribute enumeration has the same value for the complete selection.</summary>
			<param name="attribute">Specifies a possible value from the enumeration.</param>
		</member>
		<member name="M:TXTextControl.Selection.IsCommonValueSelected(SectionFormat.Attribute)">
			<summary>Informs about whether an attribute from the SectionFormat.Attribute enumeration has the same value for the complete selection.</summary>
			<param name="attribute">Specifies a possible value from the enumeration.</param>
		</member>
		<member name="M:TXTextControl.Selection.IsCommonValueSelected(PageMargins.Attribute)">
			<summary>Informs about whether an attribute from the PageMargins.Attribute enumeration has the same value for the complete selection.</summary>
			<param name="attribute">Specifies a possible value from the enumeration.</param>
		</member>
		<member name="M:TXTextControl.Selection.IsCommonValueSelected(PageSize.Attribute)">
			<summary>Informs about whether an attribute from the PageSize.Attribute enumeration has the same value for the complete selection.</summary>
			<param name="attribute">Specifies a possible value from the enumeration.</param>
		</member>
		<member name="M:TXTextControl.Selection.IsCommonValueSelected(PageBorder.Attribute)">
			<summary>Informs about whether an attribute from the PageBorder.Attribute enumeration has the same value for the complete selection.</summary>
			<param name="attribute">Specifies a possible value from the enumeration.</param>
		</member>
		<member name="M:TXTextControl.Selection.Load">
			<summary>Opens a dialog box to select a file and exchanges the currently selected text with the text from that file.</summary>
		</member>
		<member name="M:TXTextControl.Selection.Load(TXTextControl.StreamType)">
			<summary>Opens a dialog box to select a file in the specified format and exchanges the currently selected text with the text from that file.</summary>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.Selection.Load(System.String,TXTextControl.StreamType)">
			<summary>Exchanges the currently selected text with text in the specified format. The new text is read from the specified file.</summary>
			<param name="path">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.Selection.Load(System.IO.FileStream,TXTextControl.StreamType)">
			<summary>Exchanges the currently selected text with text in the specified format. The new text is read from the specified file stream.</summary>
			<param name="fileStream">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.Selection.Load(System.Byte[],TXTextControl.BinaryStreamType)">
			<summary>Exchanges the currently selected text with text in the specified format. The new text is read from the specified byte array.</summary>
			<param name="binaryData">Specifies a byte array from which the data is loaded.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Selection.Load(System.String,TXTextControl.StringStreamType)">
			<summary>Exchanges the currently selected text with text in the specified format. The new text is read from the specified string.</summary>
			<param name="stringData">Specifies a string from which the data is loaded.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Selection.Load(TXTextControl.StreamType,TXTextControl.LoadSettings)">
			<summary>Opens a dialog box to select a file in the specified format and exchanges the currently selected text with the text from that file using the specified special settings.</summary>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.Selection.Load(System.String,TXTextControl.StreamType,TXTextControl.LoadSettings)">
			<summary>Exchanges the currently selected text with text in the specified format. The new text is read from the specified file and loaded using the given special settings.</summary>
			<param name="path">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.Selection.Load(System.IO.FileStream,TXTextControl.StreamType,TXTextControl.LoadSettings)">
			<summary>Exchanges the currently selected text with text in the specified format. The new text is read from the specified file stream and loaded using the given special settings.</summary>
			<param name="fileStream">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.Selection.Load(System.Byte[],TXTextControl.BinaryStreamType,TXTextControl.LoadSettings)">
			<summary>Exchanges the currently selected text with text in the specified format. The new text is read from the specified byte array and loaded using the given special settings.</summary>
			<param name="binaryData">Specifies a byte array from which the data is loaded.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.Selection.Load(System.String,TXTextControl.StringStreamType,TXTextControl.LoadSettings)">
			<summary>Exchanges the currently selected text with text in the specified format. The new text is read from the specified string and loaded using the given special settings.</summary>
			<param name="stringData">Specifies a string from which the data is loaded.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.Selection.RemoveInlineStyles">
			<summary>Removes all character based styles of the selected text so that all attributes are reset to the attributes of the paragraph style.</summary>
		</member>
		<member name="M:TXTextControl.Selection.Save">
			<summary>Opens a file save dialogbox and saves the selected text of a document in a file.</summary>
		</member>
		<member name="M:TXTextControl.Selection.Save(TXTextControl.StreamType)">
			<summary>Opens a file save dialogbox and saves the selected text of a document in a file with the specified format.</summary>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.Selection.Save(System.String,TXTextControl.StreamType)">
			<summary>Saves the selected text of a document in the specified file with the specified format.</summary>
			<param name="path">Specifies a file into which the selection is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.Selection.Save(System.IO.FileStream,TXTextControl.StreamType)">
			<summary>Saves the selected text of a document in the specified file stream with the specified format.</summary>
			<param name="fileStream">Specifies a file into which the selection is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.Selection.Save(System.Byte[]@,TXTextControl.BinaryStreamType)">
			<summary>Saves the selected text of a document in the specified byte array with the specified format.</summary>
			<param name="binaryData">Specifies a byte array into which the selection is saved.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Selection.Save(System.String@,TXTextControl.StringStreamType)">
			<summary>Saves the selected text of a document as a string with the specified format.</summary>
			<param name="stringData">Specifies a string into which the selection is saved.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Selection.Save(TXTextControl.StreamType,TXTextControl.SaveSettings)">
			<summary>Opens a file save dialogbox and saves the selected text of a document in a file with the specified format and special settings.</summary>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.Selection.Save(System.String,TXTextControl.StreamType,TXTextControl.SaveSettings)">
			<summary>Saves the selected text of a document in the specified file using the specified format and special settings.</summary>
			<param name="path">Specifies a file into which the selection is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.Selection.Save(System.IO.FileStream,TXTextControl.StreamType,TXTextControl.SaveSettings)">
			<summary>Saves the selected text of a document in the specified file stream using the specified format and special settings.</summary>
			<param name="fileStream">Specifies a file into which the selection is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.Selection.Save(System.Byte[]@,TXTextControl.BinaryStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the selected text of a document in the specified byte array using the specified format and special settings.</summary>
			<param name="binaryData">Specifies a byte array into which the selection is saved.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.Selection.Save(System.String@,TXTextControl.StringStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the selected text of a document as a string using the specified format and special settings.</summary>
			<param name="stringData">Specifies a string into which the selection is saved.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.Selection.ShrinkFont">
			<summary>Decreases the font size of each font contained in the current text selection. If no text is selected, this method decreases the font size at the text input position. The font sizes used with this method are the same as shown through the ButtonBar or the built-in font dialog.</summary>
		</member>
		<member name="P:TXTextControl.Selection.Baseline">
			<summary>Gets or sets the baseline alignment, in twips, of the selected text.</summary>
		</member>
		<member name="P:TXTextControl.Selection.Bold">
			<summary>Gets or sets the bold attribute of the selected text.</summary>
		</member>
		<member name="P:TXTextControl.Selection.Culture">
			<summary>Gets or sets the culture of the selected text.</summary>
		</member>
		<member name="P:TXTextControl.Selection.FontName">
			<summary>Gets or sets the font of the selected text.</summary>
		</member>
		<member name="P:TXTextControl.Selection.FontSize">
			<summary>Gets or sets the font's size, in twips, of the selected text.</summary>
		</member>
		<member name="P:TXTextControl.Selection.ForeColor">
			<summary>Returns or sets the color used to display the selected text.</summary>
		</member>
		<member name="P:TXTextControl.Selection.FormattingStyle">
			<summary>Gets or sets the formatting style of the selected text.</summary>
		</member>
		<member name="P:TXTextControl.Selection.Italic">
			<summary>Gets or sets the italic attribute of the selected text.</summary>
		</member>
		<member name="P:TXTextControl.Selection.Length">
			<summary>Returns or sets the number of characters selected.</summary>
		</member>
		<member name="P:TXTextControl.Selection.ListFormat">
			<summary>Gets or sets a bulleted or numbered list and/or its formatting attributes for the selected text.</summary>
		</member>
		<member name="P:TXTextControl.Selection.ParagraphFormat">
			<summary>Gets or sets the formatting attributes of the selected paragraphs.</summary>
		</member>
		<member name="P:TXTextControl.Selection.SectionFormat">
			<summary>Gets or sets page settings such as margins, size and orientation for the selected text.</summary>
		</member>
		<member name="P:TXTextControl.Selection.Start">
			<summary>Gets or sets the starting point of selected text.</summary>
		</member>
		<member name="P:TXTextControl.Selection.Strikeout">
			<summary>Gets or sets the strikeout attribute of the selected text.</summary>
		</member>
		<member name="P:TXTextControl.Selection.Text">
			<summary>Gets or sets a string containing the currently selected text.</summary>
		</member>
		<member name="P:TXTextControl.Selection.TextBackColor">
			<summary>Gets or sets the background color for selected text.</summary>
		</member>
		<member name="P:TXTextControl.Selection.Underline">
			<summary>Gets or sets underlining styles for the selected text.</summary>
		</member>
		<member name="T:TXTextControl.ServerTextControl">
			<summary>The ServerTextControl class implements a component that provide high-level text processing features for server-based applications.</summary>
		</member>
		<member name="M:TXTextControl.ServerTextControl.#ctor">
			<summary>Initializes a new instance of the ServerTextControl class. After initialization the Create method must be called to enable further resources.</summary>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Append(System.String,TXTextControl.StreamType,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format from the specified file and appends it to the existing document.</summary>
			<param name="path">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="appendSettings">Specifies settings how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Append(System.IO.FileStream,TXTextControl.StreamType,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format from the specified file stream and appends it to the existing document.</summary>
			<param name="fileStream">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="appendSettings">Specifies settings how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Append(System.Byte[],TXTextControl.BinaryStreamType,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format from the specified byte array and appends it to the existing document.</summary>
			<param name="binaryData">Specifies a byte array from which the data is loaded.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
			<param name="appendSettings">Specifies settings how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Append(System.String,TXTextControl.StringStreamType,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format from the specified string and appends it to the existing document.</summary>
			<param name="stringData">Specifies a string from which the data is loaded.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
			<param name="appendSettings">Specifies settings how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Append(System.String,TXTextControl.StreamType,TXTextControl.LoadSettings,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format and special settings from the specified file and appends it to the existing document.</summary>
			<param name="path">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
			<param name="appendSettings">Specifies settings how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Append(System.IO.FileStream,TXTextControl.StreamType,TXTextControl.LoadSettings,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format and special settings from the specified file stream and appends it to the existing document.</summary>
			<param name="fileStream">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
			<param name="appendSettings">Specifies settings how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Append(System.Byte[],TXTextControl.BinaryStreamType,TXTextControl.LoadSettings)">
			<summary>Loads text with the specified format and special settings from the specified byte array and appends it to the existing document.</summary>
			<param name="binaryData">Specifies a byte array from which the data is loaded.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Append(System.String,TXTextControl.StringStreamType,TXTextControl.LoadSettings,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format and special settings from the specified string and appends it to the existing document.</summary>
			<param name="stringData">Specifies a string from which the data is loaded.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
			<param name="appendSettings">Specifies settings how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Clear">
			<summary>Clears the selected text or the character right from the current input position.</summary>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Create">
			<summary>Initializes the resources of a newly instantiated object. This method must be called before using the object.</summary>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Find(System.String)">
			<summary>Finds the specified text string in the main text of the document. The search starts at the beginning of the document.</summary>
			<param name="text">Specifies the text to search for.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Find(System.String,System.Int32,TXTextControl.FindOptions)">
			<summary>Finds the specified text string in the main text of the document using the specified find options. The search starts at the specified position.</summary>
			<param name="text">Specifies the text to search for.</param>
			<param name="start">Specifies the text position where the search starts, beginning with 0.</param>
			<param name="options">Specifies search options.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.GetSupportedFonts">
			<summary>Gets an array of strings specifying the names of all currently supported fonts. These fonts depend on the formatting device set with the ServerTextControl.FormattingPrinter property. The method returns null if the ServerTextControl has not been completely initialized.</summary>
		</member>
		<member name="M:TXTextControl.ServerTextControl.GetSupportedPaperSizes">
			<summary>Gets an array of PaperSize structures specifying the names and the size of all currently supported paper sizes. These paper sizes depend on the formatting device set with the ServerTextControl.FormattingPrinter property. The method returns null, if the ServerTextControl has not been completely initialized.</summary>
		</member>
		<member name="M:TXTextControl.ServerTextControl.GetTextFields(TXTextControl.TextFieldType)">
			<summary>Returns a collection containing text fields of the specified types.</summary>
			<param name="fieldType">Specifies types of text fields.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.GetXmlElements(System.String)">
			<summary>Returns a collection of XML elements. It is an object of the type XmlElementCollection.</summary>
			<param name="elementName">Specifies the XML element's name.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.GetVersionInfo">
			<summary>Returns an object of the type VersionInfo, which provides information about the installed TX Text Control version.</summary>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Load(System.String,TXTextControl.StreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified file.</summary>
			<param name="path">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Load(System.IO.FileStream,TXTextControl.StreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified file stream.</summary>
			<param name="fileStream">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Load(System.Byte[],TXTextControl.BinaryStreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified byte array.</summary>
			<param name="binaryData">Specifies a byte array from which the data is loaded.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Load(System.String,TXTextControl.StringStreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified string.</summary>
			<param name="stringData">Specifies a string from which the data is loaded.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Load(System.String,TXTextControl.StreamType,TXTextControl.LoadSettings)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified file and loaded using the given special settings.</summary>
			<param name="path">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Load(System.IO.FileStream,TXTextControl.StreamType,TXTextControl.LoadSettings)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified file stream and loaded using the given special settings.</summary>
			<param name="fileStream">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Load(System.Byte[],TXTextControl.BinaryStreamType,TXTextControl.LoadSettings)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified byte array and loaded using the given special settings.</summary>
			<param name="binaryData">Specifies a byte array from which the data is loaded.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Load(System.String,TXTextControl.StringStreamType,TXTextControl.LoadSettings)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified string and loaded using the given special settings.</summary>
			<param name="stringData">Specifies a string from which the data is loaded.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.OnAdaptFont(TXTextControl.AdaptFontEventArgs)">
			<summary>Raises the AdaptFont event.</summary>
			<param name="e">Specifies an AdaptFontEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.OnBarcodeCreated(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeCreated event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.OnBarcodeDeleted(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeDeleted event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.OnDocumentLoaded(System.EventArgs)">
			<summary>Raises the DocumentLoaded event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.OnDrawingCreated(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingCreated event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.OnDrawingDeleted(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingDeleted event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.OnHyphenateWord(TXTextControl.HyphenateWordEventArgs)">
			<summary>Raises the HyphenateWord event.</summary>
			<param name="e">Specifies an HyphenateWordEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.OnImageCreated(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageCreated event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.OnImageDeleted(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageDeleted event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.OnSpellCheckText(TXTextControl.SpellCheckTextEventArgs)">
			<summary>Raises the SpellCheckText event.</summary>
			<param name="e">Specifies an SpellCheckTextEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.OnTableCreated(TXTextControl.TableEventArgs)">
			<summary>Raises the TableCreated event.</summary>
			<param name="e">Specifies an TableEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.OnTableDeleted(TXTextControl.TableEventArgs)">
			<summary>Raises the TableDeleted event.</summary>
			<param name="e">Specifies an TableEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.OnTextFrameCreated(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameCreated event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.OnTextFrameDeleted(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameDeleted event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.OnXmlInvalid(TXTextControl.XmlErrorEventArgs)">
			<summary>Raises the XmlInvalid event.</summary>
			<param name="e">Specifies an XmlErrorEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.OnXmlNotWellFormed(TXTextControl.XmlErrorEventArgs)">
			<summary>Raises the XmlNotWellFormed event.</summary>
			<param name="e">Specifies an XmlErrorEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Print(System.Drawing.Printing.PrintDocument)">
			<summary>Prints the document using the printer settings of the specified PrintDocument.</summary>
			<param name="printDocument">Specifies an instance of the PrintDocument class.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Print(System.Int32,System.Drawing.Printing.PrintPageEventArgs)">
			<summary>Prints a single page. This method can be called from the PrintPage event handler.</summary>
			<param name="page">Specifies a page number to print.</param>
			<param name="ppe">Specifies the event arguments of the print document's PrintPage event.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.ResetBackColor">
			<summary>Resets the BackColor property to its default value. The default value is the system color for the window background.</summary>
		</member>
		<member name="M:TXTextControl.ServerTextControl.ResetContents">
			<summary>Deletes the entire contents of the control.</summary>
		</member>
		<member name="M:TXTextControl.ServerTextControl.ResetFont">
			<summary>Resets the Font property to its default value. The default value is 10 pt Arial.</summary>
		</member>
		<member name="M:TXTextControl.ServerTextControl.ResetForeColor">
			<summary>Resets the ForeColor property to its default value. The default value is the system color for the window text.</summary>
		</member>
		<member name="M:TXTextControl.ServerTextControl.ResetPageMargins">
			<summary>Resets the PageMargins property to its default value. The default page margins are 1 inch.</summary>
		</member>
		<member name="M:TXTextControl.ServerTextControl.ResetPageSize">
			<summary>Resets the PageSize property to its default value. The default page size is US letter (8,5 x 11 inch).</summary>
		</member>
		<member name="M:TXTextControl.ServerTextControl.ResetTextBackColor">
			<summary>Resets the TextBackColor property to its default value. The default value is the setting of the BackColor property.</summary>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Save(System.String,TXTextControl.StreamType)">
			<summary>Saves the complete contents of a document in the specified file with the specified format.</summary>
			<param name="path">Specifies a file into which the data is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Save(System.IO.FileStream,TXTextControl.StreamType)">
			<summary>Saves the complete contents of a document in the specified file stream with the specified format.</summary>
			<param name="fileStream">Specifies a file into which the data is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Save(System.Byte[]@,TXTextControl.BinaryStreamType)">
			<summary>Saves the complete contents of a document in the specified byte array with the specified format.</summary>
			<param name="binaryData">Specifies a byte array into which the data is saved.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Save(System.String@,TXTextControl.StringStreamType)">
			<summary>Saves the complete contents of a document as a string with the specified format.</summary>
			<param name="stringData">Specifies a string into which the data is saved.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Save(System.String,TXTextControl.StreamType,TXTextControl.SaveSettings)">
			<summary>Saves the complete contents of a document in the specified file using the specified format and special settings.</summary>
			<param name="path">Specifies a file into which the data is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Save(System.IO.FileStream,TXTextControl.StreamType,TXTextControl.SaveSettings)">
			<summary>Saves the complete contents of a document in the specified file stream using the specified format and special settings.</summary>
			<param name="fileStream">Specifies a file into which the data is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Save(System.Byte[]@,TXTextControl.BinaryStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the complete contents of a document in the specified byte array using the specified format and special settings.</summary>
			<param name="binaryData">Specifies a byte array into which the data is saved.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Save(System.String@,TXTextControl.StringStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the complete contents of a document as a string using the specified format and special settings.</summary>
			<param name="stringData">Specifies a string into which the data is saved.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.Select(System.Int32,System.Int32)">
			<summary>Selects text within the control.</summary>
			<param name="start">Specifies the selection's start position.</param>
			<param name="length">Specifies the number of selected characters.</param>
		</member>
		<member name="M:TXTextControl.ServerTextControl.SelectAll">
			<summary>Selects all text in the control.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.ApplicationFields">
			<summary>Gets a collection of all Microsoft Word or Heiler HighEdit fields that have been created or imported from a Microsoft Word or RTF document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.BackColor">
			<summary>Gets or sets the background color of the control.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.Barcodes">
			<summary>Gets a collection of all barcodes in a document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.Baseline">
			<summary>Gets or sets the baseline alignment, in twips, of the control.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.Charts">
			<summary>Gets a collection of all charts in a document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.DocumentLinks">
			<summary>Gets a collection of all links that point to targets in the same document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.DocumentTargets">
			<summary>Gets a collection of all targets in the document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.Drawings">
			<summary>Gets a collection of all drawings in a document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.Font">
			<summary>Gets or sets the control's font.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.FontSettings">
			<summary>Gets a FontSettings object which provides properties determining which fonts can be used in a document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.FontUnderlineStyle">
			<summary>Gets or sets underlining style for the text displayed by the control.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.ForeColor">
			<summary>Gets or sets the foreground color of the control.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.FormattingPrinter">
			<summary>Gets or sets the name of a printer the text dimensions and capabilities of which are used to format the document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.Frames">
			<summary>Gets a collection of all images, textframes, charts and barcodes in a document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.GetPages">
			<summary>Gets a collection of all pages in the document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.HeadersAndFooters">
			<summary>Gets a collection of all headers and footers the current document contains.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.HypertextLinks">
			<summary>Gets a collection of all hypertext links contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.Images">
			<summary>Gets a collection of all images contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.InlineStyles">
			<summary>Gets a collection of all inline styles the current document contains.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.InputPosition">
			<summary>Gets or sets the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.IsHyphenationEnabled">
			<summary>Gets or sets a value indicating whether hyphenation is active or not.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.IsLanguageDetectionEnabled">
			<summary>Gets or sets a value indicating whether language detection is active or not.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.IsSpellCheckingEnabled">
			<summary>Gets or sets a value indicating whether spell checking is active or not.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.IsCreated">
			<summary>Gets a value indicating whether the control is completely created.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.Landscape">
			<summary>Gets or sets a value indicating whether the page orientation is landscape or portrait.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.Lines">
			<summary>Gets a collection of all lines contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.ListFormat">
			<summary>Gets or sets the type and the formatting attributes of a bulleted or numbered list.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.MisspelledWords">
			<summary>Gets a collection of all misspelled words in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.PageMargins">
			<summary>Gets or sets the margins for the pages of the current document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.Pages">
			<summary>Gets the number of pages contained in the current document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.PageSize">
			<summary>Specifies the width and height of the pages for the current document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.PageUnit">
			<summary>Gets or sets the measure used for page sizes and page margins.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.ParagraphFormat">
			<summary>Gets or sets the paragraph formatting attributes of the text displayed by the control.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.Paragraphs">
			<summary>Gets a collection of all paragraphs contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.ParagraphStyles">
			<summary>Gets a collection of all paragraph styles the current document contains.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.Sections">
			<summary>Gets a collection of all sections in the document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.Selection">
			<summary>Gets or sets the current selection in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.SpellChecker">
			<summary>Specifies the spell checking component to be used with a ServerTextControl.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.SubTextParts">
			<summary>Gets a collection of all subtextparts contained in the document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.Tables">
			<summary>Gets a collection of all tables contained in the document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.Text">
			<summary>Gets or sets the control's text.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.TextBackColor">
			<summary>Gets or sets the background color for the text.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.TextChars">
			<summary>Gets a collection of all characters contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.TextFields">
			<summary>Gets a collection of all standard text fields contained in the main text of the document.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.TextFrames">
			<summary>Gets a collection of all text frames the current document contains.</summary>
		</member>
		<member name="P:TXTextControl.ServerTextControl.TextParts">
			<summary>Gets a collection of all text parts the current document contains.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.AdaptFont">
			<summary>Occurs for each font that must be adapted, because it is not supported.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.BarcodeCreated">
			<summary>Occurs when a new barcode has been created.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.BarcodeDeleted">
			<summary>Occurs when a barcode has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.ChartCreated">
			<summary>Occurs when a new chart has been created.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.ChartDeleted">
			<summary>Occurs when a chart has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.DocumentLoaded">
			<summary>Occurs when a new document has been loaded.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.DrawingCreated">
			<summary>Occurs when a new drawing has been created.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.DrawingDeleted">
			<summary>Occurs when a drawing has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.HyphenateWord">
			<summary>Occurs, if a word does not fit on the line and must be hyphenated.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.ImageCreated">
			<summary>Occurs when a new image has been created.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.ImageDeleted">
			<summary>Occurs when an image has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.SpellCheckText">
			<summary>Occurs, if the document's text has been altered and the spelling of the new text must be checked.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.TableCreated">
			<summary>Occurs after a new table has been created when loading a document which contains a table without an identifier.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.TableDeleted">
			<summary>Occurs after a table has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.TextFrameCreated">
			<summary>Occurs when a new text frame has been created.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.TextFrameDeleted">
			<summary>Occurs when a text frame has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.XmlInvalid">
			<summary>Occurs when a loaded or changed XML document cannot be validated with the document type definition (DTD) referenced in the document.</summary>
		</member>
		<member name="E:TXTextControl.ServerTextControl.XmlNotWellFormed">
			<summary>Occurs when a loaded XML document is not well-formed.</summary>
		</member>
		<member name="T:TXTextControl.SpellCheckTextEventArgs">
			<summary>The SpellCheckTextEventArgs class provides data for the TextControl.SpellCheckText and WPF.TextControl.SpellCheckText events.</summary>
		</member>
		<member name="P:TXTextControl.SpellCheckTextEventArgs.Culture">
			<summary>Gets the culture of the text to check.</summary>
		</member>
		<member name="P:TXTextControl.SpellCheckTextEventArgs.MisspelledWords">
			<summary>Gets or sets an array of MisspelledWord objects.</summary>
		</member>
		<member name="P:TXTextControl.SpellCheckTextEventArgs.Text">
			<summary>Gets the text to check.</summary>
		</member>
		<member name="T:TXTextControl.StatusBar">
			<summary>The StatusBar class represents a Windows Forms tool bar which can be used to show the position of the curent text input position and other status information of a Windows Forms TextControl.</summary>
		</member>
		<member name="M:TXTextControl.StatusBar.ResetDisplayColors">
			<summary>Resets all display colors of a status bar to their system dependent default values.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.BorderStyle">
			<summary>Gets or sets the border style of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.ColumnText">
			<summary>Gets or sets the text in the 'Column' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.DisplayColors">
			<summary>Gets or sets the colors of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.LineText">
			<summary>Gets or sets the text in the 'Line' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.PageCounterText">
			<summary>Gets or sets the text in the 'Page counter' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.PageText">
			<summary>Gets or sets the text in the 'Page' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.SectionCounterText">
			<summary>Gets or sets the text in the 'Section counter' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.SectionText">
			<summary>Gets or sets the text in the 'Section' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.ShowColumn">
			<summary>Specifies whether the status bar shows the column number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.ShowKeyStates">
			<summary>Specifies whether the status bar shows the key state of the CAPSLOCK and the NUMLOCK key and the current insertion mode, insert or overwrite.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.ShowLanguage">
			<summary>Specifies whether the status bar shows the language of the text selection or the text input position.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.ShowLine">
			<summary>Specifies whether the status bar shows the line number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.ShowPage">
			<summary>Specifies whether the status bar shows the page number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.ShowPageCounter">
			<summary>Specifies whether the status bar shows the number of pages the document consists of.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.ShowSection">
			<summary>Specifies whether the status bar shows the section number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.ShowSectionCounter">
			<summary>Specifies whether the status bar shows the number of sections the document consists of.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.ShowZoom">
			<summary>Specifies whether the status bar shows the current zoom factor.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.ShowZoomTrackBar">
			<summary>Specifies whether the status bar displays a track bar instead of a simple number to show and to set the zooming factor.</summary>
		</member>
		<member name="T:TXTextControl.StatusBar.Colors">
			<summary>The StatusBar.Colors class gets, sets or resets the display colors of a Windows Forms StatusBar control.</summary>
		</member>
		<member name="M:TXTextControl.StatusBar.Colors.#ctor">
			<summary>Initializes a new instance of the StatusBar.Colors class. After creating the object with this constuctor, individual colors can be set. If the Colors object is assigned to the StatusBar.DisplayColors property, non-set colors are reset to their system dependent default values.</summary>
		</member>
		<member name="M:TXTextControl.StatusBar.Colors.ResetBackColor">
			<summary>Resets the status bar's BackColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.StatusBar.Colors.ResetBackColorBottom">
			<summary>Resets the status bar's BackColorBottom to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.StatusBar.Colors.ResetBackColorMiddle">
			<summary>Resets the status bar's BackColorMiddle to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.StatusBar.Colors.ResetBackColorTop">
			<summary>Resets the status bar's BackColorTop to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.StatusBar.Colors.ResetForeColor">
			<summary>Resets the status bar's ForeColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.StatusBar.Colors.ResetFrameColor">
			<summary>Resets the status bar's FrameColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.StatusBar.Colors.ResetGradientBackColor">
			<summary>Resets the status bar's GradientBackColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.StatusBar.Colors.ResetSeparatorColorDark">
			<summary>Resets the status bar's SeparatorColorDark to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.StatusBar.Colors.ResetSeparatorColorLight">
			<summary>Resets the status bar's SeparatorColorLight to its system dependent default value.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.Colors.BackColor">
			<summary>Gets or sets the background color at the left edge of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.Colors.BackColorBottom">
			<summary>Gets or sets the background color at the bottom of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.Colors.BackColorMiddle">
			<summary>Gets or sets the background color in the middle of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.Colors.BackColorTop">
			<summary>Gets or sets the background color at the top of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.Colors.ForeColor">
			<summary>Gets or sets the color used for text and numbers.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.Colors.FrameColor">
			<summary>Gets or sets the color of the status bar's frames.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.Colors.GradientBackColor">
			<summary>Gets or sets the background color at the right edge of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.Colors.SeparatorColorDark">
			<summary>Gets or sets the color of the dark part of a separator.</summary>
		</member>
		<member name="P:TXTextControl.StatusBar.Colors.SeparatorColorLight">
			<summary>Gets or sets the color of the light part of a separator.</summary>
		</member>
		<member name="T:TXTextControl.SubTextPart">
			<summary>A SubTextPart object represents a user-defined part of a TX Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.SubTextPart.#ctor(System.String,System.Int32)">
			<summary>Creates a subtextpart with the specified name and/or id. The start and length of the subtextpart are initialized to zero. When a zero-length subtextpart is inserted, the current text selection defines it position and length.</summary>
			<param name="name">Specifies the name of the subtextpart.</param>
			<param name="id">Specifies an identifier for the subtextpart.</param>
		</member>
		<member name="M:TXTextControl.SubTextPart.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
			<summary>Creates a subtextpart with the specified name, id, start position and length.</summary>
			<param name="name">Specifies the name of the subtextpart.</param>
			<param name="id">Specifies an identifier for the subtextpart.</param>
			<param name="start">Specifies the index (one-based) of the first character which belongs to the subtextpart.</param>
			<param name="length">Specifies the number of characters which belong to the subtextpart.</param>
		</member>
		<member name="M:TXTextControl.SubTextPart.Save(System.Byte[]@,TXTextControl.BinaryStreamType)">
			<summary>Saves the subtextpart's text in a byte array with the specified format.</summary>
			<param name="binaryData">Specifies a byte array into which the subtextpart's text is saved.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
		</member>
		<member name="M:TXTextControl.SubTextPart.Save(System.String@,TXTextControl.StringStreamType)">
			<summary>Saves the subtextpart's text as a string with the specified format.</summary>
			<param name="stringData">Specifies a string into which the subtextpart's text is saved.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.SubTextPart.Save(System.Byte[]@,TXTextControl.BinaryStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the subtextpart's text in a byte array with the specified format and special settings.</summary>
			<param name="binaryData">Specifies a byte array into which the subtextpart's text is saved.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.SubTextPart.Save(System.String@,TXTextControl.StringStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the subtextpart's text as a string with the specified format and special settings.</summary>
			<param name="stringData">Specifies a string into which the subtextpart's text is saved.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.SubTextPart.ScrollTo">
			<summary>Sets the current input position to the beginning of a subtextpart and scrolls it into the visible part of the document.</summary>
		</member>
		<member name="P:TXTextControl.SubTextPart.HighlightColor">
			<summary>Gets or sets the highlight color for the subtextpart.</summary>
		</member>
		<member name="P:TXTextControl.SubTextPart.HighlightMode">
			<summary>Gets or sets a value indicating when the subtextpart is highlighted.</summary>
		</member>
		<member name="P:TXTextControl.SubTextPart.ID">
			<summary>Gets or sets the subtextpart's identifier.</summary>
		</member>
		<member name="P:TXTextControl.SubTextPart.Length">
			<summary>Gets the number of characters which belong to the subtextpart.</summary>
		</member>
		<member name="P:TXTextControl.SubTextPart.Name">
			<summary>Gets or sets the name of the subtextpart.</summary>
		</member>
		<member name="P:TXTextControl.SubTextPart.NestedLevel">
			<summary>Gets the subtextpart's nested level.</summary>
		</member>
		<member name="P:TXTextControl.SubTextPart.Number">
			<summary>Gets the subtextpart's number.</summary>
		</member>
		<member name="P:TXTextControl.SubTextPart.OuterSubTextPart">
			<summary>Gets a subtextpart's outer subtextpart.</summary>
		</member>
		<member name="P:TXTextControl.SubTextPart.OuterMostSubTextPart">
			<summary>Gets a subtextpart's outermost subtextpart.</summary>
		</member>
		<member name="P:TXTextControl.SubTextPart.Start">
			<summary>Gets the index (one-based) of the first character which belongs to the subtextpart.</summary>
		</member>
		<member name="P:TXTextControl.SubTextPart.Text">
			<summary>Gets the subtextpart's text.</summary>
		</member>
		<member name="T:TXTextControl.SubTextPartCollection">
			<summary>Contains all subtextparts in the main text or another main part of a document.</summary>
		</member>
		<member name="T:TXTextControl.SubTextPartCollection.AddResult">
			<summary>Specifies the result when a subtextpart has been added to the document.</summary>
		</member>
		<member name="F:TXTextControl.SubTextPartCollection.AddResult.AlreadyExists">
			<summary>The subtextpart wasn't inserted because it already exists.</summary>
		</member>
		<member name="F:TXTextControl.SubTextPartCollection.AddResult.Combined">
			<summary>The subtextpart wasn't inserted but it was combined with an existing one. A subtextpart is combined with an existing one, when it immediately follows it and has the same name and id.</summary>
		</member>
		<member name="F:TXTextControl.SubTextPartCollection.AddResult.Error">
			<summary>An unexpected error has occurred.</summary>
		</member>
		<member name="F:TXTextControl.SubTextPartCollection.AddResult.NoSelection">
			<summary>The subtextpart wasn't inserted because there is no selection.</summary>
		</member>
		<member name="F:TXTextControl.SubTextPartCollection.AddResult.Overlapping">
			<summary>The subtextpart wasn't inserted because it overlaps with an existing textpart.</summary>
		</member>
		<member name="F:TXTextControl.SubTextPartCollection.AddResult.PositionInvalid">
			<summary>The subtextpart wasn't inserted because the specified position values are invalid. Invalid start and/or length values have been specified.</summary>
		</member>
		<member name="F:TXTextControl.SubTextPartCollection.AddResult.SelectionTooComplex">
			<summary>The subtextpart wasn't inserted because the selection is too complex. It is not a continuous sequence of characters.</summary>
		</member>
		<member name="F:TXTextControl.SubTextPartCollection.AddResult.Successful">
			<summary>The subtextpart has successfully been inserted.</summary>
		</member>
		<member name="M:TXTextControl.SubTextPartCollection.Add(TXTextControl.SubTextPart)">
			<summary>Adds a new subtextpart to the document. Its position is defined through the SubTextPart.Start and SubTextPart.Length properties. If the subtextpart's length is zero, the current text selection is used to define the position.</summary>
			<param name="subTextPart">Specifies the subtextpart to add.</param>
		</member>
		<member name="M:TXTextControl.SubTextPartCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.SubTextPartCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="M:TXTextControl.SubTextPartCollection.GetItem">
			<summary>Gets the subtextpart at the current text input position. If there is more than one textpart at the current input position the textpart with the highest level is returned.</summary>
		</member>
		<member name="M:TXTextControl.SubTextPartCollection.GetItem(System.String)">
			<summary>Gets the subtextpart with the specified name. The method returns null, if such a textpart does not exist. If more than one textpart with this name exists, the first found textpart is returned.</summary>
			<param name="name">Specifies the textpart's name set with the Name property.</param>
		</member>
		<member name="M:TXTextControl.SubTextPartCollection.GetItem(System.Int32)">
			<summary>Gets the subtextpart with the specified id. The method returns null, if such a textpart does not exist. If more than one textpart with this id exists, the first found textpart is returned.</summary>
			<param name="id">Specifies the textpart's identifier.</param>
		</member>
		<member name="M:TXTextControl.SubTextPartCollection.Item">
			<summary>Gets the subtextpart with the specified number from the collection. The number must be between 1 and Count. In C# this property is the indexer for the SubTextPartCollection class.</summary>
		</member>
		<member name="M:TXTextControl.SubTextPartCollection.Remove(TXTextControl.SubTextPart,System.Boolean,System.Boolean)">
			<summary>Removes a subtextpart from the collection including all its nested subtextparts.</summary>
			<param name="subTextPart">Specifies the subtextpart to remove.</param>
			<param name="keepText">If this parameter is set to true, the subtextpart is removed without deleting its visible text.</param>
			<param name="keepNested">If this parameter is set to true, nested subtextparts are preserved.</param>
		</member>
		<member name="P:TXTextControl.SubTextPartCollection.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
		</member>
		<member name="P:TXTextControl.SubTextPartCollection.IsSynchronized">
			<summary>Returns true if the collection is designed to be thread safe, otherwise, it returns false.</summary>
		</member>
		<member name="P:TXTextControl.SubTextPartCollection.SyncRoot">
			<summary>Gets an object that can be used to synchronize access to the collection.</summary>
		</member>
		<member name="T:TXTextControl.SubTextPartEventArgs">
			<summary>The SubTextPartEventArgs class provides data for the TextControl.SubTextPartClicked, TextControl.SubTextPartDoubleClicked, TextControl.SubTextPartEntered and TextControl.SubTextPartLeft events.</summary>
		</member>
		<member name="P:TXTextControl.SubTextPartEventArgs.SubTextPart">
			<summary>Gets an object that represents the subtextpart which causes the event.</summary>
		</member>
		<member name="T:TXTextControl.Table">
			<summary>An instance of the Table class represents a table in a Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.Table.MergeCells">
			<summary>Merges all selected table cells in this table. The Table.CanMergeCells property can be used to determine, if table cells can be merged or not.</summary>
		</member>
		<member name="M:TXTextControl.Table.Select">
			<summary>Selects the complete table.</summary>
		</member>
		<member name="M:TXTextControl.Table.Select(System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Selects the part of the table defined through two table cells.</summary>
			<param name="startRow">Specifies the row number where the selection begins.</param>
			<param name="startColumn">Specifies the column number where the selection begins.</param>
			<param name="stopRow">Specifies the row number where the selection ends.</param>
			<param name="stopColumn">Specifies the column number where the selection ends.</param>
		</member>
		<member name="M:TXTextControl.Table.Split(TXTextControl.TableAddPosition)">
			<summary>Splits a table below or above the current input position. If the table does not contain the current input position it cannot be split. The Table.CanSplit property can be used to determine if a table can be split or not. If a table is split above the first row a new line is inserted above the table and if a table is split below the last row a new line is inserted below the table. This is useful to insert text above or below a nested table that immediately starts and/or ends at the beginning or the end of the cell in which it is nested.</summary>
			<param name="position">Specifies the position where to split the table.</param>
		</member>
		<member name="M:TXTextControl.Table.SplitCells">
			<summary>Splits all selected table cells in this table. Only previously merged cells can be split. The Table.CanSplitCells property can be used to determine, if table cells can be split or not.</summary>
		</member>
		<member name="P:TXTextControl.Table.CanMergeCells">
			<summary>Checks whether table cells can be merged.</summary>
		</member>
		<member name="P:TXTextControl.Table.CanSplit">
			<summary>Checks whether this table can be split.</summary>
		</member>
		<member name="P:TXTextControl.Table.CanSplitCells">
			<summary>Checks whether previously merged table cells in this table can be split.</summary>
		</member>
		<member name="P:TXTextControl.Table.Cells">
			<summary>Gets a collection of all table cells the table consists of.</summary>
		</member>
		<member name="P:TXTextControl.Table.Columns">
			<summary>Gets a collection of all columns the table consists of.</summary>
		</member>
		<member name="P:TXTextControl.Table.ID">
			<summary>Gets or sets the table's identifier.</summary>
		</member>
		<member name="P:TXTextControl.Table.NestedLevel">
			<summary>Gets the nested level for the specified table.</summary>
		</member>
		<member name="P:TXTextControl.Table.NestedTables">
			<summary>Gets a collection of all tables nested in this table.</summary>
		</member>
		<member name="P:TXTextControl.Table.OuterTable">
			<summary>Gets a table's outer table.</summary>
		</member>
		<member name="P:TXTextControl.Table.OuterMostTable">
			<summary>Gets a table's outermost table.</summary>
		</member>
		<member name="P:TXTextControl.Table.Rows">
			<summary>Gets a collection of all rows the table consists of.</summary>
		</member>
		<member name="T:TXTextControl.TableBaseCollection">
			<summary>The TableBaseCollection class is the base class for the table collection classes.</summary>
		</member>
		<member name="M:TXTextControl.TableBaseCollection.Clear">
			<summary>Removes all tables contained in the collection from a Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.TableBaseCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.TableBaseCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="M:TXTextControl.TableBaseCollection.GetItem(System.Int32)">
			<summary>Gets a particular table from the collection.</summary>
			<param name="id">Specifies the table's identifier.</param>
		</member>
		<member name="M:TXTextControl.TableBaseCollection.Remove(System.Int32)">
			<summary>Removes a particular table from the collection.</summary>
			<param name="id">Specifies the table's identifier.</param>
		</member>
		<member name="P:TXTextControl.TableBaseCollection.Count">
			<summary>Gets the number of tables contained in the collection.</summary>
		</member>
		<member name="P:TXTextControl.TableBaseCollection.IsSynchronized">
			<summary>Returns true if the collection is designed to be thread safe, otherwise, it returns false.</summary>
		</member>
		<member name="P:TXTextControl.TableBaseCollection.SyncRoot">
			<summary>Gets an object that can be used to synchronize access to the collection.</summary>
		</member>
		<member name="T:TXTextControl.TableCell">
			<summary>An instance of the TableCell class represents a single cell of a table in a Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.TableCell.Select">
			<summary>Selects the table cell.</summary>
		</member>
		<member name="P:TXTextControl.TableCell.CellFormat">
			<summary>Gets or sets the formatting attributes of a table cell.</summary>
		</member>
		<member name="P:TXTextControl.TableCell.Column">
			<summary>Gets the table cell's column number.</summary>
		</member>
		<member name="P:TXTextControl.TableCell.Length">
			<summary>Gets the number of characters in the table cell.</summary>
		</member>
		<member name="P:TXTextControl.TableCell.Name">
			<summary>Gets or sets the cell's name.</summary>
		</member>
		<member name="P:TXTextControl.TableCell.Position">
			<summary>Gets or sets, in twips, the horizontal position of the cell.</summary>
		</member>
		<member name="P:TXTextControl.TableCell.Row">
			<summary>Gets the table cell's row number.</summary>
		</member>
		<member name="P:TXTextControl.TableCell.Text">
			<summary>Gets or sets the cell's text.</summary>
		</member>
		<member name="P:TXTextControl.TableCell.Start">
			<summary>Gets the index (one-based) of the first character in the table cell.</summary>
		</member>
		<member name="P:TXTextControl.TableCell.Width">
			<summary>Gets or sets, in twips, the width of the cell.</summary>
		</member>
		<member name="T:TXTextControl.TableCellCollection">
			<summary>An instance of the TableCellCollection class contains all cells of a table in a Text Control document represented through TableCell objects.</summary>
		</member>
		<member name="M:TXTextControl.TableCellCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.TableCellCollection.GetItem">
			<summary>Gets the table cell at the current input position.</summary>
		</member>
		<member name="M:TXTextControl.TableCellCollection.GetItem(System.Int32,System.Int32)">
			<summary>Gets the cell with the specified row and column number.</summary>
			<param name="row">Specifies the row number.</param>
			<param name="column">Specifies the column number.</param>
		</member>
		<member name="M:TXTextControl.TableCellCollection.Remove">
			<summary>Removes the table cell at the current text input position or all selected table cells when a text selection exists.</summary>
		</member>
		<member name="P:TXTextControl.TableCellCollection.CanRemove">
			<summary>Gets a value indicating whether table cells can be removed.</summary>
		</member>
		<member name="T:TXTextControl.TableCellFormat">
			<summary>An instance of the TableCellFormat class represents the formatting attributes of a table cell.</summary>
		</member>
		<member name="P:TXTextControl.TableCellFormat.BackColor">
			<summary>Gets or sets the table cell's background color.</summary>
		</member>
		<member name="P:TXTextControl.TableCellFormat.BottomBorderColor">
			<summary>Gets or sets the color of the table cell's bottom border.</summary>
		</member>
		<member name="P:TXTextControl.TableCellFormat.BottomBorderWidth">
			<summary>Gets or sets the width of the table cell's bottom border.</summary>
		</member>
		<member name="P:TXTextControl.TableCellFormat.BottomTextDistance">
			<summary>Gets or sets, in twips, the distance between the table cell's bottom border and its text.</summary>
		</member>
		<member name="P:TXTextControl.TableCellFormat.LeftBorderColor">
			<summary>Gets or sets the color of the table cell's left border.</summary>
		</member>
		<member name="P:TXTextControl.TableCellFormat.LeftBorderWidth">
			<summary>Gets or sets the width of the table cell's left border.</summary>
		</member>
		<member name="P:TXTextControl.TableCellFormat.LeftTextDistance">
			<summary>Gets or sets, in twips, the distance between the table cell's left border and its text.</summary>
		</member>
		<member name="P:TXTextControl.TableCellFormat.RightBorderColor">
			<summary>Gets or sets the color of the table cell's right border.</summary>
		</member>
		<member name="P:TXTextControl.TableCellFormat.RightBorderWidth">
			<summary>Gets or sets the width of the table cell's right border.</summary>
		</member>
		<member name="P:TXTextControl.TableCellFormat.RightTextDistance">
			<summary>Gets or sets, in twips, the distance between the table cell's right border and its text.</summary>
		</member>
		<member name="P:TXTextControl.TableCellFormat.TopBorderColor">
			<summary>Gets or sets the color of the table cell's top border.</summary>
		</member>
		<member name="P:TXTextControl.TableCellFormat.TopBorderWidth">
			<summary>Gets or sets the width of the table cell's top border.</summary>
		</member>
		<member name="P:TXTextControl.TableCellFormat.TopTextDistance">
			<summary>Gets or sets, in twips, the distance between the table cell's top border and its text.</summary>
		</member>
		<member name="P:TXTextControl.TableCellFormat.VerticalAlignment">
			<summary>Gets or sets the vertical alignment of the text in the table cell.</summary>
		</member>
		<member name="T:TXTextControl.TableCollection">
			<summary>An instance of the TableCollection class contains all tables of a Text Control document or part of the document represented through objects of the type Table.</summary>
		</member>
		<member name="M:TXTextControl.TableCollection.Add">
			<summary>Opens a dialog box and, when left with Ok, adds a new table with the specified attributes.</summary>
		</member>
		<member name="M:TXTextControl.TableCollection.Add(System.Int32,System.Int32)">
			<summary>Adds a new table at the current text input position. The new table has the specified number of rows and columns.</summary>
			<param name="rows">Specifies the number of rows the table consists of.</param>
			<param name="columns">Specifies the number of columns the table consists of.</param>
		</member>
		<member name="M:TXTextControl.TableCollection.Add(System.Int32,System.Int32,System.Int32)">
			<summary>Adds a new table at the current text input position. The new table has the specified number of rows and columns. The specified identifier can be used to get the table from the collection.</summary>
			<param name="rows">Specifies the number of rows the table consists of.</param>
			<param name="columns">Specifies the number of columns the table consists of.</param>
			<param name="id">Specifies the table's id.</param>
		</member>
		<member name="M:TXTextControl.TableCollection.GetItem">
			<summary>Gets the table at the current input position. To get a particular table with a certain identifier use the base class's implementation TableBaseCollection.GetItem.</summary>
		</member>
		<member name="M:TXTextControl.TableCollection.Remove">
			<summary>Removes the table at the current text input position. To remove a particular table with a certain identifier use the base class's implementation TableBaseCollection.Remove.</summary>
		</member>
		<member name="P:TXTextControl.TableCollection.CanAdd">
			<summary>Gets a value indicating whether a new table can be inserted at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.TableCollection.GridLines">
			<summary>Gets or sets a value indicating wether table grid lines are shown or not.</summary>
		</member>
		<member name="T:TXTextControl.TableColumn">
			<summary>An instance of the TableColumn class represents a single column of a table in a Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.TableColumn.Select">
			<summary>Selects the table column.</summary>
		</member>
		<member name="P:TXTextControl.TableColumn.CellFormat">
			<summary>Gets or sets the formatting attributes of a table column.</summary>
		</member>
		<member name="P:TXTextControl.TableColumn.Column">
			<summary>Gets the number of the table column represented through this table column object.</summary>
		</member>
		<member name="P:TXTextControl.TableColumn.Position">
			<summary>Gets or sets, in twips, the horizontal position of the column.</summary>
		</member>
		<member name="P:TXTextControl.TableColumn.Width">
			<summary>Gets or sets, in twips, the width of the column.</summary>
		</member>
		<member name="T:TXTextControl.TableColumnCollection">
			<summary>An instance of the TableColumnCollection class contains all columns of a table in a Text Control document represented through objects of the type TableColumn.</summary>
		</member>
		<member name="M:TXTextControl.TableColumnCollection.Add(TXTextControl.TableAddPosition)">
			<summary>Adds a new table column at the current text input position.</summary>
			<param name="position">Specifies the position where to add the column.</param>
		</member>
		<member name="M:TXTextControl.TableColumnCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.TableColumnCollection.GetItem">
			<summary>Gets the table column at the current input position.</summary>
		</member>
		<member name="M:TXTextControl.TableColumnCollection.GetItem(System.Int32)">
			<summary>Gets the table column with the specified number.</summary>
			<param name="column">Specifies the column number.</param>
		</member>
		<member name="M:TXTextControl.TableColumnCollection.Remove">
			<summary>Removes the table column at the current text input position or all selected table columns when a text selection exists.</summary>
		</member>
		<member name="P:TXTextControl.TableColumnCollection.CanAdd">
			<summary>Gets a value indicating whether a new column can be inserted at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.TableColumnCollection.CanRemove">
			<summary>Gets a value indicating whether table columns can be removed.</summary>
		</member>
		<member name="T:TXTextControl.TableEventArgs">
			<summary>The TableEventArgs class provides data for the TextControl.TableCreated, TextControl.TableDeleted and TextControl.TableFormatChanged events.</summary>
		</member>
		<member name="P:TXTextControl.TableEventArgs.Table">
			<summary>Gets an object that represents the table which causes the event.</summary>
		</member>
		<member name="T:TXTextControl.TablePartCollection">
			<summary>The TablePartCollection class is the base class of the TableRowCollection, TableColumnCollection and TableCellCollection classes.</summary>
		</member>
		<member name="M:TXTextControl.TablePartCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="P:TXTextControl.TablePartCollection.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
		</member>
		<member name="P:TXTextControl.TablePartCollection.IsSynchronized">
			<summary>Returns true if the collection is designed to be thread safe, otherwise, it returns false.</summary>
		</member>
		<member name="P:TXTextControl.TablePartCollection.SyncRoot">
			<summary>Gets an object that can be used to synchronize access to the collection.</summary>
		</member>
		<member name="T:TXTextControl.TableRow">
			<summary>An instance of the TableRow class represents a single row of a table in a Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.TableRow.Select">
			<summary>Selects the table row.</summary>
		</member>
		<member name="P:TXTextControl.TableRow.AllowPageBreak">
			<summary>Gets or sets a value specifying how the table row is formatted at page breaks.</summary>
		</member>
		<member name="P:TXTextControl.TableRow.CellFormat">
			<summary>Gets or sets the formatting attributes of a table row.</summary>
		</member>
		<member name="P:TXTextControl.TableRow.IsHeader">
			<summary>Gets or sets a value specifying whether the table row is part of the table's header.</summary>
		</member>
		<member name="P:TXTextControl.TableRow.MinimumHeight">
			<summary>Gets or sets the minimum height, in twips, of the table row.</summary>
		</member>
		<member name="P:TXTextControl.TableRow.Row">
			<summary>Gets the number of the table row represented through this table row object.</summary>
		</member>
		<member name="T:TXTextControl.TableRowCollection">
			<summary>An instance of the TableRowCollection class contains all rows of a table in a Text Control document represented through objects of the type TableRow.</summary>
		</member>
		<member name="M:TXTextControl.TableRowCollection.Add(TXTextControl.TableAddPosition,System.Int32)">
			<summary>Adds new table rows at the current text input position.</summary>
			<param name="position">Specifies the position where to add the rows.</param>
			<param name="count">Specifies the number of rows to add.</param>
		</member>
		<member name="M:TXTextControl.TableRowCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.TableRowCollection.GetItem">
			<summary>Gets the table row at the current input position.</summary>
		</member>
		<member name="M:TXTextControl.TableRowCollection.GetItem(System.Int32)">
			<summary>Gets the table row with the specified number.</summary>
			<param name="row">Specifies the row number.</param>
		</member>
		<member name="M:TXTextControl.TableRowCollection.Remove">
			<summary>Removes the selected table rows or the row at the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.TableRowCollection.CanAdd">
			<summary>Gets a value indicating whether a new row can be inserted at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.TableRowCollection.CanRemove">
			<summary>Gets a value indicating whether selected rows can be removed.</summary>
		</member>
		<member name="T:TXTextControl.TextChar">
			<summary>An instance of the TextChar class represents a single character in a Text Control document.</summary>
		</member>
		<member name="P:TXTextControl.TextChar.Bounds">
			<summary>Gets the bounding rectangle of the character.</summary>
		</member>
		<member name="P:TXTextControl.TextChar.Char">
			<summary>Gets the value of the character.</summary>
		</member>
		<member name="P:TXTextControl.TextChar.Number">
			<summary>Gets the character's number.</summary>
		</member>
		<member name="T:TXTextControl.TextCharCollection">
			<summary>An instance of the TextCharCollection class contains all characters in a Text Control document or part of the document represented through objects of the type TextChar.</summary>
		</member>
		<member name="M:TXTextControl.TextCharCollection.Add(System.Char)">
			<summary>Inserts a character at the current text input position.</summary>
			<param name="character">Specifies the character to insert.</param>
		</member>
		<member name="M:TXTextControl.TextCharCollection.Add(System.Char,System.String)">
			<summary>Inserts a character at the current text input position using the specified font.</summary>
			<param name="character">Specifies the character to insert.</param>
			<param name="fontName">Specifies the name of the font which is used for the specified character.</param>
		</member>
		<member name="M:TXTextControl.TextCharCollection.Add(System.Char,System.String,System.Int32)">
			<summary>Inserts a character at the specified position using the specified font.</summary>
			<param name="character">Specifies the character to insert.</param>
			<param name="fontName">Specifies the name of the font which is used for the specified character.</param>
			<param name="textPosition">Specifies a text input position.</param>
		</member>
		<member name="M:TXTextControl.TextCharCollection.Add(TXTextControl.ControlChars)">
			<summary>Inserts a control character at the current text input position.</summary>
			<param name="controlChar">Specifies a control character to insert.</param>
		</member>
		<member name="M:TXTextControl.TextCharCollection.Add(TXTextControl.ControlChars,System.Int32)">
			<summary>Inserts a control character at the specified text input position.</summary>
			<param name="controlChar">Specifies a control character to insert.</param>
			<param name="textPosition">Specifies a text input position.</param>
		</member>
		<member name="M:TXTextControl.TextCharCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.TextCharCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="M:TXTextControl.TextCharCollection.GetItem(System.Drawing.Point,System.Boolean)">
			<summary>Gets a particular character from the collection specified through a certain geometrical position.</summary>
			<param name="location">Specifies the character's location.</param>
			<param name="getNearest">Specifies whether the nearest character is returned.</param>
		</member>
		<member name="M:TXTextControl.TextCharCollection.Item">
			<summary>Gets the character from the collection. In C# this property is the indexer for the TextCharCollection class.</summary>
		</member>
		<member name="M:TXTextControl.TextCharCollection.Remove(TXTextControl.TextChar)">
			<summary>Removes a character from a Text Control document. The method can also be used to remove control characters. Single control characters which are important for other formatting attributes, i.e. a table cell end character, cannot be removed through this method.</summary>
			<param name="textChar">Specifies the character to remove.</param>
		</member>
		<member name="P:TXTextControl.TextCharCollection.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
		</member>
		<member name="T:TXTextControl.TextContextMenuEventArgs">
			<summary>The TextContextMenuEventArgs class provides data for the TextControl.TextContextMenuOpening event of a Windows Forms TextControl.</summary>
		</member>
		<member name="P:TXTextControl.TextContextMenuEventArgs.ContextMenuLocation">
			<summary>Gets the location in the document for which the context menu will be opened.</summary>
		</member>
		<member name="P:TXTextControl.TextContextMenuEventArgs.Location">
			<summary>Gets the location, in pixels, where the context menu is displayed.</summary>
		</member>
		<member name="P:TXTextControl.TextContextMenuEventArgs.TextContextMenu">
			<summary>Gets or sets the context menu, which will be shown.</summary>
		</member>
		<member name="T:TXTextControl.TextControl">
			<summary>The TextControl class implements a Windows Forms control with high-level text editing features.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.#ctor">
			<summary>Initializes a new instance of the TextControl class.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.AddSymbolDialog">
			<summary>Invokes a built-in dialog box for inserting symbol characters.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Append(TXTextControl.AppendSettings)">
			<summary>Opens a file open dialogbox and appends the selected file to the existing document.</summary>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Append(TXTextControl.StreamType,TXTextControl.AppendSettings)">
			<summary>Opens a file open dialogbox and appends the selected file with the specified format to the existing document.</summary>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Append(System.String,TXTextControl.StreamType,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format from the specified file and appends it to the existing document.</summary>
			<param name="path">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Append(System.IO.FileStream,TXTextControl.StreamType,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format from the specified file stream and appends it to the existing document.</summary>
			<param name="fileStream">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Append(System.Byte[],TXTextControl.BinaryStreamType,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format from the specified byte array and appends it to the existing document.</summary>
			<param name="binaryData">Specifies a byte array from which the data is loaded.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Append(System.String,TXTextControl.StringStreamType,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format from the specified string and appends it to the existing document.</summary>
			<param name="stringData">Specifies a string from which the data is loaded.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Append(TXTextControl.StreamType,TXTextControl.LoadSettings,TXTextControl.AppendSettings)">
			<summary>Opens a file open dialogbox and appends the selected file with the specified format and special settings to the existing document.</summary>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Append(System.String,TXTextControl.StreamType,TXTextControl.LoadSettings,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format and special settings from the specified file and appends it to the existing document.</summary>
			<param name="path">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Append(System.IO.FileStream,TXTextControl.StreamType,TXTextControl.LoadSettings,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format and special settings from the specified file stream and appends it to the existing document.</summary>
			<param name="fileStream">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Append(System.Byte[],TXTextControl.BinaryStreamType,TXTextControl.LoadSettings)">
			<summary>Loads text with the specified format and special settings from the specified byte array and appends it to the existing document.</summary>
			<param name="binaryData">Specifies a byte array from which the data is loaded.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Append(System.String,TXTextControl.StringStreamType,TXTextControl.LoadSettings,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format and special settings from the specified string and appends it to the existing document.</summary>
			<param name="stringData">Specifies a string from which the data is loaded.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.TextControl.BarcodeLayoutDialog">
			<summary>Opens the dialog box showing its first tab.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.BarcodeLayoutDialog(System.Int32)">
			<summary>Opens the dialog box showing the specified tab.</summary>
			<param name="activeTab">Specifies the index of the tab, zero-based, that is displayed when the tabbed dialog box is opened.</param>
		</member>
		<member name="M:TXTextControl.TextControl.BeginUndoAction(System.String)">
			<summary>Begins a user-defined undo operation. All editing and fomatting changes made between BeginUndoAction and EndUndoAction belong to the undo operation. These changes are undone or redone in a single step. The specified user-defined name is available with the UndoActionName property.</summary>
			<param name="actionName">Specifies the undo action's name.</param>
		</member>
		<member name="M:TXTextControl.TextControl.ChartLayoutDialog">
			<summary>Opens the dialog box showing its first tab.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ChartLayoutDialog(System.Int32)">
			<summary>Opens the dialog box showing the specified tab.</summary>
			<param name="activeTab">Specifies the index of the tab, zero-based, that is displayed when the tabbed dialog box is opened.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Clear">
			<summary>Clears the selected text or the character right from the current input position from the Text Control. This method works only if the Text Control has the focus.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ClearUndo">
			<summary>Clears the undo buffer of the Text Control.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Copy">
			<summary>Copies the current selection in the Text Control to the Clipboard.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Cut">
			<summary>Moves the current selection in the Text Control to the Clipboard.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.DrawingLayoutDialog">
			<summary>Opens the dialog box showing its first tab.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.DrawingLayoutDialog(System.Int32)">
			<summary>Opens the dialog box showing the specified tab.</summary>
			<param name="activeTab">Specifies the index of the tab, zero-based, that is displayed when the tabbed dialog box is opened.</param>
		</member>
		<member name="M:TXTextControl.TextControl.EndUndoAction">
			<summary>Ends a user-defined undo operation. All editing and fomatting changes made between BeginUndoAction and EndUndoAction belong to the undo operation. These changes are undone or redone in a single step.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Find">
			<summary>Opens the built-in Find dialog box to search for a text string in the text part with the input focus. This can be the main text, a text frame or a header or footer.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Find(System.String)">
			<summary>Searches for the specified text string in the text part with the input focus. This can be the main text, a text frame or a header or footer. The search starts at the beginning of the text.</summary>
			<param name="text">Specifies the text to search for.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Find(System.String,System.Int32,TXTextControl.FindOptions)">
			<summary>Searches for the specified text string in the text part with the input focus. This can be the main text, a text frame or a header or footer. The search is done with the specified find options and starts at the specified position.</summary>
			<param name="text">Specifies the text to search for.</param>
			<param name="start">Specifies the text position where the search starts, beginning with 0.</param>
			<param name="options">Specifies search options.</param>
		</member>
		<member name="M:TXTextControl.TextControl.FontDialog">
			<summary>Invokes the built-in font dialog box.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ForeColorDialog">
			<summary>Invokes the built-in dialog box for setting the text color.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.FormattingStylesDialog">
			<summary>Invokes the built-in dialog box for creating, deleting and modifying formatting styles.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.FrameFillColorDialog">
			<summary>Invokes the built-in dialog box for choosing a color for the background of a paragraph or a table cell.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.FrameLineColorDialog">
			<summary>Invokes the built-in dialog box for choosing a color for the frame of a paragraph or a table.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.GetClipboardFormats">
			<summary>Returns an array of ClipboardFormat values. These values specify all the data formats which are currently available in the clipboard and which can be pasted into a TextControl document. If there is no data format available, this method returns null.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.GetSupportedFonts">
			<summary>Gets an array of strings specifying the names of all currently supported fonts. These fonts depend on the formatting device set with the TextControl.FormattingPrinter property. The method returns null, if the TextControl has not been completely initialized.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.GetSupportedPaperSizes">
			<summary>Gets an array of PaperSize structures specifying the names and the size of all currently supported paper sizes. These paper sizes depend on the formatting device set with the TextControl.FormattingPrinter property. The method returns null, if the TextControl has not been completely initialized.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.GetTextFields(TXTextControl.TextFieldType)">
			<summary>Returns a collection containing text fields of the specified types.</summary>
			<param name="fieldType">Specifies types of text fields.</param>
		</member>
		<member name="M:TXTextControl.TextControl.GetXmlElements(System.String)">
			<summary>Returns a collection of XML elements. It is an object of the type XmlElementCollection.</summary>
			<param name="elementName">Specifies the XML element's name.</param>
		</member>
		<member name="M:TXTextControl.TextControl.GetVersionInfo">
			<summary>Returns an object of the type VersionInfo, which provides information about the installed TX Text Control version.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ImageAttributesDialog">
			<summary>Opens the dialog box showing its first tab.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ImageAttributesDialog(System.Int32)">
			<summary>Opens the dialog box showing the specified tab.</summary>
			<param name="activeTab">Specifies the index of the tab, zero-based, that is displayed when the tabbed dialog box is opened.</param>
		</member>
		<member name="M:TXTextControl.TextControl.LanguageDialog">
			<summary>Invokes the built-in dialog box for setting the language of the selected text.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ListFormatDialog">
			<summary>Invokes the built-in dialog box for setting formatting attributes of bulleted and numbered lists.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Load">
			<summary>Opens a dialog box to select a file and loads the text from that file.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Load(TXTextControl.StreamType)">
			<summary>Opens a dialog box to select a file in the specified format and loads the text from that file.</summary>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Load(System.String,TXTextControl.StreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified file.</summary>
			<param name="path">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Load(System.IO.FileStream,TXTextControl.StreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified file stream.</summary>
			<param name="fileStream">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Load(System.Byte[],TXTextControl.BinaryStreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified byte array.</summary>
			<param name="binaryData">Specifies a byte array from which the data is loaded.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Load(System.String,TXTextControl.StringStreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified string.</summary>
			<param name="stringData">Specifies a string from which the data is loaded.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Load(TXTextControl.StreamType,TXTextControl.LoadSettings)">
			<summary>Opens a dialog box to select a file in the specified format and loads the text from that file using the specified special settings.</summary>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Load(System.String,TXTextControl.StreamType,TXTextControl.LoadSettings)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified file and loaded using the given special settings.</summary>
			<param name="path">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Load(System.IO.FileStream,TXTextControl.StreamType,TXTextControl.LoadSettings)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified file stream and loaded using the given special settings.</summary>
			<param name="fileStream">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Load(System.Byte[],TXTextControl.BinaryStreamType,TXTextControl.LoadSettings)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified byte array and loaded using the given special settings.</summary>
			<param name="binaryData">Specifies a byte array from which the data is loaded.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Load(System.String,TXTextControl.StringStreamType,TXTextControl.LoadSettings)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified string and loaded using the given special settings.</summary>
			<param name="stringData">Specifies a string from which the data is loaded.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnAcceptsTabChanged(System.EventArgs)">
			<summary>Raises the AcceptsTabChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnAdaptFont(TXTextControl.AdaptFontEventArgs)">
			<summary>Raises the AdaptFont event.</summary>
			<param name="e">Specifies an AdaptFontEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnBarcodeClicked(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeClicked event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnBarcodeCreated(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeCreated event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnBarcodeDeleted(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeDeleted event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnBarcodeDeselected(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeDeselected event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnBarcodeDoubleClicked(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeDoubleClicked event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnBarcodeMoved(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeMoved event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnBarcodeRightClicked(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeRightClicked event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnBarcodeSelected(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeSelected event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnBarcodeSized(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeSized event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnBorderStyleChanged(System.EventArgs)">
			<summary>Raises the BorderStyleChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnChanged(System.EventArgs)">
			<summary>Raises the Changed event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnCharFormatChanged(System.EventArgs)">
			<summary>Raises the CharFormatChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnChartClicked(DataVisualization.ChartEventArgs)">
			<summary>Raises the ChartClicked event.</summary>
			<param name="e">Specifies an ChartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnChartCreated(DataVisualization.ChartEventArgs)">
			<summary>Raises the ChartCreated event.</summary>
			<param name="e">Specifies an ChartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnChartDeleted(DataVisualization.ChartEventArgs)">
			<summary>Raises the ChartDeleted event.</summary>
			<param name="e">Specifies an ChartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnChartDeselected(DataVisualization.ChartEventArgs)">
			<summary>Raises the ChartDeselected event.</summary>
			<param name="e">Specifies an ChartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnChartDoubleClicked(DataVisualization.ChartEventArgs)">
			<summary>Raises the ChartDoubleClicked event.</summary>
			<param name="e">Specifies an ChartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnChartMoved(DataVisualization.ChartEventArgs)">
			<summary>Raises the ChartMoved event.</summary>
			<param name="e">Specifies an ChartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnChartRightClicked(DataVisualization.ChartEventArgs)">
			<summary>Raises the ChartRightClicked event.</summary>
			<param name="e">Specifies an ChartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnChartSelected(DataVisualization.ChartEventArgs)">
			<summary>Raises the ChartSelected event.</summary>
			<param name="e">Specifies an ChartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnChartSized(DataVisualization.ChartEventArgs)">
			<summary>Raises the ChartSized event.</summary>
			<param name="e">Specifies an ChartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnDocumentLinkClicked(TXTextControl.DocumentLinkEventArgs)">
			<summary>Raises the DocumentLinkClicked event.</summary>
			<param name="e">Specifies an DocumentLinkEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnDocumentLoaded(System.EventArgs)">
			<summary>Raises the DocumentLoaded event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnDrawingActivated(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingActivated event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnDrawingClicked(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingClicked event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnDrawingCreated(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingCreated event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnDrawingDeactivated(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingDeactivated event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnDrawingDeleted(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingDeleted event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnDrawingDeselected(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingDeselected event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnDrawingDoubleClicked(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingDoubleClicked event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnDrawingMoved(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingMoved event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnDrawingRightClicked(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingRightClicked event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnDrawingSelected(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingSelected event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnDrawingSized(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingSized event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnFontChanged(System.EventArgs)">
			<summary>Overridden. See Control.OnFontChanged.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnFormattingStyleListChanged(System.EventArgs)">
			<summary>Raises the FormattingStyleListChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnFrameClicked(TXTextControl.FrameEventArgs)">
			<summary>Raises the FrameClicked event.</summary>
			<param name="e">Specifies an FrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnFrameDeselected(TXTextControl.FrameEventArgs)">
			<summary>Raises the FrameDeselected event.</summary>
			<param name="e">Specifies an FrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnFrameDoubleClicked(TXTextControl.FrameEventArgs)">
			<summary>Raises the FrameDoubleClicked event.</summary>
			<param name="e">Specifies an FrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnFrameLayoutChanged(TXTextControl.FrameEventArgs)">
			<summary>Raises the FrameLayoutChanged event.</summary>
			<param name="e">Specifies an FrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnFrameMoved(TXTextControl.FrameEventArgs)">
			<summary>Raises the FrameMoved event.</summary>
			<param name="e">Specifies an FrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnFrameRightClicked(TXTextControl.FrameEventArgs)">
			<summary>Raises the FrameRightClicked event.</summary>
			<param name="e">Specifies an FrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnFrameSelected(TXTextControl.FrameEventArgs)">
			<summary>Raises the FrameSelected event.</summary>
			<param name="e">Specifies an FrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnFrameSized(TXTextControl.FrameEventArgs)">
			<summary>Raises the FrameSized event.</summary>
			<param name="e">Specifies an FrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnHandleCreated(System.EventArgs)">
			<summary>Overridden. See Control.OnHandleCreated.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnHeaderFooterActivated(TXTextControl.HeaderFooterEventArgs)">
			<summary>Raises the HeaderFooterActivated event.</summary>
			<param name="e">Specifies an HeaderFooterEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnHeaderFooterDeactivated(TXTextControl.HeaderFooterEventArgs)">
			<summary>Raises the HeaderFooterDeactivated event.</summary>
			<param name="e">Specifies an HeaderFooterEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnHExpanded(System.EventArgs)">
			<summary>Raises the HExpanded event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnHScroll(System.EventArgs)">
			<summary>Raises the HScroll event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnHShrunk(System.EventArgs)">
			<summary>Raises the HShrunk event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnHypertextLinkClicked(TXTextControl.HypertextLinkEventArgs)">
			<summary>Raises the HypertextLinkClicked event.</summary>
			<param name="e">Specifies an HypertextLinkEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnHyphenateWord(TXTextControl.HyphenateWordEventArgs)">
			<summary>Raises the HyphenateWord event.</summary>
			<param name="e">Specifies an HyphenateWordEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnImageClicked(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageClicked event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnImageCreated(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageCreated event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnImageDeleted(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageDeleted event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnImageDeselected(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageDeselected event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnImageDoubleClicked(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageDoubleClicked event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnImageMoved(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageMoved event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnImageRightClicked(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageRightClicked event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnImageSelected(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageSelected event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnImageSized(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageSized event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnInputFormattingStyleChanged(System.EventArgs)">
			<summary>Raises the InputFormattingStyleChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnInputParagraphChanged(System.EventArgs)">
			<summary>Raises the InputParagraphChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnInputPositionChanged(System.EventArgs)">
			<summary>Raises the InputPositionChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnPageChanged(System.EventArgs)">
			<summary>Raises the PageChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnPageFormatChanged(System.EventArgs)">
			<summary>Raises the PageFormatChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnParagraphFormatChanged(System.EventArgs)">
			<summary>Raises the ParagraphFormatChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnSectionChanged(System.EventArgs)">
			<summary>Raises the SectionChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnSpellCheckText(TXTextControl.SpellCheckTextEventArgs)">
			<summary>Raises the SpellCheckText event.</summary>
			<param name="e">Specifies an SpellCheckTextEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnSubTextPartClicked(TXTextControl.SubTextPartEventArgs)">
			<summary>Raises the SubTextPartClicked event.</summary>
			<param name="e">Specifies an SubTextPartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnSubTextPartDoubleClicked(TXTextControl.SubTextPartEventArgs)">
			<summary>Raises the SubTextPartDoubleClicked event.</summary>
			<param name="e">Specifies an SubTextPartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnSubTextPartEntered(TXTextControl.SubTextPartEventArgs)">
			<summary>Raises the SubTextPartEntered event.</summary>
			<param name="e">Specifies an SubTextPartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnSubTextPartLeft(TXTextControl.SubTextPartEventArgs)">
			<summary>Raises the SubTextPartLeft event.</summary>
			<param name="e">Specifies an SubTextPartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTableCreated(TXTextControl.TableEventArgs)">
			<summary>Raises the TableCreated event.</summary>
			<param name="e">Specifies an TableEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTableDeleted(TXTextControl.TableEventArgs)">
			<summary>Raises the TableDeleted event.</summary>
			<param name="e">Specifies an TableEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTableFormatChanged(TXTextControl.TableEventArgs)">
			<summary>Raises the TableFormatChanged event.</summary>
			<param name="e">Specifies an TableEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextContextMenuOpening(TXTextControl.TextContextMenuEventArgs)">
			<summary>Raises the TextContextMenuOpening event.</summary>
			<param name="e">Specifies an TextContextMenuEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFieldChanged(TXTextControl.TextFieldEventArgs)">
			<summary>Raises the TextFieldChanged event.</summary>
			<param name="e">Specifies an TextFieldEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFieldClicked(TXTextControl.TextFieldEventArgs)">
			<summary>Raises the TextFieldClicked event.</summary>
			<param name="e">Specifies an TextFieldEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFieldCreated(TXTextControl.TextFieldEventArgs)">
			<summary>Raises the TextFieldCreated event.</summary>
			<param name="e">Specifies an TextFieldEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFieldDoubleClicked(TXTextControl.TextFieldEventArgs)">
			<summary>Raises the TextFieldDoubleClicked event.</summary>
			<param name="e">Specifies an TextFieldEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFieldDeleted(TXTextControl.TextFieldEventArgs)">
			<summary>Raises the TextFieldDeleted event.</summary>
			<param name="e">Specifies an TextFieldEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFieldEntered(TXTextControl.TextFieldEventArgs)">
			<summary>Raises the TextFieldEntered event.</summary>
			<param name="e">Specifies an TextFieldEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFieldLeft(TXTextControl.TextFieldEventArgs)">
			<summary>Raises the TextFieldLeft event.</summary>
			<param name="e">Specifies an TextFieldEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFrameActivated(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameActivated event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFrameAppearanceChanged(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameAppearanceChanged event.</summary>
			<param name="e">Specifies a TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFrameClicked(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameClicked event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFrameCreated(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameCreated event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFrameDeactivated(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameDeactivated event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFrameDeleted(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameDeleted event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFrameDeselected(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameDeselected event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFrameDoubleClicked(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameDoubleClicked event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFrameMoved(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameMoved event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFrameRightClicked(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameRightClicked event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFrameSelected(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameSelected event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnTextFrameSized(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameSized event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnVExpanded(System.EventArgs)">
			<summary>Raises the VExpanded event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnVScroll(System.EventArgs)">
			<summary>Raises the VScroll event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnVShrunk(System.EventArgs)">
			<summary>Raises the VShrunk event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnXmlInvalid(TXTextControl.XmlErrorEventArgs)">
			<summary>Raises the XmlInvalid event.</summary>
			<param name="e">Specifies an XmlErrorEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnXmlNotWellFormed(TXTextControl.XmlErrorEventArgs)">
			<summary>Raises the XmlNotWellFormed event.</summary>
			<param name="e">Specifies an XmlErrorEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.OnZoomed(System.EventArgs)">
			<summary>Raises the Zoomed event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.TextControl.PageColorDialog">
			<summary>Invokes the built-in dialog box for setting the page color.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ParagraphFormatDialog">
			<summary>Opens the dialog box showing its first tab.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ParagraphFormatDialog(System.Int32)">
			<summary>Opens the dialog box showing the specified tab.</summary>
			<param name="activeTab">Specifies the index of the tab, zero-based, that is displayed when the tabbed dialog box is opened.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Paste">
			<summary>Replaces the current selection in the Text Control with the contents of the Clipboard. If the data in the clipboard are provided in several formats, the format with the maximum of information is used.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Paste(TXTextControl.ClipboardFormat)">
			<summary>Replaces the current selection in the Text Control with the contents of the Clipboard. Only data provided in the specified format is inserted.</summary>
			<param name="format">Specifies the format to paste.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Print(System.String)">
			<summary>Opens the standard print dialog to get printer settings and prints the document.</summary>
			<param name="docName">Specifies the document's name.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Print(System.Drawing.Printing.PrintDocument)">
			<summary>Prints the document using the printer settings of the specified PrintDocument.</summary>
			<param name="printDocument">Specifies an instance of the PrintDocument class.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Print(System.Int32,System.Drawing.Printing.PrintPageEventArgs)">
			<summary>Prints a single page. This method can be called from the PrintPage event handler.</summary>
			<param name="page">Specifies a page number to print.</param>
			<param name="ppe">Specifies the event arguments of the print document's PrintPage event.</param>
		</member>
		<member name="M:TXTextControl.TextControl.PrintPreview(System.String)">
			<summary>Shows a print preview of the current document.</summary>
			<param name="docName">Specifies the document's name.</param>
		</member>
		<member name="M:TXTextControl.TextControl.PrintPreview(System.Drawing.Printing.PrintDocument)">
			<summary>Shows a print preview of the current document using settings from the specified PrintDocument object.</summary>
			<param name="printDocument">Specifies an instance of the PrintDocument class.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Redo">
			<summary>Redoes the last Text Control operation.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Replace">
			<summary>Opens the built-in Replace dialog box.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ResetAutoControlSize">
			<summary>Resets the AutoControlSize property to its default values. The default of the AutoControlSize property is a TextControl object that does not automatically expand or shrink its width or height.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ResetBackColor">
			<summary>Overridden. Resets the BackColor property to its default value. The default value is the system color for the window background.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ResetContents">
			<summary>Deletes the entire contents of a Text Control.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ResetCursor">
			<summary>Overridden. Resets the Cursor property to its default value. The default value is the IBeam cursor.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ResetDisplayColors">
			<summary>Resets all display colors of a text control to their system dependent default values.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ResetFieldCursor">
			<summary>Resets the FieldCursor property to its default value. The default value is the Hand cursor.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ResetForeColor">
			<summary>Overridden. Resets the ForeColor property to its default value. The default value is the system color for the window text.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ResetPageMargins">
			<summary>Resets the PageMargins property to its default value. The default page margins are 1 inch.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ResetPageSize">
			<summary>Resets the PageSize property to its default value. The default page size is US letter (8,5 x 11 inch).</summary>
		</member>
		<member name="M:TXTextControl.TextControl.ResetTextBackColor">
			<summary>Resets the TextBackColor property to its default value. The default value is the setting of the BackColor property.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Save">
			<summary>Opens a file save dialogbox and saves the complete contents of a document in a file.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Save(TXTextControl.StreamType)">
			<summary>Opens a file save dialogbox and saves the complete contents of a document in a file with the specified format.</summary>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Save(System.String,TXTextControl.StreamType)">
			<summary>Saves the complete contents of a document in the specified file with the specified format.</summary>
			<param name="path">Specifies a file into which the data is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Save(System.IO.FileStream,TXTextControl.StreamType)">
			<summary>Saves the complete contents of a document in the specified file stream with the specified format.</summary>
			<param name="fileStream">Specifies a file into which the data is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Save(System.Byte[]@,TXTextControl.BinaryStreamType)">
			<summary>Saves the complete contents of a document in the specified byte array with the specified format.</summary>
			<param name="binaryData">Specifies a byte array into which the data is saved.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Save(System.String@,TXTextControl.StringStreamType)">
			<summary>Saves the complete contents of a document as a string with the specified format.</summary>
			<param name="stringData">Specifies a string into which the data is saved.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Save(TXTextControl.StreamType,TXTextControl.SaveSettings)">
			<summary>Opens a file save dialogbox and saves the complete contents of a document in a file with the specified format and special settings.</summary>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Save(System.String,TXTextControl.StreamType,TXTextControl.SaveSettings)">
			<summary>Saves the complete contents of a document in the specified file using the specified format and special settings.</summary>
			<param name="path">Specifies a file into which the data is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Save(System.IO.FileStream,TXTextControl.StreamType,TXTextControl.SaveSettings)">
			<summary>Saves the complete contents of a document in the specified file stream using the specified format and special settings.</summary>
			<param name="fileStream">Specifies a file into which the data is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Save(System.Byte[]@,TXTextControl.BinaryStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the complete contents of a document in the specified byte array using the specified format and special settings.</summary>
			<param name="binaryData">Specifies a byte array into which the data is saved.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Save(System.String@,TXTextControl.StringStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the complete contents of a document as a string using the specified format and special settings.</summary>
			<param name="stringData">Specifies a string into which the data is saved.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.TextControl.SectionFormatDialog(System.Int32)">
			<summary>Invokes the built-in tabbed dialog box for setting section attributes. These are page settings such as margins, size and orientation and all settings concerning headers and footers.</summary>
			<param name="activeTab">Specifies the index of the tab, zero-based, that is displayed when the tabbed dialog box is opened.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Select(System.Int32,System.Int32)">
			<summary>Selects text within the Text Control.</summary>
			<param name="start">Specifies the selection's start position.</param>
			<param name="length">Specifies the number of selected characters.</param>
		</member>
		<member name="M:TXTextControl.TextControl.SelectAll">
			<summary>Selects all text in the Text Control.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.SpellCheckDialog">
			<summary>Invokes the built-in dialog box for correcting misspelled words.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.SpellCheckDialog(System.Object)">
			<summary>Invokes the built-in dialog box for correcting misspelled words using the specified dictionary for making suggestions.</summary>
			<param name="suggestionDictionary">Specifies the dictionary used for making suggestions.</param>
		</member>
		<member name="M:TXTextControl.TextControl.TabDialog">
			<summary>Invokes the built-in dialog box for setting tabs.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.TableFormatDialog">
			<summary>Opens the dialog box showing its first tab.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.TableFormatDialog(System.Int32)">
			<summary>Opens the dialog box showing the specified tab.</summary>
			<param name="activeTab">Specifies the index of the tab, zero-based, that is displayed when the tabbed dialog box is opened.</param>
		</member>
		<member name="M:TXTextControl.TextControl.TextBackColorDialog">
			<summary>Invokes the built-in dialog box for setting the background color of the text.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.TextFrameAttributesDialog">
			<summary>Opens the dialog box showing its first tab.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.TextFrameAttributesDialog(System.Int32)">
			<summary>Opens the dialog box showing the specified tab.</summary>
			<param name="activeTab">Specifies the index of the tab, zero-based, that is displayed when the tabbed dialog box is opened.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Undo">
			<summary>Undoes the last edit operation in the Text Control.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Zoom(System.Int32)">
			<summary>Zooms the contents of the TextControl using the specified zoom factor.</summary>
			<param name="zoomFactor">Specifies the zoom factor, in percent.</param>
		</member>
		<member name="M:TXTextControl.TextControl.Zoom(TXTextControl.ZoomOption)">
			<summary>Zooms the contents of the TextControl using the specified option.</summary>
			<param name="zoomOption">Specifies one of the ZoomOption values.</param>
		</member>
		<member name="P:TXTextControl.TextControl.AcceptsTab">
			<summary>Gets or sets a value indicating whether pressing the TAB key types a TAB character in the control instead of moving the focus to the next control in the tab order.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.AllowDrag">
			<summary>Gets or sets a value indicating whether the control can be a source of a Drag&amp;Drop operation.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.AllowDrop">
			<summary>Overridden. Gets or sets a value indicating whether the control can accept data that the user drags onto it.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.AllowUndo">
			<summary>Gets or sets a value indicating whether the undo buffer is active or not.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.ApplicationFields">
			<summary>Gets a collection of all application fields contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.AutoControlSize">
			<summary>Gets or sets values that enable automatic expansion or shrinking of a Text Control's width or height depending on the currently contained text.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.BackColor">
			<summary>Overridden. Gets or sets the background color of the control.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.BackgroundStyle">
			<summary>Defines the kind of view to display the page background.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Barcodes">
			<summary>Gets a collection of all barcodes contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Baseline">
			<summary>Gets or sets the baseline alignment, in twips, of the Text Control.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.BorderStyle">
			<summary>Gets or sets the border type of the Text Control.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.ButtonBar">
			<summary>Specifies the button bar control to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.CanCopy">
			<summary>Informs whether a part of a Text Control document has been selected and can be copied to the clipboard.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.CanPaste">
			<summary>Informs whether the clipboard contains a format that can be pasted into a Text Control document.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.CanRedo">
			<summary>Informs whether an operation can be re-done using the Redo method.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.CanUndo">
			<summary>Gets a value indicating whether the user can undo the previous operation in a Text Control.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.CaretWidth">
			<summary>Gets or sets the width of the caret in pixels.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Charts">
			<summary>Gets a collection of all charts contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.ControlChars">
			<summary>Specifies if control characters are visible or not.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.DisplayColors">
			<summary>Gets or sets the colors of the text control.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.DocumentLinks">
			<summary>Gets a collection of all document links contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.DocumentTargetMarkers">
			<summary>Gets or sets a value indicating that markers for hypertext targets are shown or not.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.DocumentTargets">
			<summary>Gets a collection of all targets contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.DrawingMarkerLines">
			<summary>Specifies whether a marker frame is shown around a drawing to indicate its position and size.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Drawings">
			<summary>Gets a collection of all drawings contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.DropFormats">
			<summary>Gets or sets the formats of data the control can accept when the user drags it onto the control.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.EditMode">
			<summary>Gets or sets a value indicating whether the document's text is read-only, can be selected or is editable.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.FieldCursor">
			<summary>Gets or sets the cursor that is displayed when the mouse pointer is over a marked text field.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.FontSettings">
			<summary>Gets a FontSettings object which provides properties determining which fonts can be used in a document.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.FontUnderlineStyle">
			<summary>Gets or sets underlining style for the text displayed by the control.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.ForeColor">
			<summary>Overridden. Gets or sets the foreground color of the control which is the color of the document's text.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.FormattingPrinter">
			<summary>Gets or sets the name of a printer the text dimensions and capabilities of which are used to format the document.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Frames">
			<summary>Gets a collection of all images, textframes, charts, barcodes and drawings contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.GetPages">
			<summary>Gets a collection of all pages in the document.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.HeaderFooterActivationStyle">
			<summary>Gets or sets a value specifying the activation style for headers and footers.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.HeaderFooterFrameStyle">
			<summary>Gets or sets a value specifying the frame for activated headers and footers.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.HeadersAndFooters">
			<summary>Gets a collection of all headers and footers the current document contains.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.HideSelection">
			<summary>Gets or sets a value indicating whether the selected text in the Text Control remains highlighted when the control loses focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.HypertextLinks">
			<summary>Gets a collection of all hypertext links contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Images">
			<summary>Gets a collection of all images contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.InlineStyles">
			<summary>Gets a collection of all inline styles the current document contains.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.InputFormat">
			<summary>Gets an object of the type InputFormat which represents all formatting attributes at the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.InputPosition">
			<summary>Gets or sets the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.InsertionMode">
			<summary>Specifies whether text is inserted or overwrites existing text.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.IsHyphenationEnabled">
			<summary>Gets or sets a value indicating whether hyphenation is active or not.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.IsLanguageDetectionEnabled">
			<summary>Gets or sets a value indicating whether language detection is active or not.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.IsSpellCheckingEnabled">
			<summary>Gets or sets a value indicating whether spell checking is active or not.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Landscape">
			<summary>Gets or sets a value indicating whether the page orientation is landscape or portrait.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Lines">
			<summary>Gets a collection of all lines contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.ListFormat">
			<summary>Gets or sets the type and the formatting attributes of a bulleted or numbered list.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.MisspelledWords">
			<summary>Gets a collection of all misspelled words contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.PageMargins">
			<summary>Gets or sets the margins for the pages of the current document.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Pages">
			<summary>Gets the number of pages contained in the current document.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.PageSize">
			<summary>Specifies the width and height of the pages for the current document.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.PageUnit">
			<summary>Gets or sets the measure used for page sizes and page margins.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.ParagraphFormat">
			<summary>Gets or sets the paragraph formatting attributes of the text displayed by the control.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Paragraphs">
			<summary>Gets a collection of all paragraphs contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.ParagraphStyles">
			<summary>Gets a collection of all paragraph styles the current document contains.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.PermanentControlChars">
			<summary>Gets or sets a value indicating which control characters are shown permanently on the screen.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.RedoActionName">
			<summary>Gets a string that represents the name of the action that will be performed when a call to the Redo method is made.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Ribbon">
			<summary>Specifies the ribbon control to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.RulerBar">
			<summary>Specifies the horizontal ruler bar control to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.ScrollBars">
			<summary>Gets or sets a value indicating whether a Text Control has horizontal or vertical scroll bars.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.ScrollLocation">
			<summary>Gets or sets the coordinates, in twips, of the upper-left corner of the document's visible part relative to the upper-left corner of the complete document.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Sections">
			<summary>Gets a collection of all sections in the document.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Selection">
			<summary>Gets or sets the current selection in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.SelectionViewMode">
			<summary>Specifies whether text selections are displayed with a transparent bitmap or through inverting the text.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.SpellCheckContextMenuStrip">
			<summary>Specifies the context menu which is used when the end-user right-clicks a misspelled word.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.SpellChecker">
			<summary>Specifies the spell checking component to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.StatusBar">
			<summary>Specifies the status bar control to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.SubTextParts">
			<summary>Gets a collection of all subtextparts contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Tables">
			<summary>Gets a collection of all tables contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.TextBackColor">
			<summary>Gets or sets the background color for the text.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.TextChars">
			<summary>Gets a collection of all characters contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.TextFields">
			<summary>Gets a collection of all standard text fields contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.TextFrameMarkerLines">
			<summary>Specifies whether text frames that have no border line are shown with marker lines.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.TextFrames">
			<summary>Gets a collection of all text frames contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.TextParts">
			<summary>Gets a collection of all main text parts the current document contains.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.UndoActionName">
			<summary>Gets a string that represents the name of the action that will be performed when a call to the Undo method is made.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.VerticalRulerBar">
			<summary>Specifies the vertical ruler bar control to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.ViewMode">
			<summary>Gets or sets the mode in which Text Control displays its contents.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.XmlEditMode">
			<summary>Gets or sets a value specifying whether Text Control operates in an edit mode that validates the XML document according to the document's DTD.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.ZoomFactor">
			<summary>Gets or sets the zoom factor, in percent, for a Text Control.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.AcceptsTabChanged">
			<summary>Occurs when the value of the AcceptsTab property has changed.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.AdaptFont">
			<summary>Occurs for each font that must be adapted, because it is not supported.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.BarcodeClicked">
			<summary>Occurs when a barcode has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.BarcodeCreated">
			<summary>Occurs when a new barcode has been created.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.BarcodeDeleted">
			<summary>Occurs when a barcode has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.BarcodeDoubleClicked">
			<summary>Occurs when a barcode has been doubleclicked on.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.BarcodeMoved">
			<summary>Occurs when a barcode has been moved.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.BarcodeRightClicked">
			<summary>Occurs when a barcode has been clicked on with the right mouse button.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.BarcodeSelected">
			<summary>Occurs when a barcode has been selected.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.BarcodeDeselected">
			<summary>Occurs when a barcode has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.BarcodeSized">
			<summary>Occurs when a barcode has been sized.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.BorderStyleChanged">
			<summary>Occurs when the value of the BorderStyle property has changed.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.Changed">
			<summary>Indicates that the contents of a document have been changed.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.CharFormatChanged">
			<summary>Occurs when the character formatting attributes either of the selected characters or the current text input position have been changed.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ChartClicked">
			<summary>Occurs when a chart has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ChartCreated">
			<summary>Occurs when a new chart has been created.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ChartDeleted">
			<summary>Occurs when a chart has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ChartDoubleClicked">
			<summary>Occurs when a chart has been doubleclicked on.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ChartMoved">
			<summary>Occurs when a chart has been moved.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ChartRightClicked">
			<summary>Occurs when a chart has been clicked on with the right mouse button.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ChartSelected">
			<summary>Occurs when a chart has been selected.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ChartDeselected">
			<summary>Occurs when a chart has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ChartSized">
			<summary>Occurs when a chart has been sized.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.DocumentLinkClicked">
			<summary>Occurs when a text field has been clicked on that represents a link to a target in the document.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.DocumentLoaded">
			<summary>Occurs when a new document has been loaded.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.DrawingActivated">
			<summary>Occurs when a drawing has been activated.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.DrawingClicked">
			<summary>Occurs when a drawing has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.DrawingCreated">
			<summary>Occurs when a new drawing has been created.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.DrawingDeleted">
			<summary>Occurs when a drawing has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.DrawingDeactivated">
			<summary>Occurs when a drawing has been deactivated.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.DrawingDeselected">
			<summary>Occurs when a drawing has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.DrawingDoubleClicked">
			<summary>Occurs when a drawing has been doubleclicked on.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.DrawingMoved">
			<summary>Occurs when a drawing has been moved.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.DrawingRightClicked">
			<summary>Occurs when a drawing has been clicked on with the right mouse button.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.DrawingSelected">
			<summary>Occurs when a drawing has been selected.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.DrawingSized">
			<summary>Occurs when a drawing has been sized.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.FormattingStyleListChanged">
			<summary>Occurs after one or more formatting styles have been added or removed.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.FrameClicked">
			<summary>Occurs when a frame (image, text frame, chart, barcode or drawing) has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.FrameDeselected">
			<summary>Occurs when a frame (image, text frame, chart, barcode or drawing) has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.FrameDoubleClicked">
			<summary>Occurs when a frame (image, text frame, chart, barcode or drawing) has been doubleclicked on.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.FrameLayoutChanged">
			<summary>Occurs when the layout of a frame (image, text frame, chart, barcode or drawing) has been changed.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.FrameMoved">
			<summary>Occurs when a frame (image, text frame, chart, barcode or drawing) has been moved.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.FrameRightClicked">
			<summary>Occurs when a frame (image, text frame, chart, barcode or drawing) has been clicked on with the right mouse button.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.FrameSelected">
			<summary>Occurs when a frame (image, text frame, chart, barcode or drawing) has been selected.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.FrameSized">
			<summary>Occurs when a frame (image, text frame, chart, barcode or drawing) has been sized.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.HeaderFooterActivated">
			<summary>Occurs when a header or footer has been activated.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.HeaderFooterDeactivated">
			<summary>Occurs when a header or footer has been deactivated.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.HExpanded">
			<summary>Occurs when the Text Control has automatically expanded its size horizontally.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.HScroll">
			<summary>Occurs when the horizontal scroll position has been changed.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.HShrunk">
			<summary>Occurs when the Text Control has automatically shrunk its size horizontally.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.HypertextLinkClicked">
			<summary>Occurs when a text field has been clicked on that represents the source of a hypertext link.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.HyphenateWord">
			<summary>Occurs, if a word does not fit in the line and must be hyphenated.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ImageClicked">
			<summary>Occurs when an image has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ImageCreated">
			<summary>Occurs when a new image has been created.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ImageDeleted">
			<summary>Occurs when an image has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ImageDeselected">
			<summary>Occurs when an image has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ImageDoubleClicked">
			<summary>Occurs when an image has been doubleclicked on.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ImageMoved">
			<summary>Occurs when an inserted image has been moved.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ImageRightClicked">
			<summary>Occurs when an image has been clicked on with the right mouse button.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ImageSelected">
			<summary>Occurs when an image has been selected.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ImageSized">
			<summary>Occurs when an inserted image has been sized.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.InputFormattingStyleChanged">
			<summary>Occurs after the text input position has been moved to a text part formatted with another style.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.InputParagraphChanged">
			<summary>Occurs when the text input position has been moved to another paragraph.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.InputPositionChanged">
			<summary>Occurs when the text input position has been changed.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.PageChanged">
			<summary>Occurs when the text input position has been moved to another page.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.PageFormatChanged">
			<summary>Occurs when the page format settings have been changed.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.ParagraphFormatChanged">
			<summary>Occurs when the formatting attributes of the selected paragraphs have been changed.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.SectionChanged">
			<summary>Occurs when the text input position has been moved to another section.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.SpellCheckText">
			<summary>Occurs, if the document's text has been altered and the spelling of the new text must be checked.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.SubTextPartClicked">
			<summary>Occurs when a subtextpart has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.SubTextPartDoubleClicked">
			<summary>Occurs when a subtextpart has been double-clicked on.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.SubTextPartEntered">
			<summary>Occurs when the current input position has been moved to a position that belongs to a subtextpart.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.SubTextPartLeft">
			<summary>Occurs when the current input position has left a subtextpart.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TableCreated">
			<summary>Occurs after a new table has been created as a result of a text insertion via the clipboard or when loading a document which contains a table without an identifier.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TableDeleted">
			<summary>Occurs after a table has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TableFormatChanged">
			<summary>Occurs when the design attributes of a selected table have been changed.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextContextMenuOpening">
			<summary>Occurs immedialtely before a built-in context menu will be opened.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFieldChanged">
			<summary>Occurs when the text of a text field has been changed.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFieldClicked">
			<summary>Occurs when a text field has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFieldCreated">
			<summary>Occurs when a text field has been pasted from the clipboard.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFieldDoubleClicked">
			<summary>Occurs when a text field has been double-clicked on.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFieldDeleted">
			<summary>Occurs when a text field has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFieldEntered">
			<summary>Occurs when the current input position has been moved to a position that belongs to a text field.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFieldLeft">
			<summary>Occurs when the current input position has left a text field.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFrameActivated">
			<summary>Occurs when a text frame has been activated.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFrameAppearanceChanged">
			<summary>Occurs when the appearance of a text frame (background color, transparency, border, inner margins) has been changed.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFrameClicked">
			<summary>Occurs when a text frame has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFrameCreated">
			<summary>Occurs when a new text frame has been created.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFrameDeactivated">
			<summary>Occurs when a text frame has been deactivated.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFrameDeleted">
			<summary>Occurs when a text frame has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFrameDeselected">
			<summary>Occurs when a text frame has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFrameDoubleClicked">
			<summary>Occurs when a text frame has been doubleclicked on.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFrameMoved">
			<summary>Occurs when a text frame has been moved.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFrameRightClicked">
			<summary>Occurs when a text frame has been clicked on with the right mouse button.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFrameSelected">
			<summary>Occurs when a text frame has been selected.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.TextFrameSized">
			<summary>Occurs when a text frame has been sized.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.VExpanded">
			<summary>Occurs when the Text Control has automatically expanded its size vertically.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.VScroll">
			<summary>Occurs when the vertical scroll position has been changed.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.VShrunk">
			<summary>Occurs when the Text Control has automatically shrunk its size vertically.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.Zoomed">
			<summary>Occurs when the Text Control has been zoomed.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.XmlInvalid">
			<summary>Occurs when a loaded or changed XML document cannot be validated with the document type definition (DTD) referenced in the document.</summary>
		</member>
		<member name="E:TXTextControl.TextControl.XmlNotWellFormed">
			<summary>Occurs when a loaded XML document is not well-formed.</summary>
		</member>
		<member name="T:TXTextControl.TextControl.Colors">
			<summary>The TextControl.Colors class gets, sets or resets the display colors of a Windows Forms TextControl control.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Colors.#ctor">
			<summary>Initializes a new instance of the TextControl.Colors class. After creating the object with this constuctor, individual colors can be set. If the Colors object is assigned to the TextControl.DisplayColors property, non-set colors are reset to their system dependent default values.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Colors.ResetDarkShadowColor">
			<summary>Resets the text control's DarkShadowColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Colors.ResetDesktopColor">
			<summary>Resets the text control's DesktopColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Colors.ResetHeaderFooterLabelColor">
			<summary>Resets the text control's HeaderFooterLabelColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Colors.ResetHeaderFooterLineColor">
			<summary>Resets the text control's HeaderFooterLineColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.TextControl.Colors.ResetLightShadowColor">
			<summary>Resets the text control's LightShadowColor to its system dependent default value.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Colors.DarkShadowColor">
			<summary>Gets or sets the display color for the shadow at the right and the bottom edge of the pages.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Colors.DesktopColor">
			<summary>Gets or sets the display color for the area around the pages.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Colors.HeaderFooterLabelColor">
			<summary>Gets or sets the display color for the label showing which header or footer is activated.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Colors.HeaderFooterLineColor">
			<summary>Gets or sets the display color for the dividing line between headers and footers and the main text.</summary>
		</member>
		<member name="P:TXTextControl.TextControl.Colors.LightShadowColor">
			<summary>Gets or sets the display color for the shadow at the left and the top edge of the pages.</summary>
		</member>
		<member name="T:TXTextControl.TextEditorException">
			<summary>The TextEditorException class informs about errors which can occur during editing text.</summary>
		</member>
		<member name="M:TXTextControl.TextEditorException.#ctor">
			<summary>Initializes a new instance of the TextEditorException class.</summary>
		</member>
		<member name="M:TXTextControl.TextEditorException.#ctor(System.String)">
			<summary>Initializes a new instance of the TextEditorException class with a specified error message.</summary>
			<param name="message">The error message that explains the reason for the exception.</param>
		</member>
		<member name="M:TXTextControl.TextEditorException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the TextEditorException class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
			<param name="message">The error message that explains the reason for the exception.</param>
			<param name="innerException">The exception that is the cause of the current exception.</param>
		</member>
		<member name="T:TXTextControl.TextField">
			<summary>An instance of the TextField class represents a text field in a Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.TextField.#ctor">
			<summary>Creates an empty TextField object.</summary>
		</member>
		<member name="M:TXTextControl.TextField.#ctor(System.String)">
			<summary>Creates a TextField object with the specified visible text.</summary>
			<param name="text">Specifies the visible text of the text field.</param>
		</member>
		<member name="M:TXTextControl.TextField.ScrollTo">
			<summary>Sets the current input position to the beginning of a text field and scrolls it into the visible part of the document.</summary>
		</member>
		<member name="P:TXTextControl.TextField.Bounds">
			<summary>Gets the bounding rectangle of a text field.</summary>
		</member>
		<member name="P:TXTextControl.TextField.ContainsInputPosition">
			<summary>Returns true, if the Textfield contains the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.TextField.Deleteable">
			<summary>Specifies whether a text field can be deleted by the end-user while a TX Text Control document is being edited.</summary>
		</member>
		<member name="P:TXTextControl.TextField.DoubleClickEvent">
			<summary>Specifies whether a TextControl.TextFieldDoubleClicked event is raised, if the end-user doubleclicks the text field.</summary>
		</member>
		<member name="P:TXTextControl.TextField.DoubledInputPosition">
			<summary>Specifies whether a text field has a doubled input position in front of its first character and behind its last character.</summary>
		</member>
		<member name="P:TXTextControl.TextField.Editable">
			<summary>Specifies whether the text of a text field can be changed by the end-user while a TX Text Control document is being edited.</summary>
		</member>
		<member name="P:TXTextControl.TextField.FormattingBounds">
			<summary>Gets the formatting rectangle of a text field.</summary>
		</member>
		<member name="P:TXTextControl.TextField.ID">
			<summary>Gets or sets an identifier for a text field.</summary>
		</member>
		<member name="P:TXTextControl.TextField.IsSpellCheckingEnabled">
			<summary>Specifies whether a text field's text is checked on misspelled words.</summary>
		</member>
		<member name="P:TXTextControl.TextField.Length">
			<summary>Gets the number of characters in a text field.</summary>
		</member>
		<member name="P:TXTextControl.TextField.Name">
			<summary>Relates a user-defined name to a text field.</summary>
		</member>
		<member name="P:TXTextControl.TextField.ShowActivated">
			<summary>Specifies whether a text field toggles its background to gray, if the current input position is in the field.</summary>
		</member>
		<member name="P:TXTextControl.TextField.Start">
			<summary>Gets the first character position (one-based) of a text field.</summary>
		</member>
		<member name="P:TXTextControl.TextField.Text">
			<summary>Returns or sets the text which is contained within a text field.</summary>
		</member>
		<member name="T:TXTextControl.TextFieldCollection">
			<summary>An instance of the TextFieldCollection class contains all standard text fields in a Text Control document or part of the document represented through objects of the type TextField.</summary>
		</member>
		<member name="M:TXTextControl.TextFieldCollection.Add(TXTextControl.TextField)">
			<summary>Inserts a new standard text field at the current input position.</summary>
			<param name="textField">Specifies the text field to add.</param>
		</member>
		<member name="M:TXTextControl.TextFieldCollection.Clear(System.Boolean)">
			<summary>Removes all text fields from a Text Control document.</summary>
			<param name="keepText">If this parameter is set to true, all text fields are removed without deleting their texts.</param>
		</member>
		<member name="M:TXTextControl.TextFieldCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.TextFieldCollection.GetItem">
			<summary>Gets the text field at the current text input position or null, if there is no text field at the current text input position.</summary>
		</member>
		<member name="M:TXTextControl.TextFieldCollection.GetItem(System.Int32)">
			<summary>Gets the text field with the specified id, previously set with the ID property.</summary>
			<param name="id">Specifies the text field's identifier set with the ID property.</param>
		</member>
		<member name="M:TXTextControl.TextFieldCollection.Remove(TXTextControl.TextField)">
			<summary>Removes the specified text field from the Text Control document.</summary>
			<param name="textField">Specifies the text field to remove.</param>
		</member>
		<member name="M:TXTextControl.TextFieldCollection.Remove(TXTextControl.TextField,System.Boolean)">
			<summary>Removes the specified text field from the Text Control document. The field's visible text remains in the document, when the keepText parameter is set to true.</summary>
			<param name="textField">Specifies the text field to remove.</param>
			<param name="keepText">If this parameter is set to true, the field is removed without deleting its text.</param>
		</member>
		<member name="T:TXTextControl.TextFieldCollectionBase">
			<summary>The TextFieldCollectionBase class is the base class of the TextFieldCollection, HypertextLinkCollection, DocumentTargetCollection, DocumentLinkCollection, PageNumberFieldCollection and ApplicationFieldCollection classes.</summary>
		</member>
		<member name="M:TXTextControl.TextFieldCollectionBase.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="P:TXTextControl.TextFieldCollectionBase.CanAdd">
			<summary>Gets a value indicating whether a new text field can be inserted at the current input position.</summary>
		</member>
		<member name="P:TXTextControl.TextFieldCollectionBase.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
		</member>
		<member name="P:TXTextControl.TextFieldCollectionBase.IsSynchronized">
			<summary>Returns true if the collection is designed to be thread safe, otherwise, it returns false.</summary>
		</member>
		<member name="P:TXTextControl.TextFieldCollectionBase.SyncRoot">
			<summary>Gets an object that can be used to synchronize access to the collection.</summary>
		</member>
		<member name="T:TXTextControl.TextFieldEventArgs">
			<summary>The TextFieldEventArgs class provides data for the TextControl.TextFieldClicked, TextControl.TextFieldCreated, TextControl.TextFieldDoubleClicked, TextControl.TextFieldDeleted, TextControl.TextFieldChanged, TextControl.TextFieldEntered and TextControl.TextFieldLeft events.</summary>
		</member>
		<member name="P:TXTextControl.TextFieldEventArgs.TextField">
			<summary>Gets an object that represents the text field which causes the event.</summary>
		</member>
		<member name="T:TXTextControl.TextFrame">
			<summary>An instance of the TextFrame class represents a text frame in a Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.TextFrame.#ctor(System.Drawing.Size)">
			<summary>Initializes a new instance of the TextFrame class.</summary>
			<param name="size">Specifies the text frame's size in twips.</param>
		</member>
		<member name="M:TXTextControl.TextFrame.Activate">
			<summary>Activates the text frame. The text frame receives the input focus. A text frame can only be activated, if the text part that contains the text frame has the input focus.</summary>
		</member>
		<member name="M:TXTextControl.TextFrame.Find(System.String,System.Int32,TXTextControl.FindOptions)">
			<summary>Finds a text string in a text frame.</summary>
			<param name="text">Specifies the text to search for.</param>
			<param name="start">Specifies the text position where the search starts, beginning with 0.</param>
			<param name="options">Specifies search options.</param>
		</member>
		<member name="M:TXTextControl.TextFrame.GetTextFields(TXTextControl.TextFieldType)">
			<summary>Returns a collection containing text fields of the specified types.</summary>
			<param name="fieldType">Specifies types of text fields.</param>
		</member>
		<member name="P:TXTextControl.TextFrame.ApplicationFields">
			<summary>Gets a collection of all Microsoft Word or Heiler HighEdit fields that have been created or imported from a Microsoft Word or RTF document.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.BackColor">
			<summary>Gets or sets the background color of a text frame.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.Barcodes">
			<summary>Gets a collection of all barcodes contained in a text frame.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.BorderWidth">
			<summary>Gets or sets the width, in twips, of a text frame's border line.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.Charts">
			<summary>Gets a collection of all charts contained in a text frame.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.DocumentLinks">
			<summary>Gets a collection of all links in a text frame which point to targets in the same document.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.DocumentTargets">
			<summary>Gets a collection of all targets in a text frame.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.Drawings">
			<summary>Gets a collection of all drawings contained in a text frame.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.Frames">
			<summary>Gets a collection of all images, textframes, charts, barcodes and drawings in a text frame.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.HypertextLinks">
			<summary>Gets a collection of all hypertext links in a text frame.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.Images">
			<summary>Gets a collection of all images contained in a text frame.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.InsertionMode">
			<summary>(Only for compatibility) Gets or sets a value determining whether a text frame is treated as a single character or the document's text either flows around or overwrites the text frame.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.InternalMargins">
			<summary>Gets or sets the distances, in twips, between the text frame's border line and the text.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.Lines">
			<summary>Gets a collection of all text lines contained in a text frame.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.MisspelledWords">
			<summary>Gets a collection of all misspelled words the text frame contains.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.Paragraphs">
			<summary>Gets a collection of all paragraphs contained in a text frame.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.Selection">
			<summary>Gets or sets the current selection in a text frame.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.SubTextParts">
			<summary>Gets a collection of all subtextparts in a text frame.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.Tables">
			<summary>Gets a collection of all tables in a text frame.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.TextChars">
			<summary>Gets a collection of all characters contained in a text frame.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.TextFields">
			<summary>Gets a collection of all standard text fields in a text frame.</summary>
		</member>
		<member name="P:TXTextControl.TextFrame.Transparency">
			<summary>Gets or sets the text frame's transparency.</summary>
		</member>
		<member name="T:TXTextControl.TextFrameCollection">
			<summary>An instance of the TextFrameCollection class contains all text frames in a Text Control document or part of the document represented through objects of the type TextFrame.</summary>
		</member>
		<member name="M:TXTextControl.TextFrameCollection.Add(TXTextControl.TextFrame,System.Int32)">
			<summary>Inserts a text frame inline, which means that it is treated in the text like a single character. The frame is inserted at the specified text position.</summary>
			<param name="textFrame">Specifies the text frame to add.</param>
			<param name="textPosition">Specifies the text position at which the text frame is to be inserted.</param>
		</member>
		<member name="M:TXTextControl.TextFrameCollection.Add(TXTextControl.TextFrame,TXTextControl.HorizontalAlignment,System.Int32,TXTextControl.TextFrameInsertionMode)">
			<summary>Inserts a text frame which is anchored to the paragraph containing the specified text position. The frame has the specified horizontal alignment. TextFrameInsertionMode.FixedOnPage and TextFrameInsertionMode.AsCharacter cannot be specified with this overload.</summary>
			<param name="textFrame">Specifies the text frame to add.</param>
			<param name="alignment">Specifies the text frame's horizontal alignment.</param>
			<param name="textPosition">Specifies the text position at which the text frame is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.TextFrameCollection.Add(TXTextControl.TextFrame,System.Drawing.Point,System.Int32,TXTextControl.TextFrameInsertionMode)">
			<summary>Inserts a text frame which is anchored to the paragraph containing the specified text position. The frame has the specified position relative to the paragraph containing its anchor position. TextFrameInsertionMode.FixedOnPage and TextFrameInsertionMode.AsCharacter cannot be specified with this overload.</summary>
			<param name="textFrame">Specifies the text frame to add.</param>
			<param name="location">Specifies the location, in twips, at which the text frame is to be inserted.</param>
			<param name="textPosition">Specifies the text position at which the text frame is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.TextFrameCollection.Add(TXTextControl.TextFrame,System.Int32,System.Drawing.Point,TXTextControl.TextFrameInsertionMode)">
			<summary>Inserts a text frame that has a fixed geometrical position in the document. This position is specified through a page number and a location on this page. TextFrameInsertionMode.MoveWithText and TextFrameInsertionMode.AsCharacter cannot be specified with this overload.</summary>
			<param name="textFrame">Specifies the text frame to add.</param>
			<param name="page">Specifies the number of a page beginning with 1 where the text frame is located.</param>
			<param name="location">Specifies the location, in twips, at which the text frame is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.TextFrameCollection.Add(TXTextControl.TextFrame,System.Drawing.Point,TXTextControl.TextFrameInsertionMode)">
			<summary>Inserts a text frame that has a fixed geometrical position in the document. This location is specified through a document position relative to the top left corner of the complete document. TextFrameInsertionMode.MoveWithText and TextFrameInsertionMode.AsCharacter cannot be specified with this overload.</summary>
			<param name="textFrame">Specifies the text frame to add.</param>
			<param name="location">Specifies the location, in twips, at which the text frame is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.TextFrameCollection.Add(TXTextControl.TextFrame,TXTextControl.TextFrameInsertionMode)">
			<summary>Inserts a text frame with the built-in mouse interface. The text frame's size is determined through the end-user. A cross cursor indicates where the text frame can be inserted. Changing the document or pressing the ESC key aborts the insertion process.</summary>
			<param name="textFrame">Specifies the text frame to add.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.TextFrameCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.TextFrameCollection.DeactivateItem">
			<summary>Deactivates the activated text frame and sets the input focus back to the text part that contains the text frame.</summary>
		</member>
		<member name="M:TXTextControl.TextFrameCollection.GetActivatedItem">
			<summary>Returns the currently activated text frame. An activated text frame has the input focus and can be edited. The method returns null, if no text frame is activated.</summary>
		</member>
		<member name="M:TXTextControl.TextFrameCollection.GetItem">
			<summary>Gets the text frame selected by the user or null if no text frame is selected.</summary>
		</member>
		<member name="M:TXTextControl.TextFrameCollection.GetItem(System.Int32)">
			<summary>Gets the text frame with the specified identifier.</summary>
			<param name="id">Specifies the text frame's identifier set with the ID property.</param>
		</member>
		<member name="M:TXTextControl.TextFrameCollection.GetItem(System.String)">
			<summary>Gets the text frame with the specified name.</summary>
			<param name="name">Specifies the text frame's name set with the Name property.</param>
		</member>
		<member name="M:TXTextControl.TextFrameCollection.Remove(TXTextControl.TextFrame)">
			<summary>Removes a text frame from a Text Control document.</summary>
			<param name="textFrame">Specifies the text frame to remove.</param>
		</member>
		<member name="T:TXTextControl.TextFrameEventArgs">
			<summary>The TextFrameEventArgs class provides data for all events that occur with text frames.</summary>
		</member>
		<member name="P:TXTextControl.TextFrameEventArgs.TextFrame">
			<summary>Gets an object that represents the text frame which causes the event.</summary>
		</member>
		<member name="T:TXTextControl.TextPartCollection">
			<summary>An instance of the TextPartCollection class contains all text parts in a TX Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.TextPartCollection.Activate(System.Object)">
			<summary>Sets the input focus to the specified text part. If the activated text part is not in the visible part of the document, the document is scrolled.</summary>
			<param name="textPart">Specifies the object to activate.</param>
		</member>
		<member name="M:TXTextControl.TextPartCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.TextPartCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="M:TXTextControl.TextPartCollection.GetItem">
			<summary>Gets the text part with the input focus.</summary>
		</member>
		<member name="M:TXTextControl.TextPartCollection.GetItem(System.Drawing.Point@)">
			<summary>Gets the text part with the input focus informing about the offset of the text part in the TextControl's client area.</summary>
			<param name="clientOffset">Retrieves the text part's offset, in pixels, in the TextControl's client area.</param>
		</member>
		<member name="M:TXTextControl.TextPartCollection.GetItem(System.Drawing.Point,System.Drawing.Point@)">
			<summary>Gets the text part at the specified geometric location.</summary>
			<param name="location">Specifies a location where to search for a text part.</param>
			<param name="clientOffset">Retrieves the text part's offset, in pixels, in the TextControl's client area.</param>
		</member>
		<member name="M:TXTextControl.TextPartCollection.GetMainText">
			<summary>Gets the main text part of the document.</summary>
		</member>
		<member name="P:TXTextControl.TextPartCollection.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
		</member>
		<member name="T:TXTextControl.UserDefinedPropertyDictionary">
			<summary>An instance of the UserDefinedPropertyDictionary class contains all user-defined document properties contained in a loaded document or which will be saved in a document.</summary>
		</member>
		<member name="M:TXTextControl.UserDefinedPropertyDictionary.#ctor">
			<summary>Initializes a new instance of the UserDefinedPropertyDictionary class.</summary>
		</member>
		<member name="M:TXTextControl.UserDefinedPropertyDictionary.Add(System.String,System.Object)">
			<summary>Adds a new property to the dictionary.</summary>
			<param name="name">Specifies the document property's name.</param>
			<param name="value">Specifies the document property's value.</param>
		</member>
		<member name="M:TXTextControl.UserDefinedPropertyDictionary.Contains(System.String)">
			<summary>Determines whether the dictionary contains a property with the specified name.</summary>
			<param name="name">Specifies a document property's name.</param>
		</member>
		<member name="M:TXTextControl.UserDefinedPropertyDictionary.Item">
			<summary>Gets a document property from the dictionary. In C# this property is the indexer for the UserDefinedPropertyDictionary class.</summary>
		</member>
		<member name="M:TXTextControl.UserDefinedPropertyDictionary.Remove(System.String)">
			<summary>Removes a document property from the dictionary.</summary>
			<param name="name">Specifies the name of the document property to remove.</param>
		</member>
		<member name="P:TXTextControl.UserDefinedPropertyDictionary.Names">
			<summary>Gets a collection of all property names the dictionary contains.</summary>
		</member>
		<member name="P:TXTextControl.UserDefinedPropertyDictionary.Values">
			<summary>Gets a collection of all property values the dictionary contains.</summary>
		</member>
		<member name="T:TXTextControl.VersionInfo">
			<summary>The VersionInfo class provides information about the running TX Text Control version, such as the version number, the installed service pack number and the product level.</summary>
		</member>
		<member name="P:TXTextControl.VersionInfo.Major">
			<summary>Gets the major version number.</summary>
		</member>
		<member name="P:TXTextControl.VersionInfo.Minor">
			<summary>Gets the minor version number.</summary>
		</member>
		<member name="P:TXTextControl.VersionInfo.ServicePack">
			<summary>Gets the number of the installed service pack.</summary>
		</member>
		<member name="P:TXTextControl.VersionInfo.ProductLevel">
			<summary>Gets the installed product level.</summary>
		</member>
		<member name="T:TXTextControl.XmlElement">
			<summary>An instance of this class represents an element in a XML document.</summary>
		</member>
		<member name="M:TXTextControl.XmlElement.#ctor(System.String)">
			<summary>Creates an XmlElement object with the specified name.</summary>
			<param name="name">Specifies the element's name.</param>
		</member>
		<member name="M:TXTextControl.XmlElement.#ctor(System.String,System.String)">
			<summary>Creates an XmlElement object with the specified name and text.</summary>
			<param name="name">Specifies the element's name.</param>
			<param name="text">Specifies the element's text.</param>
		</member>
		<member name="M:TXTextControl.XmlElement.AddChild(TXTextControl.XmlElement)">
			<summary>Adds the specified XML element as a sub-element of this element. The new element is placed at the position specified through the document's DTD.</summary>
			<param name="element">Specifies the XML element to add.</param>
		</member>
		<member name="M:TXTextControl.XmlElement.AddChild(TXTextControl.XmlElement,System.Int32,System.Int32)">
			<summary>Adds the specified XML element as a sub-element of this element. The new element is placed at the position specified through the document's DTD. If this element can have more than one child of the specified type, the before or after parameters can be used to specify a position.</summary>
			<param name="element">Specifies the XML element to add.</param>
			<param name="before">Specifies a relative position in the list of child elements of the specified type beginning with 1.</param>
			<param name="after">Specifies a relative position in the list of child elements of the specified type beginning with 1.</param>
		</member>
		<member name="M:TXTextControl.XmlElement.GetChildItem(System.String)">
			<summary>Returns the first XML child element with the specified name.</summary>
			<param name="name">Specifies the name of the sub-element.</param>
		</member>
		<member name="M:TXTextControl.XmlElement.GetChildItem(System.String,System.Int32)">
			<summary>Returns the XML child element with the specified name and index.</summary>
			<param name="name">Specifies the name of the sub-element.</param>
			<param name="index">Specifies the number of the sub-element beginning with 1.</param>
		</member>
		<member name="M:TXTextControl.XmlElement.RemoveChild(System.String)">
			<summary>Removes the first XML child element with the specified name.</summary>
			<param name="name">Specifies the name of the sub-element to remove.</param>
		</member>
		<member name="M:TXTextControl.XmlElement.RemoveChild(System.String,System.Int32)">
			<summary>Removes the XML child element with the specified name and index.</summary>
			<param name="name">Specifies the name of the sub-element to remove.</param>
			<param name="index">Specifies the number of the sub-element beginning with 1.</param>
		</member>
		<member name="M:TXTextControl.XmlElement.Select">
			<summary>Selects the text of the XML element. The text can only be selected, if the element belongs to the document.</summary>
		</member>
		<member name="P:TXTextControl.XmlElement.AutoSelect">
			<summary>Determines whether the text of a newly added XML element is automatically selected.</summary>
		</member>
		<member name="P:TXTextControl.XmlElement.AutoText">
			<summary>Determines whether text is automatically created for a newly added XML element that has no text contents.</summary>
		</member>
		<member name="P:TXTextControl.XmlElement.ElementName">
			<summary>Gets the name of an XML element.</summary>
		</member>
		<member name="P:TXTextControl.XmlElement.Text">
			<summary>Specifies the text of the XML element.</summary>
		</member>
		<member name="T:TXTextControl.XmlElementCollection">
			<summary>An instance of this class contains all elements of an XML document that have the same element name.</summary>
		</member>
		<member name="M:TXTextControl.XmlElementCollection.Add(TXTextControl.XmlElement,System.Int32,System.Int32)">
			<summary>Adds the specified XML element to the collection.</summary>
			<param name="element">Specified an instance of the XmlElement object.</param>
			<param name="before">Specifies a relative position in the collection.</param>
			<param name="after">Specifies a relative position in the collection.</param>
		</member>
		<member name="M:TXTextControl.XmlElementCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.XmlElementCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="M:TXTextControl.XmlElementCollection.GetItem">
			<summary>Returns the item with the current input position.</summary>
		</member>
		<member name="M:TXTextControl.XmlElementCollection.GetItem(System.Int32)">
			<summary>Returns the item with the specified index.</summary>
			<param name="index">The one based index of the XmlElement.</param>
		</member>
		<member name="M:TXTextControl.XmlElementCollection.Remove(System.Int32)">
			<summary>Removes an XML element from an XML document.</summary>
			<param name="index">Specifies the one-based index of the XML element in the collection.</param>
		</member>
		<member name="P:TXTextControl.XmlElementCollection.Count">
			<summary>Gets the number of XML elements in the collection.</summary>
		</member>
		<member name="T:TXTextControl.XmlErrorEventArgs">
			<summary>The XmlErrorEventArgs class provides data for the TextControl.XmlNotWellFormed and TextControl.XmlInvalid events.</summary>
		</member>
		<member name="P:TXTextControl.XmlErrorEventArgs.FilePosition">
			<summary>Gets the absolute file position in the XML document where the error occurred.</summary>
		</member>
		<member name="P:TXTextControl.XmlErrorEventArgs.LineNumber">
			<summary>Gets the line number in the XML document that contains the error.</summary>
		</member>
		<member name="P:TXTextControl.XmlErrorEventArgs.LinePosition">
			<summary>Gets the character position within the line where the error occurred.</summary>
		</member>
		<member name="P:TXTextControl.XmlErrorEventArgs.Reason">
			<summary>Gets the reason for the error.</summary>
		</member>
		<member name="P:TXTextControl.XmlErrorEventArgs.URL">
			<summary>Gets the URL of the XML document containing the error.</summary>
		</member>
		<member name="T:TXTextControl.DataVisualization.BarcodeCollection">
			<summary>An instance of the BarcodeCollection class contains all barcodes in a document represented through objects of the type DataVisualization.BarcodeFrame.</summary>
		</member>
		<member name="M:TXTextControl.DataVisualization.BarcodeCollection.Add(DataVisualization.BarcodeFrame,System.Int32)">
			<summary>Inserts a barcode inline, which means that it is treated in the text like a single character.</summary>
			<param name="barcodeFrame">Specifies the barcode and its frame to add.</param>
			<param name="textPosition">Specifies the text position at which the barcode is to be inserted.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.BarcodeCollection.Add(DataVisualization.BarcodeFrame,TXTextControl.HorizontalAlignment,System.Int32,TXTextControl.FrameInsertionMode)">
			<summary>Inserts a barcode, which is anchored to the specified text position. It has the specified horizontal alignment relative to the paragraph into which it is inserted and the textflow is given through the insertionMode parameter. An anchored barcode is moved with the text.</summary>
			<param name="barcodeFrame">Specifies the barcode and its frame to add.</param>
			<param name="alignment">Specifies the barcode's horizontal alignment.</param>
			<param name="textPosition">Specifies the text position at which the barcode is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.BarcodeCollection.Add(DataVisualization.BarcodeFrame,System.Drawing.Point,System.Int32,TXTextControl.FrameInsertionMode)">
			<summary>Inserts a barcode, which is anchored to the specified text position. The specified location is relative to the paragraph into which it is inserted and the textflow is given through the insertionMode parameter. An anchored barcode is moved with the text.</summary>
			<param name="barcodeFrame">Specifies the barcode and its frame to add.</param>
			<param name="location">Specifies the location, in twips, at which the barcode is to be inserted.</param>
			<param name="textPosition">Specifies the text position at which the barcode is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.BarcodeCollection.Add(DataVisualization.BarcodeFrame,System.Int32,System.Drawing.Point,TXTextControl.FrameInsertionMode)">
			<summary>Inserts a barcode, which has a fixed geometrical position in the document. This position is specified through a page number and a location on this page and the textflow is given through the insertionMode parameter.</summary>
			<param name="barcodeFrame">Specifies the barcode and its frame to add.</param>
			<param name="page">Specifies the number of a page beginning with 1 where the barcode is located.</param>
			<param name="location">Specifies the location, in twips, at which the barcode is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.BarcodeCollection.Add(DataVisualization.BarcodeFrame,System.Drawing.Point,TXTextControl.FrameInsertionMode)">
			<summary>Inserts a barcode, which has a fixed geometrical position in the document. This position is specified relative to the complete document and the textflow is given through the insertionMode parameter.</summary>
			<param name="barcodeFrame">Specifies the barcode and its frame to add.</param>
			<param name="location">Specifies the location, in twips, at which the barcode is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.BarcodeCollection.Add(DataVisualization.BarcodeFrame,TXTextControl.FrameInsertionMode)">
			<summary>Inserts a barcode with the built-in mouse interface. The barcode's size is determined through the end-user. A cross cursor indicates where the barcode can be inserted. Changing the document or pressing the ESC key aborts the insertion process.</summary>
			<param name="barcodeFrame">Specifies the barcode and its frame to add.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.BarcodeCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to which to copy.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.BarcodeCollection.GetItem">
			<summary>Gets the barcode selected by the user.</summary>
		</member>
		<member name="M:TXTextControl.DataVisualization.BarcodeCollection.GetItem(System.Int32)">
			<summary>Gets the barcode with the specified identifier. An id can be set with the ID property.</summary>
			<param name="id">Specifies the barcode's identifier.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.BarcodeCollection.GetItem(System.String)">
			<summary>Gets the barcode with the specified name. A name can be set with the Name property.</summary>
			<param name="name">Specifies the barcode's name.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.BarcodeCollection.Remove(DataVisualization.BarcodeFrame)">
			<summary>Removes a barcode from a Text Control document.</summary>
			<param name="barcodeFrame">Specifies the barcode to remove.</param>
		</member>
		<member name="T:TXTextControl.DataVisualization.BarcodeEventArgs">
			<summary>The BarcodeEventArgs class provides data for all events that occur with barcodes.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.BarcodeEventArgs.BarcodeFrame">
			<summary>Gets an object that represents the barcode which causes the event.</summary>
		</member>
		<member name="T:TXTextControl.DataVisualization.BarcodeFrame">
			<summary>An instance of the BarcodeFrame class represents a barcode and its layout in a Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.DataVisualization.BarcodeFrame.#ctor(System.Object)">
			<summary>Initializes a new instance of the BarcodeFrame class.</summary>
			<param name="barcode">Specifies the barcode control associated with the barcode frame.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.BarcodeFrame.AddUndoUnit">
			<summary>Add the current state of the barcode which is connected with this BarcodeFrame to the undo stack. Programmatic changes performed with the barcode's properties and methods are not automatically added to a TextControl's undo stack. Calling this method is not necessary, when the barcode frame's layout in the text is changed.</summary>
		</member>
		<member name="M:TXTextControl.DataVisualization.BarcodeFrame.Refresh">
			<summary>Refreshes the barcode. Programmatic changes performed with the barcode's properties and methods are not automatically refreshed. Calling this method is not necessary, when the barcode frame's layout in the text is changed.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.BarcodeFrame.Barcode">
			<summary>Gets the barcode control associated with the barcode frame.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.BarcodeFrame.ExportCompressionQuality">
			<summary>Sets a value between 1 and 100, which is the quality of a lossy data compression used, if the barcode's image is exported.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.BarcodeFrame.ExportFileName">
			<summary>Gets or sets the file name, when the barcode's image is exported.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.BarcodeFrame.ExportFilterIndex">
			<summary>Gets or sets the format used, if a barcode's image is exported.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.BarcodeFrame.ExportResolution">
			<summary>Gets or sets the maximum resolution in dots per inch in which the barcode's image is saved.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.BarcodeFrame.SaveMode">
			<summary>Determines whether the barcode's image is stored through its binary data or through a file reference.</summary>
		</member>
		<member name="T:TXTextControl.DataVisualization.ChartCollection">
			<summary>An instance of the ChartCollection class contains all charts in a document represented through objects of the type DataVisualization.ChartFrame.</summary>
		</member>
		<member name="M:TXTextControl.DataVisualization.ChartCollection.Add(DataVisualization.ChartFrame,System.Int32)">
			<summary>Inserts a chart inline, which means that it is treated in the text like a single character.</summary>
			<param name="chartFrame">Specifies the chart and its frame to add.</param>
			<param name="textPosition">Specifies the text position at which the chart is to be inserted.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.ChartCollection.Add(DataVisualization.ChartFrame,TXTextControl.HorizontalAlignment,System.Int32,TXTextControl.FrameInsertionMode)">
			<summary>Inserts a chart which is anchored to the specified text position. It has the specified horizontal alignment relative to the paragraph into which it is inserted and the textflow is given through the insertionMode parameter. An anchored chart is moved with the text.</summary>
			<param name="chartFrame">Specifies the chart and its frame to add.</param>
			<param name="alignment">Specifies the chart's horizontal alignment.</param>
			<param name="textPosition">Specifies the text position at which the chart is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.ChartCollection.Add(DataVisualization.ChartFrame,System.Drawing.Point,System.Int32,TXTextControl.FrameInsertionMode)">
			<summary>Inserts a chart which is anchored to the specified text position. The specified location is relative to the paragraph into which it is inserted and the textflow is given through the insertionMode parameter. An anchored chart is moved with the text.</summary>
			<param name="chartFrame">Specifies the chart and its frame to add.</param>
			<param name="location">Specifies the location, in twips, at which the chart is to be inserted.</param>
			<param name="textPosition">Specifies the text position at which the chart is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.ChartCollection.Add(DataVisualization.ChartFrame,System.Int32,System.Drawing.Point,TXTextControl.FrameInsertionMode)">
			<summary>Inserts a chart which has a fixed geometrical position in the document. This position is specified through a page number and a location on this page and the textflow is given through the insertionMode parameter.</summary>
			<param name="chartFrame">Specifies the chart and its frame to add.</param>
			<param name="page">Specifies the number of a page beginning with 1 where the chart is located.</param>
			<param name="location">Specifies the location, in twips, at which the chart is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.ChartCollection.Add(DataVisualization.ChartFrame,System.Drawing.Point,TXTextControl.FrameInsertionMode)">
			<summary>Inserts a chart which has a fixed geometrical position in the document. This position is specified relative to the complete document and the textflow is given through the insertionMode parameter.</summary>
			<param name="chartFrame">Specifies the chart and its frame to add.</param>
			<param name="location">Specifies the location, in twips, at which the chart is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.ChartCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to which to copy.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.ChartCollection.GetItem">
			<summary>Gets the chart selected by the user.</summary>
		</member>
		<member name="M:TXTextControl.DataVisualization.ChartCollection.GetItem(System.Int32)">
			<summary>Gets the chart with the specified identifier. An id can be set with the ID property.</summary>
			<param name="id">Specifies the chart's identifier.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.ChartCollection.GetItem(System.String)">
			<summary>Gets the chart with the specified name. A name can be set with the Name property.</summary>
			<param name="name">Specifies the chart's name.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.ChartCollection.Remove(DataVisualization.ChartFrame)">
			<summary>Removes a chart from a Text Control document.</summary>
			<param name="chartFrame">Specifies the chart to remove.</param>
		</member>
		<member name="T:TXTextControl.DataVisualization.ChartEventArgs">
			<summary>The ChartEventArgs class provides data for all events that occur with charts.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.ChartEventArgs.ChartFrame">
			<summary>Gets an object that represents the chart which causes the event.</summary>
		</member>
		<member name="T:TXTextControl.DataVisualization.ChartFrame">
			<summary>An instance of the ChartFrame class represents a chart and its layout in a Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.DataVisualization.ChartFrame.#ctor(System.ComponentModel.Component)">
			<summary>Initializes a new instance of the ChartFrame class.</summary>
			<param name="chart">Specifies the chart control associated with the chart frame.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.ChartFrame.AddUndoUnit">
			<summary>Add the current state of the chart which is connected with this ChartFrame to the undo stack. Programmatic changes performed with the chart's properties and methods are not automatically added to a TextControl's undo stack. Calling this method is not necessary, when the chart frame's layout in the text is changed.</summary>
		</member>
		<member name="M:TXTextControl.DataVisualization.ChartFrame.Refresh">
			<summary>Refreshes the chart. Programmatic changes performed with the chart's properties and methods are not automatically refreshed. Calling this method is not necessary, when the chart frame's layout in the text is changed.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.ChartFrame.Chart">
			<summary>Gets the chart control associated with the chart frame.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.ChartFrame.ExportCompressionQuality">
			<summary>Sets a value between 1 and 100, which is the quality of a lossy data compression used, if the chart's image is exported.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.ChartFrame.ExportFileName">
			<summary>Gets or sets the file name, when the chart's image is exported.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.ChartFrame.ExportFilterIndex">
			<summary>Gets or sets the format used, if a chart's image is exported.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.ChartFrame.ExportResolution">
			<summary>Gets or sets the maximum resolution in dots per inch in which the chart's image is saved.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.ChartFrame.SaveMode">
			<summary>Determines whether the chart's image is stored through its binary data or through a file reference.</summary>
		</member>
		<member name="T:TXTextControl.DataVisualization.DrawingCollection">
			<summary>An instance of the DrawingCollection class contains all drawings in a document represented through objects of the type DataVisualization.DrawingFrame.</summary>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingCollection.Add(DataVisualization.DrawingFrame,System.Int32)">
			<summary>Inserts a drawing inline, which means that it is treated in the text like a single character.</summary>
			<param name="drawingFrame">Specifies the drawing and its frame to add.</param>
			<param name="textPosition">Specifies the text position at which the drawing is to be inserted.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingCollection.Add(DataVisualization.DrawingFrame,TXTextControl.HorizontalAlignment,System.Int32,TXTextControl.FrameInsertionMode)">
			<summary>Inserts a drawing, which is anchored to the specified text position. It has the specified horizontal alignment relative to the paragraph into which it is inserted and the textflow is given through the insertionMode parameter. An anchored drawing is moved with the text. FrameInsertionMode.FixedOnPage and FrameInsertionMode.AsCharacter cannot be specified with this overload.</summary>
			<param name="drawingFrame">Specifies the drawing and its frame to add.</param>
			<param name="alignment">Specifies the drawing's horizontal alignment.</param>
			<param name="textPosition">Specifies the text position at which the drawing is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingCollection.Add(DataVisualization.DrawingFrame,System.Drawing.Point,System.Int32,TXTextControl.FrameInsertionMode)">
			<summary>Inserts a drawing, which is anchored to the specified text position. The specified location is relative to the paragraph into which it is inserted and the textflow is given through the insertionMode parameter. An anchored drawing is moved with the text. FrameInsertionMode.FixedOnPage and FrameInsertionMode.AsCharacter cannot be specified with this overload.</summary>
			<param name="drawingFrame">Specifies the drawing and its frame to add.</param>
			<param name="location">Specifies the location, in twips, at which the drawing is to be inserted.</param>
			<param name="textPosition">Specifies the text position at which the drawing is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingCollection.Add(DataVisualization.DrawingFrame,System.Int32,System.Drawing.Point,TXTextControl.FrameInsertionMode)">
			<summary>Inserts a drawing, which has a fixed geometrical position in the document. This position is specified through a page number and a location on this page and the textflow is given through the insertionMode parameter. FrameInsertionMode.MoveWithText and FrameInsertionMode.AsCharacter cannot be specified with this overload.</summary>
			<param name="drawingFrame">Specifies the drawing and its frame to add.</param>
			<param name="page">Specifies the number of a page beginning with 1 where the drawing is located.</param>
			<param name="location">Specifies the location, in twips, at which the drawing is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingCollection.Add(DataVisualization.DrawingFrame,System.Drawing.Point,TXTextControl.FrameInsertionMode)">
			<summary>Inserts a drawing, which has a fixed geometrical position in the document. This position is specified relative to the complete document and the textflow is given through the insertionMode parameter. FrameInsertionMode.MoveWithText and FrameInsertionMode.AsCharacter cannot be specified with this overload.</summary>
			<param name="drawingFrame">Specifies the drawing and its frame to add.</param>
			<param name="location">Specifies the location, in twips, at which the drawing is to be inserted.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingCollection.Add(DataVisualization.DrawingFrame,TXTextControl.FrameInsertionMode)">
			<summary>Inserts a drawing with the built-in mouse interface. The drawing's size is determined through the end-user. A cross cursor indicates where the drawing can be inserted. Changing the document or pressing the ESC key aborts the insertion process.</summary>
			<param name="drawingFrame">Specifies the drawing and its frame to add.</param>
			<param name="insertionMode">Specifies how the text flow is handled.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to which to copy.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingCollection.DeactivateItem">
			<summary>Deactivates the activated drawing and sets the input focus back to the text part that contains the drawing.</summary>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingCollection.GetActivatedItem">
			<summary>Returns the currently activated drawing. An activated drawing has the input focus and can be edited. The method returns null, if no drawing is activated.</summary>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingCollection.GetItem">
			<summary>Gets the drawing selected by the user.</summary>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingCollection.GetItem(System.Int32)">
			<summary>Gets the drawing with the specified identifier. An id can be set with the ID property.</summary>
			<param name="id">Specifies the drawing's identifier.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingCollection.GetItem(System.String)">
			<summary>Gets the drawing with the specified name. A name can be set with the Name property.</summary>
			<param name="name">Specifies the drawing's name.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingCollection.Remove(DataVisualization.DrawingFrame)">
			<summary>Removes a drawing from a Text Control document.</summary>
			<param name="drawingFrame">Specifies the drawing to remove.</param>
		</member>
		<member name="T:TXTextControl.DataVisualization.DrawingEventArgs">
			<summary>The DrawingEventArgs class provides data for all events that occur with drawings.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.DrawingEventArgs.DrawingFrame">
			<summary>Gets an object that represents the drawing which causes the event.</summary>
		</member>
		<member name="T:TXTextControl.DataVisualization.DrawingFrame">
			<summary>An instance of the DrawingFrame class represents a drawing and its layout in a Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingFrame.#ctor(System.Object)">
			<summary>Initializes a new instance of the DrawingFrame class.</summary>
			<param name="drawing">Specifies the drawing control associated with the drawing frame.</param>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingFrame.Activate">
			<summary>Activates the drawing so that its contents can be edited. A drawing can only be activated, if the text part that contains the drawing has the input focus.</summary>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingFrame.AddUndoUnit">
			<summary>Add the current state of the drawing which is connected with this DrawingFrame to the undo stack. Programmatic changes performed with the drawing's properties and methods are not automatically added to a TextControl's undo stack. Calling this method is not necessary, when the drawing frame's layout in the text is changed.</summary>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingFrame.Refresh">
			<summary>Refreshes the complete drawing. Programmatic changes performed with the drawing's properties and methods are not automatically refreshed. Calling this method is not necessary, when the drawing frame's layout in the text is changed.</summary>
		</member>
		<member name="M:TXTextControl.DataVisualization.DrawingFrame.Refresh(System.Drawing.Rectangle)">
			<summary>Refreshes the specified part of drawing. Programmatic changes performed with the drawing's properties and methods are not automatically refreshed. Calling this method is not necessary, when the drawing frame's layout in the text is changed.</summary>
			<param name="clipRectangle">Specifies the rectangular part of the drawing to refresh, in pixels, relative to the top-left corner of the drawing.</param>
		</member>
		<member name="P:TXTextControl.DataVisualization.DrawingFrame.Drawing">
			<summary>Gets the drawing control associated with the drawing frame.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.DrawingFrame.ExportCompressionQuality">
			<summary>Sets a value between 1 and 100, which is the quality of a lossy data compression used, if the drawing's bitmap image is exported.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.DrawingFrame.ExportFileName">
			<summary>Gets or sets the file name, when the drawing's bitmap image is exported.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.DrawingFrame.ExportFilterIndex">
			<summary>Gets or sets the format used, if a drawing's bitmap image is exported.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.DrawingFrame.ExportResolution">
			<summary>Gets or sets the maximum resolution in dots per inch in which the drawing's bitmap image is saved.</summary>
		</member>
		<member name="P:TXTextControl.DataVisualization.DrawingFrame.SaveMode">
			<summary>Determines whether the drawing's bitmap image is stored through its binary data or through a file reference.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.FileFormat">
			<summary>Determines a certain text format.</summary>
		</member>
		<member name="F:TXTextControl.DocumentServer.FileFormat.MSWord">
			<summary>Specifies Microsoft Word format.</summary>
		</member>
		<member name="F:TXTextControl.DocumentServer.FileFormat.RichTextFormat">
			<summary>Specifies RTF format (Rich Text Format).</summary>
		</member>
		<member name="F:TXTextControl.DocumentServer.FileFormat.WordprocessingML">
			<summary>Specifies Microsoft Office Open XML format.</summary>
		</member>
		<member name="F:TXTextControl.DocumentServer.FileFormat.InternalUnicodeFormat">
			<summary>Specifies the internal TX Text Control format. Text is stored in Unicode format.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.DocumentController">
			<summary>The DocumentController class is a .NET component that can be used to perform the necessary document handling on the server, when using a control such as the DocumentServer.Web.DocumentViewer.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DocumentController.#ctor">
			<summary>Initializes a new instance of the DocumentController class.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DocumentController.Dispose">
			<summary>Frees all resources used by the DocumentController instance.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DocumentController.MergeField(DocumentServer.Fields.FormFieldAdapter,System.String)">
			<summary>Sets the value of the form field specified through the given adapter to the submitted value.</summary>
			<param name="fieldAdapter">The adapter for the form field whose value is to be set.</param>
			<param name="value">Specifies the value the form field is to be set to.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DocumentController.GetBlockFieldNames(System.String)">
			<summary>Gets a list of the names of all the application fields which are contained inside the specified merge block.</summary>
			<param name="block">Specifies the name of the merge block whose field names are to be returned.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DocumentController.GetBlockNames">
			<summary>Gets a list of the names of all the merge blocks contained in the document.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DocumentController.GetFieldAdapters">
			<summary>Gets all adapters for all application fields.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DocumentController.GetFieldAdapters(TXTextControl.Page)">
			<summary>Gets a collection of adapters for all application fields in the specified scope. Returns a collection of adapters for the fields located on the given page.</summary>
			<param name="page">Specifies the page for whose fields a collection of adapters is to be returned.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DocumentController.GetFieldNames">
			<summary>Get field names.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DocumentController.Load(System.String,DocumentServer.FileFormat)">
			<summary>Loads a document from a file that is used for further processing.</summary>
			<param name="filename">Specifies the document file to be loaded.</param>
			<param name="documentFormat">Specifies one of the DocumentServer.FileFormat values.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DocumentController.LoadFromMemory(System.Object,DocumentServer.FileFormat)">
			<summary>Loads a document from memory that is used for further processing.</summary>
			<param name="document">Specifies a document memory variable from which the data is loaded.</param>
			<param name="documentFormat">Specifies one of the DocumentServer.FileFormat values.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DocumentController.Save(System.String,TXTextControl.StreamType,TXTextControl.SaveSettings)">
			<summary>Saves the document that is currently loaded in the DocumentController to a file.</summary>
			<param name="filename">Specifies a file into which the data is saved.</param>
			<param name="fileFormat">Specifies one of the StreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DocumentController.SaveToMemory(System.Byte[]@,TXTextControl.BinaryStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the document that is currently loaded in the DocumentController to a byte array.</summary>
			<param name="data">Specifies a byte array or a string into which the data is saved.</param>
			<param name="fileFormat">Specifies one of the BinaryStreamType or the StringStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DocumentController.SaveToMemory(System.String@,TXTextControl.StringStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the document that is currently loaded in the DocumentController to a string.</summary>
			<param name="data">Specifies a byte array or a string into which the data is saved.</param>
			<param name="fileFormat">Specifies one of the BinaryStreamType or the StringStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DocumentController.Twips2Pixels(System.Int32,System.Single)">
			<summary>Converts a value in twips to a value in pixels according to a specified resolution. This is a helper method that is useful when implementing pixel-based document viewers.</summary>
			<param name="twips">The value in twips to be converted.</param>
			<param name="dpi">The resolution the conversion is based on.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.DocumentController.CharCodeChecked">
			<summary>Gets or sets the character's code that is used to render checked check boxes.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DocumentController.CharCodeUnchecked">
			<summary>Gets or sets the character's code that is used to render unchecked check boxes.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DocumentController.CheckBoxFont">
			<summary>Gets or sets the font used for rendering check boxes.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DocumentController.DpiX">
			<summary>Gets or sets the horizontal DPI value used for display-related calculations.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DocumentController.DpiY">
			<summary>Gets or sets the vertical DPI value used for display-related calculations.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DocumentController.Pages">
			<summary>Gets a collection of all pages contained in the currently loaded document.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DocumentController.TextComponent">
			<summary>Gets or sets the object of type ServerTextControl that is associated with the DocumentController component.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.DocumentController.FieldAdapterCollection">
			<summary>An instance of the FieldAdapterCollection class contains adapters for all application fields of the page it belongs to.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DocumentController.FieldAdapterCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at the specified index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DocumentController.FieldAdapterCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate over the collection's items.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DocumentController.FieldAdapterCollection.IndexOf(DocumentServer.Fields.FieldAdapter)">
			<summary>Gets the index of the specified field adapter in the collection.</summary>
			<param name="fieldAdapter">Specifies the field adapter whose index should be looked up.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.DocumentController.FieldAdapterCollection.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DocumentController.FieldAdapterCollection.Item">
			<summary>Gets the DocumentServer.Fields.FieldAdapter instance at the specified index from the collection.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.MailMerge">
			<summary>The MailMerge class is a .NET component that can be used to effortlessly merge template documents with database content in .NET projects, such as ASP.NET web applications, web services or Windows services.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.#ctor">
			<summary>Initializes a new instance of the MailMerge class.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.GetBlockFieldNames(System.String)">
			<summary>Returns the names of all merge fields inside the merge block with the specified name.</summary>
			<param name="blockName">Specifies the name of the block for which the field names are returned.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.GetBlockNames">
			<summary>Lists the names of all merge blocks contained in the currently loaded template.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.LoadTemplate(System.String,DocumentServer.FileFormat)">
			<summary>Loads a template from a file that is used for the merge process.</summary>
			<param name="filename">Specifies a template file from which the data is loaded.</param>
			<param name="documentFormat">Specifies one of the DocumentServer.FileFormat values.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.LoadTemplateFromMemory(System.Object,DocumentServer.FileFormat)">
			<summary>Loads a template from memory that is used for the merge process.</summary>
			<param name="template">Specifies a template memory variable from which the data is loaded.</param>
			<param name="documentFormat">Specifies one of the DocumentServer.FileFormat values.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.Merge(System.Data.DataTable,System.Boolean)">
			<summary>Merges the loaded template with the data of a specific System.Data.DataTable. The second parameter specifies whether the single documents should be merged into one document or splitted into separate documents.</summary>
			<param name="mergeData">Specifies a System.Data.DataTable that contains the merge data.</param>
			<param name="append">Specifies whether the single documents should be merged into one document or split into separate documents.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.Merge(System.Data.DataTable)">
			<summary>Does the same as Merge(System.Data.DataTable mergeData, bool append) with parameter “append” set to true.</summary>
			<param name="mergeData">Specifies a System.Data.DataTable that contains the merge data.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.Merge(System.Boolean)">
			<summary>Merges data into the template using a data base connection given through a data source configuration file or data source configuration XML data. (See also ReportDataSourceConfigFile property and ReportDataSourceConfig property)</summary>
			<param name="append">Specifies whether the single documents should be merged into one document or split into separate documents.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.Merge">
			<summary>Does the same as method Merge(bool append) with parameter “append” set to true.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.MergeBlocks(System.Data.DataSet)">
			<summary>Merges all repeating blocks that are contained in the loaded template with the System.Data.DataTable instances contained in the given System.Data.DataSet. The name of the System.Data.DataTable must match the name of the block in the template. The supported format of the repeating blocks can be found in the ASP.NET User's Guide.</summary>
			<param name="mergeData">Specifies a System.Data.DataSet that contains the merge data.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.MergeJsonData(System.String,System.Boolean)">
			<summary>Merges data given as a JSON string into a document template. The JSON string has to contain either a single object or an array of equally structured objects.</summary>
			<param name="json">The JSON string containing the merge data.</param>
			<param name="append">Specifies whether the merge result should be merged into one document or split into separate documents.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.MergeJsonData(System.String)">
			<summary>Does the same as MergeJsonData with the parameter “append” set to true.</summary>
			<param name="json">The JSON string containing the merge data.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.MergeObject(System.Object)">
			<summary>Merges a single instance of an arbitrary type into the loaded document template. For more information about .NET reflection based object merging read the documentation of the MergeObjects method.</summary>
			<param name="mergeData">Specifies the object to merge into the template.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.MergeObjects(System.Collections.IEnumerable,System.Boolean)">
			<summary>Interprets all public properties of the objects or the key names of the dictionaries in the collection as possible table columns and / or child tables. The type of the first object (or the key names and types of the first dictionary) in the collection is analyzed via .NET reflection and used as the basis of the assumed table structure. (In case of the collection containing objects of different types, the merge process is successful nevertheless, but some fields will be empty.) Properties of simple data types (e. g. string, int, enum) are converted to text using the ToString method. The textual representation of enum values can be specified using the System.ComponentModel.DescriptionAttribute. (For example: enum FoodCategory { [Description("Grains / Cereals")] Grains_Cereals, ... }.) The name by which Properties are mapped to field names can be adjusted using the System.ComponentModel.DisplayNameAttribute. (For example: [DisplayName("Name")] public string ProductName { get; set; }.) Complex properties which are themselves of type System.Collections.IEnumerable are interpreted as child Tables and used for merging merge blocks and nested merge blocks. This way data relations can be represented. Properties of a type itself having public properties are either interpreted as a simple table column (the merged text then is determined using the ToString() method) or they are treated as if they were a child table containing only one data row with the properties being the table columns. The second parameter specifies whether the single documents should be merged into one document or split into separate documents. The supported format of the merge fields can be found in the ASP.NET User's Guide.</summary>
			<param name="mergeData">Specifies a System.Collections.IEnumerable that contains the merge data.</param>
			<param name="append">Specifies whether the single documents should be merged into one document or split into separate documents.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.MergeObjects(System.Collections.IEnumerable)">
			<summary>Does the same as MergeObjects with the parameter “append” set to true.</summary>
			<param name="mergeData">Specifies a System.Collections.IEnumerable that contains the merge data.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.Print(System.Drawing.Printing.PrintDocument)">
			<summary>Prints the merged document. It uses the settings of the specified PrintDocument.</summary>
			<param name="printDocument">Specifies an instance of the PrintDocument class.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.Print(System.String,System.String,System.Int32,System.Boolean)">
			<summary>Prints the merged document with specific settings for the document name, the printer name, the number of copies and whether it should be collated or not.</summary>
			<param name="docName">Specifies the document's name.</param>
			<param name="printerName">Specifies the name of the printer to which the output is sent.</param>
			<param name="copyCount">Specifies the number of copies to print.</param>
			<param name="collate">Collates output by printing every page of the first copy, then every page of the second copy, and so on.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.SaveDocument(System.String,TXTextControl.StreamType,TXTextControl.SaveSettings)">
			<summary>Saves the merged document to a file.</summary>
			<param name="filename">Specifies a file into which the data is saved.</param>
			<param name="fileFormat">Specifies one of the StreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.SaveDocumentToMemory(System.Byte[]@,TXTextControl.BinaryStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the merged document to a byte array.</summary>
			<param name="data">Specifies a byte array or a string into which the data is saved.</param>
			<param name="fileFormat">Specifies one of the BinaryStreamType or the StringStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.MailMerge.SaveDocumentToMemory(System.String@,TXTextControl.StringStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the merged document to a string.</summary>
			<param name="data">Specifies a byte array or a string into which the data is saved.</param>
			<param name="fileFormat">Specifies one of the BinaryStreamType or the StringStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.RemoveEmptyBlocks">
			<summary>Specifies whether the content of empty merge blocks should be removed from the template or not.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.RemoveEmptyFields">
			<summary>Specifies whether empty fields should be removed from the template or not.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.RemoveEmptyImages">
			<summary>Specifies whether images which don't have merge data should be removed from the template or not.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.RemoveTrailingWhitespace">
			<summary>Specifies whether trailing whitespace should be removed before saving a document.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.ReportDataSourceConfig">
			<summary>Specifies the Report Data Source Configuration as an XML string.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.ReportDataSourceConfigFile">
			<summary>Gets or sets the file path of a Report Data Source Configuration file (*.rdsc) which has been created with TX Text Control Words.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.SearchPath">
			<summary>Specifies a directory name where sub-templates and images (for image merging) should be searched.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.TemplateFile">
			<summary>Specifies the template file path.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.MergeBlockNamePrefix">
			<summary>A static property returning the internal merge block name prefix “txmb_”.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.TextComponent">
			<summary>Gets or sets the TextComponent object which is associated with the MailMerge component.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.UseTemplateFormat">
			<summary>Specifies whether the template page size and margins should be used or not.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.MailMerge.BarcodeMerged">
			<summary>Occurs when a barcode has been merged successfully.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.MailMerge.BlockMerging">
			<summary>Occurs when a merge block is about to be merged.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.MailMerge.BlockRowMerged">
			<summary>Occurs when a merge block row has been merged successfully.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.MailMerge.ChartMerged">
			<summary>Occurs when a chart has been merged successfully.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.MailMerge.DataRowMerged">
			<summary>Occurs when a data row has been merged successfully.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.MailMerge.FieldMerged">
			<summary>Occurs when a field has been merged.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.MailMerge.ImageFieldMerged">
			<summary>Occurs when an image field, i.e., a merge field whose name is prefixed with "image:" has been merged.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.MailMerge.ImageMerged">
			<summary>Occurs when an image has been merged successfully.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.MailMerge.IncludeTextMerging">
			<summary>Occurs when an IncludeText field has been merged.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.MailMerge.BarcodeMergedEventArgs">
			<summary>The BarcodeMergedEventArgs class provides data for the BarcodeMerged event.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.BarcodeMergedEventArgs.BarcodeFrame">
			<summary>Gets a BarcodeFrame object representing the merged barcode in the document.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.MailMerge.BlockMergingEventArgs">
			<summary>The BlockMergingEventArgs class provides data for the BlockMerging event.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.BlockMergingEventArgs.ColumnNames">
			<summary>Gets the column names of the table supplying the data for the block.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.BlockMergingEventArgs.BlockName">
			<summary>Gets the name of the merge block the event was fired for.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.BlockMergingEventArgs.BlockData">
			<summary>Gets the block data as an array of data rows.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.MailMerge.BlockRowMergedEventArgs">
			<summary>The BlockRowMergedEventArgs class provides data for the BlockRowMerged event.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.BlockRowMergedEventArgs.DataRowNumber">
			<summary>Gets an int value that indicates the currently merged data row in the merge block.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.BlockRowMergedEventArgs.DataRowCount">
			<summary>Gets an int value that indicates the total number of data rows.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.BlockRowMergedEventArgs.MergeBlockName">
			<summary>Gets a string value that indicates current merge block name.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.BlockRowMergedEventArgs.MergedBlockRow">
			<summary>Gets or sets a byte[] array that contains the complete data of the merged block row.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.MailMerge.ChartMergedEventArgs">
			<summary>The ChartMergedEventArgs class provides data for the ChartMerged event.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.ChartMergedEventArgs.ChartFrame">
			<summary>Gets a ChartFrame object representing the merged chart in the document.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.MailMerge.DataRowMergedEventArgs">
			<summary>The DataRowMergedEventArgs class provides data for the DataRowMerged event.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.DataRowMergedEventArgs.Cancel">
			<summary>Gets or sets a value indicating whether the current merge process should be canceled.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.DataRowMergedEventArgs.DataRow">
			<summary>Gets the current data row's content.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.DataRowMergedEventArgs.DataRowNumber">
			<summary>Gets an int value that indicates the currently merged data row.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.DataRowMergedEventArgs.MergedRow">
			<summary>Gets or sets a byte array that contains the complete data of the merged data row.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.MailMerge.FieldMergedEventArgs">
			<summary>The FieldMergedEventArgs class provides data for the FieldMerged event.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.FieldMergedEventArgs.DataRow">
			<summary>Gets the data row which is used to supply the current field with merge content.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.FieldMergedEventArgs.MailMergeFieldAdapter">
			<summary>Gets or sets a MailMergeFieldAdapter that contains the already merged field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.FieldMergedEventArgs.MergeBlockName">
			<summary>If the merge field is part of a merge block, this property returns the name of the block.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.FieldMergedEventArgs.Merged">
			<summary>Gets a bool value that indicates whether the current field has been merged successfully or not.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.FieldMergedEventArgs.MergedField">
			<summary>Gets or sets a byte array that contains the complete data of the merged field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.FieldMergedEventArgs.NestingDepth">
			<summary>If the merge field is part of a merge block, this property returns the one-based nesting depth of the block.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.FieldMergedEventArgs.TableCell">
			<summary>If the merge field is inside of a table, this property returns the containing table cell as a TXTextControl.TableCell instance or null otherwise.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.MailMerge.ImageFieldMergedEventArgs">
			<summary>The ImageFieldMergedEventArgs class provides data for the ImageFieldMerged event.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.ImageFieldMergedEventArgs.FieldName">
			<summary>Gets the name of the merged field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.ImageFieldMergedEventArgs.Filename">
			<summary>Gets the filename of the merged image.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.ImageFieldMergedEventArgs.Image">
			<summary>Gets or sets the image that has been merged into the field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.ImageFieldMergedEventArgs.MergeBlockName">
			<summary>If the image field is part of a merge block, this property returns the name of the block.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.ImageFieldMergedEventArgs.Merged">
			<summary>Gets a bool value that indicates whether the current field has been merged successfully or not.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.ImageFieldMergedEventArgs.NestingDepth">
			<summary>If the image field is part of a merge block, this property returns the one-based nesting depth of the block.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.ImageFieldMergedEventArgs.TableCell">
			<summary>If the image field is inside of a table, this property returns the containing table cell as a TXTextControl.TableCell instance or null otherwise.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.MailMerge.ImageMergedEventArgs">
			<summary>The ImageMergedEventArgs class provides data for the ImageMerged event.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.ImageMergedEventArgs.DataRow">
			<summary>Gets the data row which is used to supply the current image with merge content.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.ImageMergedEventArgs.ID">
			<summary>Gets the ID of the merged image.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.ImageMergedEventArgs.Image">
			<summary>Gets or sets the merged image.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.ImageMergedEventArgs.MergeBlockName">
			<summary>If the image is part of a merge block, this property returns the name of the block.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.ImageMergedEventArgs.Merged">
			<summary>Gets a boolean value that indicates whether the current image has been merged successfully or not.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.ImageMergedEventArgs.Name">
			<summary>Gets the name of the merged image.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.ImageMergedEventArgs.NestingDepth">
			<summary>If the image is part of a merge block, this property returns the one-based nesting depth of the block.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.MailMerge.IncludeTextMergingEventArgs">
			<summary>The IncludeTextMergingEventArgs class provides data for the IncludeTextMerging event.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.IncludeTextMergingEventArgs.Filename">
			<summary>Gets a string that indicates the file name of the IncludeText field to be merged.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.IncludeTextMergingEventArgs.IncludeTextDocument">
			<summary>Sets a byte[] array that contains the complete data of the IncludeText document.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.MailMerge.IncludeTextMergingEventArgs.IncludeTextField">
			<summary>Represents the currently merged INCLUDETEXT field.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.MergeCanceledException">
			<summary>A MergeCanceledException is thrown through the Merge method when the current merge process was canceled through the DataRowMergedEventArgs.Cancel property.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.DataSources.BlockTemplateType">
			<summary>Determines the type of repeating merge block which is inserted when using the DataSourceManager.InsertMergeBlock method.</summary>
		</member>
		<member name="F:TXTextControl.DocumentServer.DataSources.BlockTemplateType.TableRow">
			<summary>Insert a table row based repeating merge block.</summary>
		</member>
		<member name="F:TXTextControl.DocumentServer.DataSources.BlockTemplateType.PlainParagraph">
			<summary>Insert a paragraph based repeating merge block.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.DataSources.DialogResult">
			<summary>Specifies identifiers to indicate the return value of a dialog box.</summary>
		</member>
		<member name="F:TXTextControl.DocumentServer.DataSources.DialogResult.None">
			<summary>Nothing is returned from the dialog box. This means that the modal dialog continues running.</summary>
		</member>
		<member name="F:TXTextControl.DocumentServer.DataSources.DialogResult.OK">
			<summary>The dialog box return value is OK (usually sent from a button labeled OK).</summary>
		</member>
		<member name="F:TXTextControl.DocumentServer.DataSources.DialogResult.Cancel">
			<summary>The dialog box return value is Cancel (usually sent from a button labeled Cancel).</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.DataSources.FieldDisplayMode">
			<summary>Specifies identifiers to indicate the field display mode.</summary>
		</member>
		<member name="F:TXTextControl.DocumentServer.DataSources.FieldDisplayMode.ShowFieldText">
			<summary>The field text is displayed.</summary>
		</member>
		<member name="F:TXTextControl.DocumentServer.DataSources.FieldDisplayMode.ShowFieldCodes">
			<summary>The field codes are displayed.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.DataSources.DataColumnInfo">
			<summary>The DataColumnInfo class provides basic information about a table column in a data source.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataColumnInfo.DataType">
			<summary>Gets the data type of this table column.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataColumnInfo.FriendlyName">
			<summary>Gets a descriptive or friendly column name.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataColumnInfo.Name">
			<summary>Gets the column name.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataColumnInfo.Table">
			<summary>Gets an object of type DataTableInfo which represents the table this column belongs to.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.DataSources.DataColumnInfoCollection">
			<summary>An instance of the DataColumnInfoCollection class contains all data columns of a data table in a data source represented through objects of the type DataColumnInfo.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataColumnInfoCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataColumnInfoCollection.Item">
			<summary>Gets the DataColumnInfo instance with the specified 0-based index from the collection. In C# this property is the indexer for the DataColumnInfoCollection class.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataColumnInfoCollection.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataColumnInfoCollection.IsReadOnly">
			<summary>Gets a value indicating whether the collection is read only.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.DataSources.DataRelationInfo">
			<summary>The DataRelationInfo class provides all necessary information about parent-child-relations between data tables.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataRelationInfo.ChildColumnName">
			<summary>Gets the name of the child column which is part of this data relation.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataRelationInfo.ChildTableName">
			<summary>Gets the name of the child table which is part of this data relation.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataRelationInfo.ParentColumnName">
			<summary>Gets the name of the parent column which is part of this data relation.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataRelationInfo.ParentTableName">
			<summary>Gets the name of the parent table which is part of this data relation.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataRelationInfo.RelationName">
			<summary>Gets the data relation name if one was defined.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.DataSources.DataRelationInfoCollection">
			<summary>An instance of the DataRelationInfoCollection class contains all data relations in a data source represented through objects of the type DataRelationInfo.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataRelationInfoCollection.CopyTo(DocumentServer.DataSources.DataRelationInfo[],System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataRelationInfoCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataRelationInfoCollection.Item">
			<summary>Gets the DataRelationInfo instance with the specified 0-based index from the collection. In C# this property is the indexer for the DataRelationInfoCollection class.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataRelationInfoCollection.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataRelationInfoCollection.IsReadOnly">
			<summary>Gets a value indicating whether the collection is read only.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.DataSources.DataSourceManager">
			<summary>The DataSourceManager class is designed for handling all existing kinds of data sources which can be used together with the MailMerge class.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.#ctor">
			<summary>Initializes a new instance of the DataSourceManager class.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.InsertMergeBlock(System.Object,DocumentServer.DataSources.MergeBlockInfo,DocumentServer.DataSources.MergeBlockSettings)">
			<summary>Inserts a repeating merge block into a TextControl instance, a WPF.TextControl instance or a ServerTextControl instance at the current input position.</summary>
			<param name="textControl">A TextControl instance, a WPF.TextControl instance or a ServerTextControl instance.</param>
			<param name="mergeBlockInfo">A MergeBlockInfo object which describes the merge block to insert into the TextControl instance.</param>
			<param name="settings">A MergeBlockSettings object which describes the settings of the merge block to insert into the TextControl instance.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.IsMergeBlock(TXTextControl.SubTextPart)">
			<summary>Checks if a given SubTextPart is a merge block.</summary>
			<param name="subTextPart">The SubTextPart to be checked.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.LoadAssembly(System.String)">
			<summary>Loads an assembly file as a data source. Automatically deduces table and column names as well as data relations from the public properties of all public classes found in the assembly.</summary>
			<param name="fileName">The assembly file name.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.LoadDataSet(System.Data.DataSet)">
			<summary>Loads a System.Data.DataSet object as a data source.</summary>
			<param name="dataSet">The System.Data.DataSet object to use as a data source.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.LoadDataSourceConfig">
			<summary>Shows the system's default open file dialog where a configuration file can be selected.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.LoadDataSourceConfig(System.Object)">
			<summary>Shows the system's default open file dialog where a configuration file can be selected.</summary>
			<param name="owner">An object that represents the top-level window that will own the modal dialog box.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.LoadDataSourceConfig(System.String)">
			<summary>Loads XML configuration data given as a string.</summary>
			<param name="configData">A string containing XML configuration data.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.LoadDataTable(System.Data.DataTable)">
			<summary>Loads a System.Data.DataTable object as a data source.</summary>
			<param name="dataTable">The DataTable object to use as a data source.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.LoadJson(System.String)">
			<summary>Loads a JSON string containing an array of objects or a single object as a data source. Automatically deduces table and column names as well as data relations from property names and nested objects in the given single object or, in case of an array, the first object.</summary>
			<param name="json">A JSON string containing a single object or an array of objects.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.LoadObjects(System.Collections.IEnumerable)">
			<summary>Loads a collection implementing the interface IEnumerable as a data source and deduces the data tables, column names and data relations from the public properties and used classes of the first contained object using .NET reflection or, in case of the first contained object being a Dictionary with string keys, from the key names and value types.</summary>
			<param name="objects">A collection implementing interface System.Collections.IEnumerable containing objects of any type.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.LoadSingleObject(System.Object)">
			<summary>Loads a single object which is either a Dictionary with string keys or an object of an arbitrary type as a data source. The data tables, column names are deduced either from the key names or the public property names and types using .NET reflection.</summary>
			<param name="obj">A single object which is either a Dictionary with string keys or an object of an arbitrary type as a data source.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.LoadXmlFile(System.String)">
			<summary>Loads the contents of an XML file as a data source.</summary>
			<param name="fileName">The file name.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.LoadXmlString(System.String)">
			<summary>Loads XML data, given as a string, as a data source.</summary>
			<param name="xml">A string containing XML data.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.Merge(System.Byte[],System.Int32,System.Object)">
			<summary>Merges a binary TX internal unicode format document with the currently loaded data source.</summary>
			<param name="template">A binary TX internal unicode format document into which the data is merged.</param>
			<param name="maxDocuments">Specifies the maximum number of merged documents.</param>
			<param name="textControl">A TextControl instance needed for licensing purposes.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.SaveDataSourceConfig">
			<summary>Shows the system's default save file dialog where a file name and location can be selected.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.SaveDataSourceConfig(System.Object)">
			<summary>Shows the system's default save file dialog where a file name and location can be selected.</summary>
			<param name="owner">An object that represents the top-level window that will own the modal dialog box.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataSourceManager.SaveDataSourceConfig(System.String@)">
			<summary>Saves the configuration data into a given string.</summary>
			<param name="configData">A string into which the config file content will be written when the method is called.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataSourceManager.ConnectionString">
			<summary>Gets the connection string of the connection selected with the DatabaseConnectionDialog.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataSourceManager.DataProviderName">
			<summary>Gets the name of the data provider selected with the DatabaseConnectionDialog.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataSourceManager.DataRelations">
			<summary>Gets a DataRelationInfoCollection of DataRelationInfo objects which represent the data relations in the data source.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataSourceManager.DataTables">
			<summary>Gets a DataTableInfoCollection of DataTableInfo objects which represent the data tables in the data source.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataSourceManager.IsMergingPossible">
			<summary>Gets a value indicating whether all requirements are met and the method Merge can be called.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataSourceManager.MasterDataTableInfo">
			<summary>Gets or sets a DataTableInfo object representing the table which is used as a master table when merging data into the document.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataSourceManager.PossibleMergeBlockTables">
			<summary>Gets a DataTableInfoCollection of DataTableInfo objects representing the tables which can be used as merge blocks using the currently selected master table.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataSourceManager.PossibleMergeFieldColumns">
			<summary>Gets a DataColumnInfoCollection of DataColumnInfo objects representing the table columns which can be used as merge fields using the currently selected master table.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.DataSources.DataSourceManager.ConnectionStringChanged">
			<summary>Is fired when the contents of the ConnectionString property change.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.DataSources.DataSourceManager.DataProviderNameChanged">
			<summary>Is fired when the contents of the DataProviderName property change.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.DataSources.DataSourceManager.DataRelationsChanged">
			<summary>Is fired when the contents of the DataRelations property change.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.DataSources.DataSourceManager.DataTablesChanged">
			<summary>Is fired when the contents of the DataTables property change.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.DataSources.DataSourceManager.IsMergingPossibleChanged">
			<summary>Is fired when the value of the IsMergingPossible property changes.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.DataSources.DataSourceManager.MasterDataTableInfoChanged">
			<summary>Is fired when the contents of the MasterDataTableInfo property change.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.DataSources.DataSourceManager.PossibleMergeBlockTablesChanged">
			<summary>Is fired when the contents of the PossibleMergeBlockTables property change.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.DataSources.DataSourceManager.PossibleMergeFieldColumnsChanged">
			<summary>Is fired when the contents of the PossibleMergeFieldColumns property change.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.DataSources.DataTableInfo">
			<summary>The DataTableInfo class provides basic information about a data table in a data source.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataTableInfo.ChildRelations">
			<summary>Gets a DataRelationInfoCollection representing the parent-child-relationships this table has with other data tables.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataTableInfo.ChildTables">
			<summary>Gets a DataTableInfoCollection representing the child-tables this table has.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataTableInfo.Columns">
			<summary>Gets a DataColumnInfoCollection representing the columns of this data table.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataTableInfo.TableName">
			<summary>Gets the table name.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.DataSources.DataTableInfoCollection">
			<summary>An instance of the DataTableInfoCollection class contains all data tables in a data source represented through objects of the type DataTableInfo.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataTableInfoCollection.CopyTo(DocumentServer.DataSources.DataTableInfo[],System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular index.</summary>
			<param name="array">Specifies the array to copy to.</param>
			<param name="index">Specifies the index of the destination array at which to begin copying.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataTableInfoCollection.GetEnumerator">
			<summary>Returns an enumerator that can be used to iterate through the collection.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataTableInfoCollection.Item">
			<summary>Gets the DataTableInfo instance with the specified 0-based index from the collection.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.DataTableInfoCollection.Item">
			<summary>Gets the DataTableInfo instance with the specified name from the collection. Returns null if the given name does not exist.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataTableInfoCollection.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.DataTableInfoCollection.IsReadOnly">
			<summary>Gets a value indicating whether the collection is read only.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.DataSources.IDataRowAdapter">
			<summary>The IDataRowAdapter interface contains properties and methods implemented by data row instances used in the BlockMerging event.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.IDataRowAdapter.GetChildRows(System.String)">
			<summary>Returns the data of a child relation with a given name as an array of IDataRowAdapter instances.</summary>
			<param name="childTableName">The name of the child table / the child relation.</param>
		</member>
		<member name="P:TXTextControl.Indexer">
			<summary>The indexer of the IDataRowAdapter interface returns the content of the row's column with the given name.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.IDataRowAdapter.Table">
			<summary>Gets the table the data row belongs to as an instance of a class implementing the IDataTableAdapter interface.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.DataSources.IDataTableAdapter">
			<summary>The IDataTableAdapter interface contains properties and methods implemented by data table instances used in the BlockMerging event.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.IDataTableAdapter.TableName">
			<summary>Returns the name of the table.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.IDataTableAdapter.ColumnNames">
			<summary>Returns the table's column names as a string array.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.IDataTableAdapter.Rows">
			<summary>Returns the table's data as an array of objects implementing the IDataRowAdapter interface.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.IDataTableAdapter.ChildTableNames">
			<summary>Returns the names of the child relations in this table as a string array.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.DataSources.MergeBlockInfo">
			<summary>The MergeBlockInfo class is used to insert a table or paragraph based repeating merge block into a TextControl instance using the DataSourceManager.InsertMergeBlock method.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.MergeBlockInfo.#ctor(System.String)">
			<summary>Initializes a new instance of the MergeBlockInfo class and sets the table name.</summary>
			<param name="tableName">The name of the table which is the data source for this merge block.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.MergeBlockInfo.ChildBlocks">
			<summary>Gets or sets the list of merge blocks nested inside this merge block.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.MergeBlockInfo.ColumnNames">
			<summary>Gets or sets the list of data column names which represent the merge fields this merge block consists of.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.DataSources.MergeBlockInfo.TableName">
			<summary>Gets the table name of this merge block.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.DataSources.MergeBlockSettings">
			<summary>The MergeBlockSettings class is used to insert a table or paragraph based repeating merge block into a TextControl instance using the DataSourceManager.InsertMergeBlock method.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.MergeBlockSettings.#ctor">
			<summary>Initializes a new instance of the MergeBlockSettings class.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.MergeBlockSettings.#ctor(DocumentServer.DataSources.BlockTemplateType)">
			<summary>Initializes a new instance of the MergeBlockSettings class.</summary>
			<param name="blockTemplateType">A value of type BlockTemplateType specifying the block type.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.MergeBlockSettings.#ctor(DocumentServer.DataSources.BlockTemplateType,System.Boolean)">
			<summary>Initializes a new instance of the MergeBlockSettings class.</summary>
			<param name="blockTemplateType">A value of type BlockTemplateType specifying the block type.</param>
			<param name="createHeaderRow">If parameter blockTemplateType is set to BlockTemplateType.TableRow and this parameter is set to true, a table header row is automatically generated.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.DataSources.MergeBlockSettings.#ctor(DocumentServer.DataSources.BlockTemplateType,System.Boolean,System.Drawing.Color,DocumentServer.DataSources.FieldDisplayMode)">
			<summary>Initializes a new instance of the MergeBlockSettings class.</summary>
			<param name="blockTemplateType">A value of type BlockTemplateType specifying the block type.</param>
			<param name="createHeaderRow">If parameter blockTemplateType is set to BlockTemplateType.TableRow and this parameter is set to true, a table header row is automatically generated.</param>
			<param name="highlightColor">The color the merge block is highlighted with if the input position is inside the block boundaries.</param>
			<param name="fieldDisplayMode">A value of type FieldDisplayMode which specifies if field text or field codes are shown.</param>
		</member>
		<member name="P:TXTextControl.BlockTemplateType">
			<summary>Gets or sets a value of type BlockTemplateType which specifies the type of the inserted repeating block.</summary>
		</member>
		<member name="P:TXTextControl.CreateHeaderRow">
			<summary>If this property is true and property BlockTemplateType is set to BlockTemplateType.TableRow, a table header row is automatically generated.</summary>
		</member>
		<member name="P:TXTextControl.HighlightColor">
			<summary>Specifies the color the inserted merge block is highlighted with if the input position is inside the block.</summary>
		</member>
		<member name="P:TXTextControl.FieldDisplayMode">
			<summary>Gets or sets a value of type FieldDisplayMode which specifies the content display mode of the inserted fields.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.CheckBoxContentControl">
			<summary>The CheckBoxContentControl implements the MS Word specific check box content control field.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.CheckBoxContentControl.#ctor">
			<summary>Initializes complete new instance of the CheckBoxContentControl class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.CheckBoxContentControl.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes a new instance of the CheckBoxContentControl class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the ApplicationField to be adapted.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.CheckBoxContentControl.Checked">
			<summary>Specifies whether the field is checked or not.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.ComboBoxContentControl">
			<summary>The ComboBoxContentControl implements the MS Word specific combo box content control field.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.ComboBoxContentControl.#ctor">
			<summary>Initializes complete new instance of the ComboBoxContentControl class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.ComboBoxContentControl.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes a new instance of the ComboBoxContentControl class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the ApplicationField to be adapted.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.ComboBoxContentControl.ListItems">
			<summary>Gets or sets the list items of the combo box content control field.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.ContentControlFieldAdapter">
			<summary>The abstract ContentControlFieldAdapter class is the base class of all Microsoft Word content control field adapter classes.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.ContentControlFieldAdapter.#ctor">
			<summary>Initializes a complete new instance of the ContentControlFieldAdapter class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.ContentControlFieldAdapter.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes a new instance of the ContentControlFieldAdapter class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the ApplicationField to be adapted.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.ContentControlFieldAdapter.Title">
			<summary>Gets or sets the content control's title.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.ContentControlFieldAdapter.Tag">
			<summary>Gets or sets the content control's tag.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.ContentControlFieldAdapter.Id">
			<summary>Gets or sets the content control's id.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.ContentControlFieldAdapter.ContentDeletable">
			<summary>Specifies whether the content of the content control field should be deletable or not.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.ContentControlFieldAdapter.ContentEditable">
			<summary>Specifies whether the content of the content control field should be editable or not.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.ContentControlFieldAdapter.Type">
			<summary>Gets or sets the type of the content control field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.ContentControlFieldAdapter.Placeholder">
			<summary>Gets or sets the placeholder field part of the content control field.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.DateContentControl">
			<summary>The DateContentControl implements the MS Word specific date content control field.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.DateContentControl.#ctor">
			<summary>Initializes complete new instance of the DateContentControl class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.DateContentControl.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes a new instance of the DateContentControl class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the ApplicationField to be adapted.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.DateContentControl.Date">
			<summary>Gets or sets the date of the content control field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.DateContentControl.DateFormat">
			<summary>Gets or sets the date format of the content control field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.DateContentControl.LanguageID">
			<summary>Gets or sets the language ID of the content control field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.DateContentControl.StoreMappedDataAs">
			<summary>Gets or sets the translation that shall be performed on the displayed date in a date picker structured document tag.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.DateContentControl.Calendar">
			<summary>Gets or sets the calendar type of the content control field.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.DateField">
			<summary>The DateField implements the MS Word specific DATEFIELD field.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.DateField.#ctor">
			<summary>Initializes a complete new instance of the DateField class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.DateField.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes new instance of the DateField class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the ApplicationField to be adapted.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.DateField.Text">
			<summary>Gets and sets the displayed text of the field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.DateField.Date">
			<summary>Sets the date of the field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.DateField.Format">
			<summary>Gets and sets the format of the field.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.DropDownListContentControl">
			<summary>The DropDownListContentControl implements the MS Word specific drop down list content control field.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.DropDownListContentControl.#ctor">
			<summary>Initializes complete new instance of the DropDownListContentControl class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.DropDownListContentControl.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes a new instance of the DropDownListContentControl class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the ApplicationField to be adapted.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.DateContentControl.ListItems">
			<summary>Gets or sets the list items of the content control field.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.FieldAdapter">
			<summary>The abstract FieldAdapter class is the base class of all special DocumentServer field adapters.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.FieldAdapter.#ctor">
			<summary>Initializes a complete new instance of the FieldAdapter class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.FieldAdapter.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes a new instance of the FieldAdapter class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the ApplicationField to be adapted.</param>
		</member>
		<member name="F:TXTextControl.FieldAdapter.TYPE_NAME">
			<summary>Represents the name of the respective field type.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.FieldAdapter.ShowDialog">
			<summary>Opens the specific field options dialog box with LTR flow direction.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.FieldAdapter.ShowDialog(System.Boolean)">
			<summary>Opens the specific field options dialog box with the flow direction (RTL or LTR) set according to the boolean parameter value.</summary>
			<param name="rightToLeft">Sets the dialog layout flow direction.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.FieldAdapter.ShowDialog(System.Object)">
			<summary>Opens the specific field options dialog box with a specified owner window.</summary>
			<param name="owner">Sets the dialog's owner window.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.FieldAdapter.ShowDialog(System.Object,System.Boolean)">
			<summary>Opens the specific field options dialog box with an owner window and a flow direction.</summary>
			<param name="owner">Sets the dialog's owner window.</param>
			<param name="rightToLeft">Sets the dialog layout flow direction.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FieldAdapter.ApplicationField">
			<summary>Gets the adapted ApplicationField of the field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FieldAdapter.ID">
			<summary>Gets the ID of the specific field through its adapter.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FieldAdapter.TypeName">
			<summary>Gets the field's type name of the specific field through its adapter.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FieldAdapter.Start">
			<summary>Gets the first character position (one-based) of the field through its adapter.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FieldAdapter.Length">
			<summary>Gets the number of characters in a text field through its adapter.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.FormCheckBox">
			<summary>The FormText implements the MS Word specific FORMCHECKBOX field.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.FormCheckBox.#ctor">
			<summary>Initializes complete new instance of the FormText class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.FormCheckBox.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes a new instance of the FormText class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the ApplicationField to be adapted.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FormCheckBox.Size">
			<summary>Specifies the maximum length of the field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FormCheckBox.SizeAuto">
			<summary>Specifies whether the field is automatically resized or not.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FormCheckBox.Checked">
			<summary>Specifies whether the field is checked or not.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.FormDropDown">
			<summary>The FormDropDown class implements the MS Word specific FORMDROPDOWN field.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.FormDropDown.#ctor">
			<summary>Initializes a complete new instance of the FormDropDown class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.FormDropDown.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes a new instance of the FormDropDown class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the ApplicationField to be adapted.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FormDropDown.ListEntries">
			<summary>Gets and sets the list entries of the drop down field.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.FormFieldAdapter">
			<summary>The abstract FormFieldAdapter class is the base class of all special DocumentServer form field adapters.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.FormFieldAdapter.#ctor">
			<summary>Initializes a complete new instance of the FormFieldAdapter class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.FormFieldAdapter.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes a new instance of the FormFieldAdapter class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the to-be-adapted ApplicationField.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FormFieldAdapter.HelpText">
			<summary>Gets and sets the help text of the field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FormFieldAdapter.StatusText">
			<summary>Gets and sets the status text of the field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FormFieldAdapter.Enabled">
			<summary>Specifies whether the field is enabled or not.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FormFieldAdapter.CalcOnExit">
			<summary>Gets or sets the CalcOnExit property of the field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FormFieldAdapter.Name">
			<summary>Gets and sets the name of the form field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FormFieldAdapter.Text">
			<summary>Gets and sets the text of the form field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FormFieldAdapter.Font">
			<summary>Gets and sets the font of the form field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FormFieldAdapter.Bounds">
			<summary>Gets and sets the bounds of the form field.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.FormText">
			<summary>The FormText class implements the MS Word specific FORMTEXT field.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.FormText.#ctor">
			<summary>Initializes a complete new instance of the FormText class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.FormText.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes a new instance of the FormText class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the ApplicationField to be adapted.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FormText.MaxLength">
			<summary>Gets and sets the maximum length of the field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FormText.Format">
			<summary>Gets or sets the TextFormatOptions of the field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.FormText.Type">
			<summary>Gets or sets the type of the field.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.IfField">
			<summary>The IfField class implements the MS Word specific IF field.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.IfField.#ctor">
			<summary>Initializes a complete new instance of the IfField class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.IfField.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes a new instance of the IfField class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the ApplicationField to be adapted.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.IfField.Text">
			<summary>Gets and sets the displayed text of the field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.IfField.Operator">
			<summary>Gets and sets the operator of the field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.IfField.Expression1">
			<summary>Gets and sets the first expression text that should be compared.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.IfField.Expression2">
			<summary>Gets and sets the second expression text that should be compared to Expression1.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.IfField.TrueText">
			<summary>Gets and sets the text that should be displayed when the comparison is true.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.IfField.FalseText">
			<summary>Gets and sets the text that should be displayed when the comparison is false.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.IfField.FieldValue">
			<summary>Gets or sets the field's value of the field that has been specified in Expression1.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.IncludeText">
			<summary>The IncludeText class implements the MS Word specific INCLUDETEXT field.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.IncludeText.#ctor">
			<summary>Initializes a complete new instance of the IncludeText class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.IncludeText.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes a new instance of the IncludeText class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the ApplicationField to be adapted.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.IncludeText.Filename">
			<summary>Gets and sets the file name of the document that should be inserted.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.IncludeText.Bookmark">
			<summary>Gets and sets the bookmark switch of the field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.IncludeText.TextFormat">
			<summary>Gets and sets the text format of the field.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.MailMergeFieldAdapter">
			<summary>The abstract MailMergeFieldAdapter class is the base class of all special DocumentServer mail merge field adapters.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.MailMergeFieldAdapter.#ctor">
			<summary>Initializes a complete new instance of the MailMergeFieldAdapter class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.MailMergeFieldAdapter.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes a new instance of the MailMergeFieldAdapter class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the to-be-adapted ApplicationField.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.MailMergeFieldAdapter.PreserveFormatting">
			<summary>Specifies whether the field's formatting should be preserved.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.MergeField">
			<summary>The MergeField class implements the MS Word specific MERGEFIELD field.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.MergeField.#ctor">
			<summary>Initializes a complete new instance of the MergeField class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.MergeField.#ctor(TXTextControl.ApplicationField)">
			<summary>nitializes a new instance of the MergeField class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the ApplicationField to be adapted.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.MergeField.DateTimeFormat">
			<summary>Specifies a string format which is applied to date / time values.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.MergeField.Mapped">
			<summary>Specifies whether the field is a mapped field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.MergeField.Name">
			<summary>Gets and sets the name of the field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.MergeField.NumericFormat">
			<summary>Specifies a string format which is applied to numeric values.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.MergeField.Text">
			<summary>Gets and sets the text of the field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.MergeField.TextAfter">
			<summary>Gets and sets the text of the field that is displayed after the field's text.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.MergeField.TextBefore">
			<summary>Gets and sets the text of the field that is displayed before the field's text.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.MergeField.TextFormat">
			<summary>Gets and sets the text format of the field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.MergeField.VerticalFormatting">
			<summary>Specifies whether the field's formatting is vertical.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.NextField">
			<summary>The NextField class implements the MS Word specific NEXT field.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.NextField.#ctor">
			<summary>Initializes a complete new instance of the NextField class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.NextField.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes a new instance of the NextField class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the ApplicationField to be adapted.</param>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.NextIfField">
			<summary>The NextIfField class implements the MS Word specific NEXTIF field.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.NextIfField.#ctor">
			<summary>Initializes a complete new instance of the NextIfField class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.NextIfField.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes a new instance of the NextIfField class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the ApplicationField to be adapted.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.NextIfField.Result">
			<summary>Gets the evaluation result of the two field expressions and the specified comparison operator.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.NextIfField.Operator">
			<summary>Gets and sets the comparison operator the field.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.NextIfField.Expression1">
			<summary>Gets and sets the first expression text that should be compared.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.NextIfField.Expression2">
			<summary>Gets and sets the second expression text that should be compared to Expression1.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.NextIfField.FieldValue">
			<summary>Gets or sets the field's value of the field that has been specified in Expression1.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.PlainTextContentControl">
			<summary>The PlainTextContentControl implements the MS Word specific plain text content control field.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.PlainTextContentControl.#ctor">
			<summary>Initializes complete new instance of the PlainTextContentControl class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.PlainTextContentControl.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes a new instance of the PlainTextContentControl class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the ApplicationField to be adapted.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.PlainTextContentControl.Text">
			<summary>Gets or sets the text of the content control field.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Fields.RichTextContentControl">
			<summary>The RichTextContentControl implements the MS Word specific plain text content control field.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.RichTextContentControl.#ctor">
			<summary>Initializes complete new instance of the RichTextContentControl class without a connection to an existing ApplicationField.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Fields.RichTextContentControl.#ctor(TXTextControl.ApplicationField)">
			<summary>Initializes a new instance of the RichTextContentControl class with a connection to an existing ApplicationField.</summary>
			<param name="appField">Specifies the ApplicationField to be adapted.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Fields.RichTextContentControl.Text">
			<summary>Gets or sets the text of the content control field.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Json.InvalidCodePointException">
			<summary>Is thrown when calling method MailMerge.MergeJsonData with a JSON string containing an invalid hexadecimal unicode code point.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Json.InvalidNumberFormatException">
			<summary>Is thrown when calling method MailMerge.MergeJsonData with a JSON string containing a number with an invalid number format.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Json.ParserException">
			<summary>Base class of all JSON parser related exceptions which can be thrown when calling method MailMerge.MergeJsonData with an incorrect JSON string.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Json.UnexpectedEndOfInputException">
			<summary>Is thrown when calling method MailMerge.MergeJsonData with an incomplete JSON string.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Json.UnexpectedTokenException">
			<summary>Is thrown when calling method MailMerge.MergeJsonData with a JSON string containing an unexpected character.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Json.UnknownLiteralNameTokenException">
			<summary>Is thrown when calling method MailMerge.MergeJsonData with a JSON string containing an unknown character sequence at a position where one of the strings "true", "false" or "null" are expected.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Json.UnknownParseErrorException">
			<summary>Is thrown when calling method MailMerge.MergeJsonData and the internal JSON parser encounters an unknown error.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.WPF.EditDataRelationsDialog">
			<summary>The EditDataRelationsDialog class allows the user to add or remove data relations to or from the current data source.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.WPF.EditDataRelationsDialog.#ctor(DocumentServer.DataSources.DataSourceManager)">
			<summary>Creates a EditDataRelationsDialog object for the specified DocumentServer.DataSources.DataSourceManager.</summary>
			<param name="dataSourceManager">Specifies the DataSourceManager, which manages the current data source.</param>
		</member>
		<member name="T:TXTextControl.DocumentServer.WPF.EditMergeBlocksDialog">
			<summary>The EditMergeBlocksDialog class allows the user to remove or rename merge blocks contained in the current document.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.WPF.EditMergeBlocksDialog.#ctor(DocumentServer.DataSources.DataSourceManager,System.Object)">
			<summary>Creates a EditMergeBlocksDialog object for the specified DocumentServer.DataSources.DataSourceManager.</summary>
			<param name="dataSourceManager">Specifies the DataSourceManager, which manages the current data source.</param>
			<param name="textControl">A TextControl or a ServerTextControl instance containing the merge blocks which are shown in the dialog box.</param>
		</member>
		<member name="T:TXTextControl.DocumentServer.WPF.InsertMergeBlockDialog">
			<summary>The InsertMergeBlockDialog class allows the user to design and insert a merge block based on the currently selected master table.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.WPF.InsertMergeBlockDialog.#ctor(DocumentServer.DataSources.DataSourceManager,System.Object)">
			<summary>Creates a InsertMergeBlockDialog object for the specified DocumentServer.DataSources.DataSourceManager.</summary>
			<param name="dataSourceManager">Specifies the DataSourceManager, which manages the current data source.</param>
			<param name="textControl">A TextControl or a ServerTextControl instance containing the document into which the merge block is inserted.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.WPF.InsertMergeBlockDialog.AddTableHeaderRow">
			<summary>Indicates whether a separate header row has to be added to the table containing the repeating merge block.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.WPF.InsertMergeBlockDialog.BlockType">
			<summary>Indicates the type of the merge block to be created.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.WPF.InsertMergeBlockDialog.HighlightColor">
			<summary>Returns the selected highlight color to be used for the sub text part representing the merge block.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.WPF.InsertMergeBlockDialog.MergeBlockInfo">
			<summary>Returns a MergeBlockInfo object describing the merge block to be inserted.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Web.DocumentViewer">
			<summary>The DocumentViewer class is a .NET component that can be used to display documents in the web browser in ASP.NET projects.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Web.DocumentViewer.#ctor">
			<summary>Initializes a new instance of the DocumentViewer class.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Web.DocumentViewer.Dispose">
			<summary>Frees all resources used by the DocumentViewer instance.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Web.DocumentViewer.LoadDocument(System.String)">
			<summary>Loads a document from a specific path.</summary>
			<param name="path">Specifies the document file to be loaded.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.Web.DocumentViewer.LoadDocument(System.String,DocumentServer.FileFormat)">
			<summary>Loads a document from a specific path and a specific document format.</summary>
			<param name="path">Specifies the document file to be loaded.</param>
			<param name="format">Specifies one of the DocumentServer.FileFormat values.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.Web.DocumentViewer.LoadDocumentFromMemory(System.Object,DocumentServer.FileFormat)">
			<summary>Loads a document from a file that is used for further processing.</summary>
			<param name="data">Specifies a memory variable from which the document is loaded.</param>
			<param name="format">Specifies one of the DocumentServer.FileFormat values.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.Web.DocumentViewer.Save(DocumentServer.FileFormat)">
			<summary>Saves the document in a specific document format.</summary>
			<param name="format">Specifies one of the DocumentServer.FileFormat values.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.Web.DocumentViewer.Save(System.String)">
			<summary>Saves the document to a specific path.</summary>
			<param name="path">Specifies where the document should be saved.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.Web.DocumentViewer.Save(System.String,DocumentServer.FileFormat)">
			<summary>Saves the document to a specific path in a specific document format.</summary>
			<param name="path">Specifies where the document should be saved.</param>
			<param name="format">Specifies one of the DocumentServer.FileFormat values.</param>
		</member>
		<member name="M:TXTextControl.DocumentServer.Web.DocumentViewer.SaveUserInput">
			<summary>Initiates saving the currently loaded form's user input. The actual saving is performed by a method which has to be bound to the DocumentServer.Web.DocumentViewer.SaveFormData event.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.DocumentController">
			<summary>Gets or sets the DocumentServer.DocumentController object that is associated with the DocumentServer.Web.DocumentViewer component.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.DocumentPath">
			<summary>Gets or sets the path to the document, which will be displayed in the DocumentServer.Web.DocumentViewer.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.EditMode">
			<summary>Gets or sets whether the document viewer renders forms editable, i.e.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.FieldBorderStyle">
			<summary>Gets or sets whether and if so how the field borders are rendered, when EditMode is set to Edit.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.PageAnimations">
			<summary>Specifies whether CSS transition animations should be used or not when navigating through pages.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.PageAnimationDuration">
			<summary>Gets or sets the duration of the page animations in seconds.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.ShowEditButton">
			<summary>Specifies whether the edit button is shown or not.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.RoundedPageCorners">
			<summary>Specifies whether rounded document page corners should be used or not.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.FieldBorderColor">
			<summary>Gets or sets the color of the field borders, that is used when FieldBorderStyle is not None.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.Interpolation">
			<summary>Gets or sets whether the rendered document is interpolated during the process.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.InterpolationMode">
			<summary>Gets or sets the interpolation mode which is used for rendering the document.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.PageNumber">
			<summary>Gets or sets the page number that the DocumentServer.Web.DocumentViewer is displaying or should display respectively.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.ToolBar">
			<summary>Specifies whether the document viewer's tool bar is displayed or not.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.TotalPages">
			<summary>Gets the total number of pages the loaded document contains.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.ZoomFactor">
			<summary>Gets or sets the zoom factor in percent.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.ZoomTo">
			<summary>Gets or sets the zoom behavior of the DocumentServer.Web.DocumentViewer.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.Web.DocumentViewer.SaveDocument">
			<summary>Occurs when DocumentServer.Web.DocumentViewer.Save has been called, while specifying the format parameter only.</summary>
		</member>
		<member name="E:TXTextControl.DocumentServer.Web.DocumentViewer.SaveFormData">
			<summary>Occurs when DocumentServer.Web.DocumentViewer.SaveUserInput has been called.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Web.DocumentViewer.SaveDocumentEventArgs">
			<summary>The SaveDocumentEventArgs class provides data for the DocumentViewer.SaveDocument event.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.SaveDocumentEventArgs.Document">
			<summary>Gets a snapshot of the currently loaded document for further processing.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.SaveDocumentEventArgs.FileFormat">
			<summary>Specifies the format of DocumentViewer.SaveDocumentEventArgs.Document.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Web.DocumentViewer.SaveFormDataEventArgs">
			<summary>The SaveDocumentEventArgs class provides data for the DocumentViewer.SaveFormData event.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Web.DocumentViewer.SaveDocumentEventArgs.FormData">
			<summary>Gets a snapshot of the currently loaded form's user input.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Windows.Forms.DataSourceExtractionDialog">
			<summary>The DataSourceExtractionDialog class allows the user to save an excerpt from the currently loaded data source.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Windows.Forms.DataSourceExtractionDialog.#ctor(DocumentServer.DataSources.DataSourceManager)">
			<summary>Creates a DataSourceExtractionDialog object for the specified DocumentServer.DataSources.DataSourceManager.</summary>
			<param name="dataSourceManager">Specifies the DataSourceManager, which manages the current data source.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Windows.Forms.DataSourceExtractionDialog.FileName">
			<summary>Returns the file name of the file into which the data source excerpt has been saved.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Windows.Forms.DataSourceExtractionDialog.MaxRows">
			<summary>Returns the maximum number of data rows from the selected table which were saved into the excerpt file.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Windows.Forms.DataSourceExtractionDialog.SelectedTable">
			<summary>Returns a description of the table which was selected by the user to be exported.</summary>
		</member>
		<member name="T:TXTextControl.DocumentServer.Windows.Forms.DatabaseConnectionDialog">
			<summary>The DatabaseConnectionDialog class allows the user to build connection strings and to connect to specific data sources.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Windows.Forms.DatabaseConnectionDialog.#ctor(DocumentServer.DataSources.DataSourceManager)">
			<summary>Creates a DatabaseConnectionDialog object for the specified DocumentServer.DataSources.DataSourceManager.</summary>
			<param name="dataSourceManager">Specifies the DataSourceManager, which handles the selected connection to a data source.</param>
		</member>
		<member name="T:TXTextControl.DocumentServer.Windows.Forms.EditDataRelationsDialog">
			<summary>The EditDataRelationsDialog class allows the user to add or remove data relations to or from the current data source.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Windows.Forms.EditDataRelationsDialog.#ctor(DocumentServer.DataSources.DataSourceManager)">
			<summary>Creates a EditDataRelationsDialog object for the specified DocumentServer.DataSources.DataSourceManager.</summary>
			<param name="dataSourceManager">Specifies the DataSourceManager, which manages the current data source.</param>
		</member>
		<member name="T:TXTextControl.DocumentServer.Windows.Forms.EditMergeBlocksDialog">
			<summary>The EditMergeBlocksDialog class allows the user to remove or rename merge blocks contained in the current document.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Windows.Forms.EditMergeBlocksDialog.#ctor(DocumentServer.DataSources.DataSourceManager,System.Object)">
			<summary>Creates a EditMergeBlocksDialog object for the specified DocumentServer.DataSources.DataSourceManager.</summary>
			<param name="dataSourceManager">Specifies the DataSourceManager, which manages the current data source.</param>
			<param name="textControl">A TextControl or a ServerTextControl instance containing the merge blocks which are shown in the dialog box.</param>
		</member>
		<member name="T:TXTextControl.DocumentServer.Windows.Forms.InsertMergeBlockDialog">
			<summary>The InsertMergeBlockDialog class allows the user to design and insert a merge block based on the currently selected master table.</summary>
		</member>
		<member name="M:TXTextControl.DocumentServer.Windows.Forms.InsertMergeBlockDialog.#ctor(DocumentServer.DataSources.DataSourceManager,System.Object)">
			<summary>Creates a InsertMergeBlockDialog object for the specified DocumentServer.DataSources.DataSourceManager.</summary>
			<param name="dataSourceManager">Specifies the DataSourceManager, which manages the current data source.</param>
			<param name="textControl">A TextControl or a ServerTextControl instance containing the document into which the merge block is inserted.</param>
		</member>
		<member name="P:TXTextControl.DocumentServer.Windows.Forms.InsertMergeBlockDialog.AddTableHeaderRow">
			<summary>Indicates whether a separate header row has to be added to the table containing the repeating merge block.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Windows.Forms.InsertMergeBlockDialog.BlockType">
			<summary>Indicates the type of the merge block to be created.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Windows.Forms.InsertMergeBlockDialog.HighlightColor">
			<summary>Returns the selected highlight color to be used for the sub text part representing the merge block.</summary>
		</member>
		<member name="P:TXTextControl.DocumentServer.Windows.Forms.InsertMergeBlockDialog.MergeBlockInfo">
			<summary>Returns a MergeBlockInfo object describing the merge block to be inserted.</summary>
		</member>
		<member name="T:TXTextControl.Drawing.Flip">
			<summary>Determines whether and in which form the shape is flip.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.Flip.Horizontal">
			<summary>Flips the shape horizontally.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.Flip.Vertical">
			<summary>Flips the shape vertically.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.Flip.None">
			<summary>The shape is not flipped.</summary>
		</member>
		<member name="T:TXTextControl.Drawing.Selection.Attribute">
			<summary>Determines a certain shape class attribute.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.Selection.Attribute.Angle">
			<summary>Specifies the attribute set through the Shape.Angle property.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.Selection.Attribute.AutoSize">
			<summary>Specifies the attribute set through the Shape.AutoSize property.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.Selection.Attribute.CanFitToCanvas">
			<summary>Specifies the attribute set through the Shape.CanFitToCanvas property.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.Selection.Attribute.FillColor">
			<summary>Specifies the attribute set through the Shape.ShapeFill.Color property.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.Selection.Attribute.FlipHorizontal">
			<summary>Specifies the horizontal attribute set through the Shape.Flip property.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.Selection.Attribute.FlipVertical">
			<summary>Specifies the vertical attribute set through the Shape.Flip property.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.Selection.Attribute.Movable">
			<summary>Specifies the attribute set through the Shape.Movable property.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.Selection.Attribute.LineColor">
			<summary>Specifies the attribute set through the Shape.ShapeOutline.Color property.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.Selection.Attribute.LineWidth">
			<summary>Specifies the attribute set through the Shape.ShapeOutline.Width property.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.Selection.Attribute.LocationX">
			<summary>Specifies the x attribute set through the Shape.Location.X property.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.Selection.Attribute.LocationY">
			<summary>Specifies the y attribute set through the Shape.Location.Y property.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.Selection.Attribute.Sizable">
			<summary>Specifies the attribute set through the Shape.Sizable property.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.Selection.Attribute.SizeHeight">
			<summary>Specifies the height attribute set through the Shape.Size.Height property.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.Selection.Attribute.SizeWidth">
			<summary>Specifies the width attribute set through the Shape.Size.Width property.</summary>
		</member>
		<member name="T:TXTextControl.Drawing.ShapeCollection.AddStyle">
			<summary>Determines the location and size in which a shape is added to the TX Drawing Control.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeCollection.AddStyle.Fill">
			<summary>The shape fills the complete control, no matter which location and size was defined before.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeCollection.AddStyle.MouseCreation">
			<summary>The shape is added on the next mouse up handling and gets the bounds which are defined by the previous mouse down click and the following mouse movement. If a considering side value is less than 150 twips, the side gets a length of 1134 twips.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeCollection.AddStyle.None">
			<summary>No specific style is set. The shape is located at its defined location with its defined size.</summary>
		</member>
		<member name="T:TXTextControl.Drawing.ShapeType">
			<summary>Determines the type a shape can have.</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Line">
			<summary>Line Shape. When the item is serialized out as xml, its value is "line".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.LineInverse">
			<summary>Line Inverse Shape. When the item is serialized out as xml, its value is "lineInv".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Triangle">
			<summary>Triangle Shape. When the item is serialized out as xml, its value is "triangle".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.RightTriangle">
			<summary>Right Triangle Shape. When the item is serialized out as xml, its value is "rtTriangle".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Rectangle">
			<summary>Rectangle Shape. When the item is serialized out as xml, its value is "rect".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Diamond">
			<summary>Diamond Shape. When the item is serialized out as xml, its value is "diamond".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Parallelogram">
			<summary>Parallelogram Shape. When the item is serialized out as xml, its value is "parallelogram".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Trapezoid">
			<summary>Trapezoid Shape. When the item is serialized out as xml, its value is "trapezoid".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.NonIsoscelesTrapezoid">
			<summary>Non-Isosceles Trapezoid Shape. When the item is serialized out as xml, its value is "nonIsoscelesTrapezoid".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Pentagon">
			<summary>Pentagon Shape. When the item is serialized out as xml, its value is "pentagon".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Hexagon">
			<summary>Hexagon Shape. When the item is serialized out as xml, its value is "hexagon".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Heptagon">
			<summary>Heptagon Shape. When the item is serialized out as xml, its value is "heptagon".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Octagon">
			<summary>Octagon Shape. When the item is serialized out as xml, its value is "octagon".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Decagon">
			<summary>Decagon Shape. When the item is serialized out as xml, its value is "decagon".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Dodecagon">
			<summary>Dodecagon Shape. When the item is serialized out as xml, its value is "dodecagon".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Star4">
			<summary>Four Pointed Star Shape. When the item is serialized out as xml, its value is "star4".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Star5">
			<summary>Five Pointed Star Shape. When the item is serialized out as xml, its value is "star5".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Star6">
			<summary>Six Pointed Star Shape. When the item is serialized out as xml, its value is "star6".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Star7">
			<summary>Seven Pointed Star Shape. When the item is serialized out as xml, its value is "star7".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Star8">
			<summary>Eight Pointed Star Shape. When the item is serialized out as xml, its value is "star8".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Star10">
			<summary>Ten Pointed Star Shape. When the item is serialized out as xml, its value is "star10".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Star12">
			<summary>Twelve Pointed Star Shape. When the item is serialized out as xml, its value is "star12".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Star16">
			<summary>Sixteen Pointed Star Shape. When the item is serialized out as xml, its value is "star16".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Star24">
			<summary>Twenty Four Pointed Star Shape. When the item is serialized out as xml, its value is "star24".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Star32">
			<summary>Thirty Two Pointed Star Shape. When the item is serialized out as xml, its value is "star32".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.RoundRectangle">
			<summary>Round Corner Rectangle Shape. When the item is serialized out as xml, its value is "roundRect".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Round1Rectangle">
			<summary>One Round Corner Rectangle Shape. When the item is serialized out as xml, its value is "round1Rect".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Round2SameRectangle">
			<summary>Two Same-side Round Corner Rectangle Shape. When the item is serialized out as xml, its value is "round2SameRect".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Round2DiagonalRectangle">
			<summary>Two Diagonal Round Corner Rectangle Shape. When the item is serialized out as xml, its value is "round2DiagRect".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.SnipRoundRectangle">
			<summary>One Snip One Round Corner Rectangle Shape. When the item is serialized out as xml, its value is "snipRoundRect".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Snip1Rectangle">
			<summary>One Snip Corner Rectangle Shape. When the item is serialized out as xml, its value is "snip1Rect".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Snip2SameRectangle">
			<summary>Two Same-side Snip Corner Rectangle Shape. When the item is serialized out as xml, its value is "snip2SameRect".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Snip2DiagonalRectangle">
			<summary>Two Diagonal Snip Corner Rectangle Shape. When the item is serialized out as xml, its value is "snip2DiagRect".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Plaque">
			<summary>Plaque Shape. When the item is serialized out as xml, its value is "plaque".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Ellipse">
			<summary>Ellipse Shape. When the item is serialized out as xml, its value is "ellipse".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Teardrop">
			<summary>Teardrop Shape. When the item is serialized out as xml, its value is "teardrop".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.HomePlate">
			<summary>Home Plate Shape. When the item is serialized out as xml, its value is "homePlate".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Chevron">
			<summary>Chevron Shape. When the item is serialized out as xml, its value is "chevron".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.PieWedge">
			<summary>Pie Wedge Shape. When the item is serialized out as xml, its value is "pieWedge".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Pie">
			<summary>Pie Shape. When the item is serialized out as xml, its value is "pie".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.BlockArc">
			<summary>Block Arc Shape. When the item is serialized out as xml, its value is "blockArc".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Donut">
			<summary>Donut Shape. When the item is serialized out as xml, its value is "donut".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.NoSmoking">
			<summary>No Smoking Shape. When the item is serialized out as xml, its value is "noSmoking".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.RightArrow">
			<summary>Right Arrow Shape. When the item is serialized out as xml, its value is "rightArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.LeftArrow">
			<summary>Left Arrow Shape. When the item is serialized out as xml, its value is "leftArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.UpArrow">
			<summary>Up Arrow Shape. When the item is serialized out as xml, its value is "upArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.DownArrow">
			<summary>Down Arrow Shape. When the item is serialized out as xml, its value is "downArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.StripedRightArrow">
			<summary>Striped Right Arrow Shape. When the item is serialized out as xml, its value is "stripedRightArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.NotchedRightArrow">
			<summary>Notched Right Arrow Shape. When the item is serialized out as xml, its value is "notchedRightArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.BentUpArrow">
			<summary>Bent Up Arrow Shape. When the item is serialized out as xml, its value is "bentUpArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.LeftRightArrow">
			<summary>Left Right Arrow Shape. When the item is serialized out as xml, its value is "leftRightArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.UpDownArrow">
			<summary>Up Down Arrow Shape. When the item is serialized out as xml, its value is "upDownArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.LeftUpArrow">
			<summary>Left Up Arrow Shape. When the item is serialized out as xml, its value is "leftUpArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.LeftRightUpArrow">
			<summary>Left Right Up Arrow Shape. When the item is serialized out as xml, its value is "leftRightUpArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.QuadArrow">
			<summary>Quad-Arrow Shape. When the item is serialized out as xml, its value is "quadArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.LeftArrowCallout">
			<summary>Callout Left Arrow Shape. When the item is serialized out as xml, its value is "leftArrowCallout".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.RightArrowCallout">
			<summary>Callout Right Arrow Shape. When the item is serialized out as xml, its value is "rightArrowCallout".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.UpArrowCallout">
			<summary>Callout Up Arrow Shape. When the item is serialized out as xml, its value is "upArrowCallout".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.DownArrowCallout">
			<summary>Callout Down Arrow Shape. When the item is serialized out as xml, its value is "downArrowCallout".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.LeftRightArrowCallout">
			<summary>Callout Left Right Arrow Shape. When the item is serialized out as xml, its value is "leftRightArrowCallout".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.UpDownArrowCallout">
			<summary>Callout Up Down Arrow Shape. When the item is serialized out as xml, its value is "upDownArrowCallout".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.QuadArrowCallout">
			<summary>Callout Quad-Arrow Shape. When the item is serialized out as xml, its value is "quadArrowCallout".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.BentArrow">
			<summary>Bent Arrow Shape. When the item is serialized out as xml, its value is "bentArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.UTurnArrow">
			<summary>U-Turn Arrow Shape. When the item is serialized out as xml, its value is "uturnArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.CircularArrow">
			<summary>Circular Arrow Shape. When the item is serialized out as xml, its value is "circularArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.LeftCircularArrow">
			<summary>Left Circular Arrow Shape. When the item is serialized out as xml, its value is "leftCircularArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.LeftRightCircularArrow">
			<summary>Left Right Circular Arrow Shape. When the item is serialized out as xml, its value is "leftRightCircularArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.CurvedRightArrow">
			<summary>Curved Right Arrow Shape. When the item is serialized out as xml, its value is "curvedRightArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.CurvedLeftArrow">
			<summary>Curved Left Arrow Shape. When the item is serialized out as xml, its value is "curvedLeftArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.CurvedUpArrow">
			<summary>Curved Up Arrow Shape. When the item is serialized out as xml, its value is "curvedUpArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.CurvedDownArrow">
			<summary>Curved Down Arrow Shape. When the item is serialized out as xml, its value is "curvedDownArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.SwooshArrow">
			<summary>Swoosh Arrow Shape. When the item is serialized out as xml, its value is "swooshArrow".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Cube">
			<summary>Cube Shape. When the item is serialized out as xml, its value is "cube".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Can">
			<summary>Can Shape. When the item is serialized out as xml, its value is "can".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.LightningBolt">
			<summary>Lightning Bolt Shape. When the item is serialized out as xml, its value is "lightningBolt".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Heart">
			<summary>Heart Shape. When the item is serialized out as xml, its value is "heart".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Sun">
			<summary>Sun Shape. When the item is serialized out as xml, its value is "sun".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Moon">
			<summary>Moon Shape. When the item is serialized out as xml, its value is "moon".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.SmileyFace">
			<summary>Smiley Face Shape. When the item is serialized out as xml, its value is "smileyFace".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.IrregularSeal1">
			<summary>Irregular Seal 1 Shape. When the item is serialized out as xml, its value is "irregularSeal1".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.IrregularSeal2">
			<summary>Irregular Seal 2 Shape. When the item is serialized out as xml, its value is "irregularSeal2".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FoldedCorner">
			<summary>Folded Corner Shape. When the item is serialized out as xml, its value is "foldedCorner".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Bevel">
			<summary>Bevel Shape. When the item is serialized out as xml, its value is "bevel".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Frame">
			<summary>Frame Shape. When the item is serialized out as xml, its value is "frame".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.HalfFrame">
			<summary>Half Frame Shape. When the item is serialized out as xml, its value is "halfFrame".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Corner">
			<summary>Corner Shape. When the item is serialized out as xml, its value is "corner".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.DiagonalStripe">
			<summary>Diagonal Stripe Shape. When the item is serialized out as xml, its value is "diagStripe".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Chord">
			<summary>Chord Shape. When the item is serialized out as xml, its value is "chord".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Arc">
			<summary>Curved Arc Shape. When the item is serialized out as xml, its value is "arc".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.LeftBracket">
			<summary>Left Bracket Shape. When the item is serialized out as xml, its value is "leftBracket".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.RightBracket">
			<summary>Right Bracket Shape. When the item is serialized out as xml, its value is "rightBracket".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.LeftBrace">
			<summary>Left Brace Shape. When the item is serialized out as xml, its value is "leftBrace".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.RightBrace">
			<summary>Right Brace Shape. When the item is serialized out as xml, its value is "rightBrace".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.BracketPair">
			<summary>Bracket Pair Shape. When the item is serialized out as xml, its value is "bracketPair".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.BracePair">
			<summary>Brace Pair Shape. When the item is serialized out as xml, its value is "bracePair".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.StraightConnector1">
			<summary>Straight Connector 1 Shape. When the item is serialized out as xml, its value is "straightConnector1".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.BentConnector2">
			<summary>Bent Connector 2 Shape. When the item is serialized out as xml, its value is "bentConnector2".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.BentConnector3">
			<summary>Bent Connector 3 Shape. When the item is serialized out as xml, its value is "bentConnector3".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.BentConnector4">
			<summary>Bent Connector 4 Shape. When the item is serialized out as xml, its value is "bentConnector4".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.BentConnector5">
			<summary>Bent Connector 5 Shape. When the item is serialized out as xml, its value is "bentConnector5".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.CurvedConnector2">
			<summary>Curved Connector 2 Shape. When the item is serialized out as xml, its value is "curvedConnector2".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.CurvedConnector3">
			<summary>Curved Connector 3 Shape. When the item is serialized out as xml, its value is "curvedConnector3".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.CurvedConnector4">
			<summary>Curved Connector 4 Shape. When the item is serialized out as xml, its value is "curvedConnector4".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.CurvedConnector5">
			<summary>Curved Connector 5 Shape. When the item is serialized out as xml, its value is "curvedConnector5".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Callout1">
			<summary>Callout 1 Shape. When the item is serialized out as xml, its value is "callout1".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Callout2">
			<summary>Callout 2 Shape. When the item is serialized out as xml, its value is "callout2".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Callout3">
			<summary>Callout 3 Shape. When the item is serialized out as xml, its value is "callout3".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.AccentCallout1">
			<summary>Callout 1 Shape. When the item is serialized out as xml, its value is "accentCallout1".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.AccentCallout2">
			<summary>Callout 2 Shape. When the item is serialized out as xml, its value is "accentCallout2".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.AccentCallout3">
			<summary>Callout 3 Shape. When the item is serialized out as xml, its value is "accentCallout3".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.BorderCallout1">
			<summary>Callout 1 with Border Shape. When the item is serialized out as xml, its value is "borderCallout1".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.BorderCallout2">
			<summary>Callout 2 with Border Shape. When the item is serialized out as xml, its value is "borderCallout2".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.BorderCallout3">
			<summary>Callout 3 with Border Shape. When the item is serialized out as xml, its value is "borderCallout3".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.AccentBorderCallout1">
			<summary>Callout 1 with Border and Accent Shape. When the item is serialized out as xml, its value is "accentBorderCallout1".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.AccentBorderCallout2">
			<summary>Callout 2 with Border and Accent Shape. When the item is serialized out as xml, its value is "accentBorderCallout2".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.AccentBorderCallout3">
			<summary>Callout 3 with Border and Accent Shape. When the item is serialized out as xml, its value is "accentBorderCallout3".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.WedgeRectangleCallout">
			<summary>Callout Wedge Rectangle Shape. When the item is serialized out as xml, its value is "wedgeRectCallout".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.WedgeRoundRectangleCallout">
			<summary>Callout Wedge Round Rectangle Shape. When the item is serialized out as xml, its value is "wedgeRoundRectCallout".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.WedgeEllipseCallout">
			<summary>Callout Wedge Ellipse Shape. When the item is serialized out as xml, its value is "wedgeEllipseCallout".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.CloudCallout">
			<summary>Callout Cloud Shape. When the item is serialized out as xml, its value is "cloudCallout".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Cloud">
			<summary>Cloud Shape. When the item is serialized out as xml, its value is "cloud".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Ribbon">
			<summary>Ribbon Shape. When the item is serialized out as xml, its value is "ribbon".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Ribbon2">
			<summary>Ribbon 2 Shape. When the item is serialized out as xml, its value is "ribbon2".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.EllipseRibbon">
			<summary>Ellipse Ribbon Shape. When the item is serialized out as xml, its value is "ellipseRibbon".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.EllipseRibbon2">
			<summary>Ellipse Ribbon 2 Shape. When the item is serialized out as xml, its value is "ellipseRibbon2".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.LeftRightRibbon">
			<summary>Left Right Ribbon Shape. When the item is serialized out as xml, its value is "leftRightRibbon".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.VerticalScroll">
			<summary>Vertical Scroll Shape. When the item is serialized out as xml, its value is "verticalScroll".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.HorizontalScroll">
			<summary>Horizontal Scroll Shape. When the item is serialized out as xml, its value is "horizontalScroll".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Wave">
			<summary>Wave Shape. When the item is serialized out as xml, its value is "wave".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.DoubleWave">
			<summary>Double Wave Shape. When the item is serialized out as xml, its value is "doubleWave".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Plus">
			<summary>Plus Shape. When the item is serialized out as xml, its value is "plus".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartProcess">
			<summary>Process Flow Shape. When the item is serialized out as xml, its value is "flowChartProcess".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartDecision">
			<summary>Decision Flow Shape. When the item is serialized out as xml, its value is "flowChartDecision".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartInputOutput">
			<summary>Input Output Flow Shape. When the item is serialized out as xml, its value is "flowChartInputOutput".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartPredefinedProcess">
			<summary>Predefined Process Flow Shape. When the item is serialized out as xml, its value is "flowChartPredefinedProcess".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartInternalStorage">
			<summary>Internal Storage Flow Shape. When the item is serialized out as xml, its value is "flowChartInternalStorage".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartDocument">
			<summary>Document Flow Shape. When the item is serialized out as xml, its value is "flowChartDocument".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartMultidocument">
			<summary>Multi-Document Flow Shape. When the item is serialized out as xml, its value is "flowChartMultidocument".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartTerminator">
			<summary>Terminator Flow Shape. When the item is serialized out as xml, its value is "flowChartTerminator".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartPreparation">
			<summary>Preparation Flow Shape. When the item is serialized out as xml, its value is "flowChartPreparation".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartManualInput">
			<summary>Manual Input Flow Shape. When the item is serialized out as xml, its value is "flowChartManualInput".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartManualOperation">
			<summary>Manual Operation Flow Shape. When the item is serialized out as xml, its value is "flowChartManualOperation".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartConnector">
			<summary>Connector Flow Shape. When the item is serialized out as xml, its value is "flowChartConnector".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartPunchedCard">
			<summary>Punched Card Flow Shape. When the item is serialized out as xml, its value is "flowChartPunchedCard".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartPunchedTape">
			<summary>Punched Tape Flow Shape. When the item is serialized out as xml, its value is "flowChartPunchedTape".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartSummingJunction">
			<summary>Summing Junction Flow Shape. When the item is serialized out as xml, its value is "flowChartSummingJunction".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartOr">
			<summary>Or Flow Shape. When the item is serialized out as xml, its value is "flowChartOr".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartCollate">
			<summary>Collate Flow Shape. When the item is serialized out as xml, its value is "flowChartCollate".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartSort">
			<summary>Sort Flow Shape. When the item is serialized out as xml, its value is "flowChartSort".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartExtract">
			<summary>Extract Flow Shape. When the item is serialized out as xml, its value is "flowChartExtract".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartMerge">
			<summary>Merge Flow Shape. When the item is serialized out as xml, its value is "flowChartMerge".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartOfflineStorage">
			<summary>Offline Storage Flow Shape. When the item is serialized out as xml, its value is "flowChartOfflineStorage".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartOnlineStorage">
			<summary>Online Storage Flow Shape. When the item is serialized out as xml, its value is "flowChartOnlineStorage".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartMagneticTape">
			<summary>Magnetic Tape Flow Shape. When the item is serialized out as xml, its value is "flowChartMagneticTape".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartMagneticDisk">
			<summary>Magnetic Disk Flow Shape. When the item is serialized out as xml, its value is "flowChartMagneticDisk".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartMagneticDrum">
			<summary>Magnetic Drum Flow Shape. When the item is serialized out as xml, its value is "flowChartMagneticDrum".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartDisplay">
			<summary>Display Flow Shape. When the item is serialized out as xml, its value is "flowChartDisplay".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartDelay">
			<summary>Delay Flow Shape. When the item is serialized out as xml, its value is "flowChartDelay".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartAlternateProcess">
			<summary>Alternate Process Flow Shape. When the item is serialized out as xml, its value is "flowChartAlternateProcess".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.FlowChartOffpageConnector">
			<summary>Off-Page Connector Flow Shape. When the item is serialized out as xml, its value is "flowChartOffpageConnector".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.ActionButtonBlank">
			<summary>Blank Button Shape. When the item is serialized out as xml, its value is "actionButtonBlank".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.ActionButtonHome">
			<summary>Home Button Shape. When the item is serialized out as xml, its value is "actionButtonHome".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.ActionButtonHelp">
			<summary>Help Button Shape. When the item is serialized out as xml, its value is "actionButtonHelp".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.ActionButtonInformation">
			<summary>Information Button Shape. When the item is serialized out as xml, its value is "actionButtonInformation".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.ActionButtonForwardNext">
			<summary>Forward or Next Button Shape. When the item is serialized out as xml, its value is "actionButtonForwardNext".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.ActionButtonBackPrevious">
			<summary>Back or Previous Button Shape. When the item is serialized out as xml, its value is "actionButtonBackPrevious".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.ActionButtonEnd">
			<summary>End Button Shape. When the item is serialized out as xml, its value is "actionButtonEnd".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.ActionButtonBeginning">
			<summary>Beginning Button Shape. When the item is serialized out as xml, its value is "actionButtonBeginning".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.ActionButtonReturn">
			<summary>Return Button Shape. When the item is serialized out as xml, its value is "actionButtonReturn".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.ActionButtonDocument">
			<summary>Document Button Shape. When the item is serialized out as xml, its value is "actionButtonDocument".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.ActionButtonSound">
			<summary>Sound Button Shape. When the item is serialized out as xml, its value is "actionButtonSound".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.ActionButtonMovie">
			<summary>Movie Button Shape. When the item is serialized out as xml, its value is "actionButtonMovie".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Gear6">
			<summary>Gear 6 Shape. When the item is serialized out as xml, its value is "gear6".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Gear9">
			<summary>Gear 9 Shape. When the item is serialized out as xml, its value is "gear9".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.Funnel">
			<summary>Funnel Shape. When the item is serialized out as xml, its value is "funnel".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.MathPlus">
			<summary>Plus Math Shape. When the item is serialized out as xml, its value is "mathPlus".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.MathMinus">
			<summary>Minus Math Shape. When the item is serialized out as xml, its value is "mathMinus".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.MathMultiply">
			<summary>Multiply Math Shape. When the item is serialized out as xml, its value is "mathMultiply".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.MathDivide">
			<summary>Divide Math Shape. When the item is serialized out as xml, its value is "mathDivide".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.MathEqual">
			<summary>Equal Math Shape. When the item is serialized out as xml, its value is "mathEqual".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.MathNotEqual">
			<summary>Not Equal Math Shape. When the item is serialized out as xml, its value is "mathNotEqual".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.CornerTabs">
			<summary>Corner Tabs Shape. When the item is serialized out as xml, its value is "cornerTabs".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.SquareTabs">
			<summary>Square Tabs Shape. When the item is serialized out as xml, its value is "squareTabs".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.PlaqueTabs">
			<summary>Plaque Tabs Shape. When the item is serialized out as xml, its value is "plaqueTabs".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.ChartX">
			<summary>Chart X Shape. When the item is serialized out as xml, its value is "chartX".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.ChartStar">
			<summary>Chart Star Shape. When the item is serialized out as xml, its value is "chartStar".</summary>
		</member>
		<member name="F:TXTextControl.Drawing.ShapeType.ChartPlus">
			<summary>Chart Plus Shape. When the item is serialized out as xml, its value is "chartPlus".</summary>
		</member>
		<member name="T:TXTextControl.Drawing.MenuItem">
			<summary>The Drawing.MenuItem class represents a bindable Windows Forms ToolStripMenuItem.</summary>
		</member>
		<member name="T:TXTextControl.Drawing.Selection">
			<summary>The Drawing.Selection class represents all selected shapes.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.Selection.BringForward">
			<summary>Increases the selected shapes' levels by one. The method has no effect if the CanBringForward property returns false.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.Selection.BringToFront">
			<summary>Displays the selected shape as the uppermost shape of all shapes. The method has no effect if the CanBringToFront property returns false.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.Selection.SendBackward">
			<summary>Decreases the selected shapes' levels by one. The method has no effect if the CanSendBackward property returns false.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.Selection.SendToBack">
			<summary>Displays the selected shape as the lowest shape of all shapes. The method has no effect if the CanSendToBack property returns false.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.Selection.IsCommonValueSelected(Drawing.Selection.Attribute)">
			<summary>Informs about whether an attribute from the Drawing.Selection.Attribute enumeration has the same value for the complete shapes selection.</summary>
			<param name="attribute">Specifies a possible value from the Drawing.Selection.Attribute enumeration.</param>
		</member>
		<member name="P:TXTextControl.Drawing.Selection.CanBringForward">
			<summary>Gets value that indicates whether the selected shapes' levels can be increased by one.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Selection.CanBringToFront">
			<summary>Gets value that indicates whether the selected shape can be displayed as the uppermost shape of all shapes.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Selection.CanSendBackward">
			<summary>Gets value that indicates whether the selected shapes' levels can be decreased by one.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Selection.CanSendToBack">
			<summary>Gets value that indicates whether the selected shape can be displayed as the lowest shape of all shapes.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Selection.Shapes">
			<summary>Gets or set the selected shapes .</summary>
		</member>
		<member name="T:TXTextControl.Drawing.Shape">
			<summary>The Drawing.Shape class represents a shape which can be displayed inside the TX Drawing Control.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.Shape.#ctor">
			<summary>Creates a new instance of the Shape class by the ShapeType type ShapeType.Custom.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.Shape.#ctor(Drawing.ShapeType)">
			<summary>Initializes a new instance of the Shape class by a specific ShapeType type.</summary>
			<param name="type">Specifies the shape's type.</param>
		</member>
		<member name="M:TXTextControl.Drawing.Shape.FitToCanvas">
			<summary>Expands the shape to the control's canvas size. The method has no effect if the CanFitToCanvas property returns false.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Shape.Angle">
			<summary>Gets or sets the angle of the shape inside the TX Drawing Control.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Shape.AutoSize">
			<summary>Gets or sets a value indicating whether the shape is automatically resized with the TX Drawing Control.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Shape.Bounds">
			<summary>Gets or sets the bounding rectangle of the shape.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Shape.CanFitToCanvas">
			<summary>Gets a value which indicates whether the FitToCanvas method can be used or not.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Shape.Flip">
			<summary>Gets or sets whether and in what form the shape is flipped.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Shape.Index">
			<summary>Represents the index of the shape inside control's shape collection.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Shape.Movable">
			<summary>Gets or sets a value which indicates whether the shape is movable or not.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Shape.IsSelected">
			<summary>Gets a value which indicates whether the shape is selected or not.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Shape.Sizable">
			<summary>Gets or sets a value which indicates whether the shape is sizable or not.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Shape.Location">
			<summary>Gets or sets shape's current location.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Shape.ShapeFill">
			<summary>Gets the shape's fill properties.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Shape.ShapeOutline">
			<summary>Gets the shape's outline properties.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Shape.Size">
			<summary>Gets or sets the shape's current size.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Shape.Type">
			<summary>Gets or sets the shape's type.</summary>
		</member>
		<member name="T:TXTextControl.Drawing.Shape.Fill">
			<summary>The Drawing.Shape.Fill class determines the fill properties of a shape.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Shape.Fill.Color">
			<summary>Gets or sets the shape's fill color.</summary>
		</member>
		<member name="T:TXTextControl.Drawing.Shape.Outline">
			<summary>The Drawing.Shape.Outline class determines the line properties of a shape.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Shape.Outline.Color">
			<summary>Gets or sets the shape's line color.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.Shape.Outline.Width">
			<summary>Gets or sets the shape's line width.</summary>
		</member>
		<member name="T:TXTextControl.Drawing.ShapeCollection">
			<summary>An instance of the ShapeCollection class contains all displayed shapes represented through objects of type Shape.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.ShapeCollection.Add(Drawing.Shape)">
			<summary>Adds an object of the type Shape to the collection. The shape is drawn at its defined location with its defined size.</summary>
			<param name="shape">Specifies the shape.</param>
		</member>
		<member name="M:TXTextControl.Drawing.ShapeCollection.Add(Drawing.Shape,Drawing.ShapeCollection.AddStyle)">
			<summary>Adds an object of the type Shape to the collection. The addStyle parameter determines the location and size in which the shape is added.</summary>
			<param name="shape">Specifies the shape.</param>
			<param name="addStyle">Specifies style how to add the shape to the collection.</param>
		</member>
		<member name="M:TXTextControl.Drawing.ShapeCollection.Insert(System.Int32,Drawing.Shape)">
			<summary>Inserts an object of the type Shape to the collection at a specified index.</summary>
			<param name="index">Specifies the index where to insert the speicified shape.</param>
			<param name="shape">Specifies the shape to insert at the specified index.</param>
		</member>
		<member name="M:TXTextControl.Drawing.ShapeCollection.Item">
			<summary>Gets an object of type Shape from the collection. This property is the indexer for the ShapeCollection class.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.ShapeCollection.Remove(Drawing.Shape)">
			<summary>Removes an object of the type Shape from the collection.</summary>
			<param name="shape">Specifies the shape to remove.</param>
		</member>
		<member name="T:TXTextControl.Drawing.ShapeEventArgs">
			<summary>The ShapeEventArgs class provides data for all events that occur with shapes.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.ShapeEventArgs.Shape">
			<summary>Gets an object of type Shape that represents the shape which causes the event.</summary>
		</member>
		<member name="T:TXTextControl.Drawing.ShapesContextMenuStrip">
			<summary>The Drawing.ShapesContextMenuStrip class represents the default context menu of the Windows Forms TXDrawingControl.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.ShapesContextMenuStrip.SelectedShapesMenuItems">
			<summary>Returns an array of System.Windows.Forms.ToolStripItem objects that represents those items which are displayed in the context menu strip when the control is right clicked inside a shape.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.ShapesContextMenuStrip.StandardMenuItems">
			<summary>Returns an array of System.Windows.Forms.ToolStripItem objects that represents those items which are displayed in the context menu strip when the control is right clicked outside a shape.</summary>
		</member>
		<member name="T:TXTextControl.Drawing.TXDrawingControl">
			<summary>The TXDrawingControl class implements a Windows Forms control with features to draw custom or predefined shapes.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.TXDrawingControl.#ctor">
			<summary>Initializes a new instance of the TXDrawingControl class.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.TXDrawingControl.ClearUndo">
			<summary>Clears the undo buffer of the TX Drawing Control.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.TXDrawingControl.Copy">
			<summary>Copies the current selected shapes of the TX Drawing Control to the Clipboard.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.TXDrawingControl.Cut">
			<summary>Moves the current selected shapes of the TX Drawing Control to the Clipboard.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.TXDrawingControl.FormatShapesDialog">
			<summary>Opens a dialog to format selected shapes.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.TXDrawingControl.Load(System.IO.Stream)">
			<summary>Loads shapes data into the TX Drawing Control from a specified object of type System.IO.Stream.</summary>
			<param name="stream">Specifies an object of type System.IO.Stream the data is loaded from.</param>
		</member>
		<member name="M:TXTextControl.Drawing.TXDrawingControl.Paste">
			<summary>Pastes the content of the clipboard into the TX Drawing Control</summary>
		</member>
		<member name="M:TXTextControl.Drawing.TXDrawingControl.PrintPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
			<summary>Renders only the displayed shapes on the specified System.Drawing.Graphics object. No activated UI elements are rendered.</summary>
			<param name="graphics">Specifies the object of type System.Drawing.Graphics the displayed shapes are rendered to.</param>
			<param name="position">Specifies the position to draw on the specified System.Drawing.Graphics object.</param>
		</member>
		<member name="M:TXTextControl.Drawing.TXDrawingControl.PrintPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
			<summary>Renders the displayed shapes on the specified System.Drawing.Graphics object with or without activated UI elements.</summary>
			<param name="graphics">Specifies the object of type System.Drawing.Graphics the displayed shapes are rendered to.</param>
			<param name="position">Specifies the position to draw on the specified System.Drawing.Graphics object.</param>
			<param name="showUIElements">Specifies whether the activated UI elements are rendered on the specified System.Drawing.Graphics object or not.</param>
		</member>
		<member name="M:TXTextControl.Drawing.TXDrawingControl.Redo">
			<summary>Redoes the last TX Drawing Control operation.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.TXDrawingControl.Save(System.IO.Stream)">
			<summary>Saves the shapes data to the given object of type System.IO.Stream.</summary>
			<param name="stream">Specifies an object of type System.IO.Stream the data is saved to.</param>
		</member>
		<member name="M:TXTextControl.Drawing.TXDrawingControl.SaveImage(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
			<summary>Saves the displayed shapes as an image to the specified object of type System.IO.Stream.</summary>
			<param name="imageStream">Specifies an object of type System.IO.Stream the image is saved to.</param>
			<param name="format">Specifies the format used to save the image.</param>
		</member>
		<member name="M:TXTextControl.Drawing.TXDrawingControl.SaveImage(System.String,System.Drawing.Imaging.ImageFormat)">
			<summary>Saves the displayed shapes as an image to the specified file using the specified format.</summary>
			<param name="imageFileName">Specifies a file the image is saved to.</param>
			<param name="format">Specifies the format used to save the image.</param>
		</member>
		<member name="M:TXTextControl.Drawing.TXDrawingControl.SelectAll">
			<summary>Selects all shapes in the TX Drawing Control.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.TXDrawingControl.SizeToContent">
			<summary>If any changes of the the displayed shapes' visible bounds require an adaption of the TX Drawing Control bounds, the size and/or location of the control is expanded respectively decreased by the considering value of the considering shape's side(s). The method returns an array of doubles which represent the effected alteration for each control's side (left, top, right, bottom) in Twips.</summary>
		</member>
		<member name="M:TXTextControl.Drawing.TXDrawingControl.Undo">
			<summary>Undoes the last edit operation in the TX Drawing Control.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.TXDrawingControl.BackColor">
			<summary>Gets or sets the TX Drawing Control's back color.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.TXDrawingControl.BorderColor">
			<summary>Gets or sets the TX Drawing Control's border line color.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.TXDrawingControl.BorderWidth">
			<summary>Gets or sets the TX Drawing Control's border line width.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.TXDrawingControl.CanCopy">
			<summary>Informs whether shapes are selected which can be copied to the internal clipboard.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.TXDrawingControl.CanPaste">
			<summary>Informs whether the internal clipboard contains shapes that can be pasted into the TX Drawing Control.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.TXDrawingControl.CanRedo">
			<summary>Informs whether an operation can be re-done using the Redo method.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.TXDrawingControl.CanUndo">
			<summary>Gets a value indicating whether the user can undo the previous operation in the TX Drawing Control.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.TXDrawingControl.IsCanvasVisible">
			<summary>Gets a value whether the TX Drawing Control is interpreted as canvas or not.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.TXDrawingControl.Selection">
			<summary>Gets an object of type Drawing.Selection that represents the current selected shapes inside the TX Drawing Control.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.TXDrawingControl.Shapes">
			<summary>Gets an object of type ShapeCollection that represents those shapes which are displayed inside the TX Drawing Control.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.TXDrawingControl.ZoomFactor">
			<summary>Gets or sets the zoom factor, in percent, for the TX Drawing Control.</summary>
		</member>
		<member name="E:TXTextControl.Drawing.TXDrawingControl.AdaptBounds">
			<summary>Indicates that the visible bounds of the displayed shapes have been changed (by changing the shape's angle, outline width, yellow adjust rectangles or the control's border width) in so far that the control requires an update of its bounds.</summary>
		</member>
		<member name="E:TXTextControl.Drawing.TXDrawingControl.Changed">
			<summary>Indicates that the number or formatting of the displayed shapes has been changed.</summary>
		</member>
		<member name="E:TXTextControl.Drawing.TXDrawingControl.ShapeAdjusted">
			<summary>Occurs when a shape has been adjusted by using its yellow adjust rectangle.</summary>
		</member>
		<member name="E:TXTextControl.Drawing.TXDrawingControl.ShapeClicked">
			<summary>Occurs when a shape has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.Drawing.TXDrawingControl.ShapeCreated">
			<summary>Occurs when a new shape has been created.</summary>
		</member>
		<member name="E:TXTextControl.Drawing.TXDrawingControl.ShapeDeleted">
			<summary>Occurs when a shape has been deleted from the TX Drawing Control's shapes collection.</summary>
		</member>
		<member name="E:TXTextControl.Drawing.TXDrawingControl.ShapeDeselected">
			<summary>Occurs when a shape has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.Drawing.TXDrawingControl.ShapeFlipped">
			<summary>Occurs when a shape has been flipped.</summary>
		</member>
		<member name="E:TXTextControl.Drawing.TXDrawingControl.ShapeFormatChanged">
			<summary>Occurs when shape formatting attributes which cannot be handled with the built-in mouse interface have been changed.</summary>
		</member>
		<member name="E:TXTextControl.Drawing.TXDrawingControl.ShapeMoved">
			<summary>Occurs when a shape has been moved with the built-in mouse interface.</summary>
		</member>
		<member name="E:TXTextControl.Drawing.TXDrawingControl.ShapeSelected">
			<summary>Occurs when a shape has been selected.</summary>
		</member>
		<member name="E:TXTextControl.Drawing.TXDrawingControl.ShapeSized">
			<summary>Occurs when a shape has been sized with the built-in mouse interface.</summary>
		</member>
		<member name="E:TXTextControl.Drawing.TXDrawingControl.ViewChanged">
			<summary>Occurs when UI manipulations such as shape moving or selection changing have caused the view to change.</summary>
		</member>
		<member name="T:TXTextControl.Drawing.ViewChangedEventArgs">
			<summary>The ViewChangedEventArgs class provides data for the TXDrawingControl.ViewChanged event.</summary>
		</member>
		<member name="P:TXTextControl.Drawing.ViewChangedEventArgs.ClipRectangle">
			<summary>Gets an object of type System.Drawing.Rectangle that represents the region where the control view is changed by UI editing.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.CaretStateEventArgs">
			<summary>The CaretStateEventArgs class provides data about the state of the caret, such as position, size and visibility.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.CaretStateEventArgs.Direction">
			<summary>Gets the caret's direction.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.CaretStateEventArgs.Location">
			<summary>Gets the caret's location in pixels.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.CaretStateEventArgs.Size">
			<summary>Gets the caret's visibility.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.CaretStateEventArgs.Visibility">
			<summary>Gets the caret's visibility.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.DialogViewGenerator">
			<summary>An instance of the DialogViewGenerator class can be used to visualize a built-in dialog box through an image.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.DialogViewGenerator.ActivationState">
			<summary>Gets or sets a value indicating the dialog box's activation state.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.DialogViewGenerator.Caption">
			<summary>Gets the dialog box's caption.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.DialogViewGenerator.UserInput">
			<summary>Gets the dialog box's UserInput object, which can be used to inform the dialog box about user input.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.DialogViewGenerator.View">
			<summary>Gets the dialog box's View object, which informs about view changes and provides an image of the dialog box's current state.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.DialogViewGenerator.CaretStateChanged">
			<summary>Occurs when the state of the caret (size, position, visibility) has been changed.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.DialogViewGenerator.Closed">
			<summary>Occurs after the dialog box has been closed through clicking the Ok or Cancel button.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.DialogViewGenerator.ShowDialogBox">
			<summary>Occurs when the dialog box should show a further dialog box.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.DialogViewGenerator.ShowErrorMessage">
			<summary>Occurs when the dialog box should show an error message.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.DocumentSizeChangedEventArgs">
			<summary>The DocumentSizeChangedEventArgs class informs about a changed document size.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.DocumentSizeChangedEventArgs.Height">
			<summary>Gets the document's height, in twips.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.DocumentSizeChangedEventArgs.Width">
			<summary>Gets the document's width, in twips.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.DrawShapeEventArgs">
			<summary>The DrawShapeEventArgs class contains information to draw additional parts necessary when the user interacts with the document.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.DrawShapeEventArgs.Shape">
			<summary>Determines a shape to be drawn during the DrawShape event.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.DrawShapeEventArgs.Shape.DropCaret">
			<summary>Determines the rectangle indicating the text input position where text is inserted during a drag and drop operation.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.DrawShapeEventArgs.Shape.MoveAndSizeFrame">
			<summary>Determines the frame which is drawn when an image or textframe is moved or sized.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.DrawShapeEventArgs.Shape.TableBorderMovingLine">
			<summary>Determines the line which is drawn when the width of a table cell is changed. This shape's horizontal size is set to 1 pixel.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.DrawShapeEventArgs.Kind">
			<summary>Gets the kind of the shape.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.DrawShapeEventArgs.Location">
			<summary>Gets the location of the shape, in pixels.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.DrawShapeEventArgs.Size">
			<summary>Gets the size of the shape, in pixels.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.MenuItem">
			<summary>The MenuItem class provides all data necessary to visualize a menu item, such as the menu's text and the menu's image.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.MenuItem.Execute">
			<summary>Executes the menu item. When the menu item opens a dialog box, the method creates and returns a DialogViewGenerator object. Otherwise it performs changes in the document.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.MenuItem.Checked">
			<summary>Gets a value indicating whether the menu item is checked.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.MenuItem.Enabled">
			<summary>Gets a value indicating whether the menu item is enabled.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.MenuItem.Image">
			<summary>Gets the menu item's image.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.MenuItem.Items">
			<summary>Gets an array of ServerVisualization.MenuItem objects specifying a submenu.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.MenuItem.Text">
			<summary>Gets the menu item's text.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.RulerBarViewGenerator">
			<summary>An instance of the RulerBarViewGenerator class can be used to visualize a ruler bar through an image.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.RulerBarViewGenerator.#ctor">
			<summary>Initializes a new instance of the RulerBarViewGenerator class. After initialization the Create method must be called to enable further resources.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.RulerBarViewGenerator.Create">
			<summary>Initializes the resources of a newly instantiated object. This method must be called before using the object. To release created resources, Dispose should be called after using the object.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.RulerBarViewGenerator.ResetDisplayColors">
			<summary>Resets all display colors of a ruler bar to their system dependent default values.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.RulerBarViewGenerator.Alignment">
			<summary>Gets or sets a value specifying the alignment of the ruler bar in the document.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.RulerBarViewGenerator.BorderStyle">
			<summary>Gets or sets the border style of the ruler bar.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.RulerBarViewGenerator.DisplayColors">
			<summary>Gets or sets the colors of the ruler bar.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.RulerBarViewGenerator.EnablePageMargins">
			<summary>Enables or disables the setting of page margins.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.RulerBarViewGenerator.Location">
			<summary>Gets or sets a location, in pixels.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.RulerBarViewGenerator.ReadOnly">
			<summary>Gets or sets a value determining the ruler bar's read only mode.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.RulerBarViewGenerator.ScaleUnit">
			<summary>Gets or sets the unit of the ruler bar's scale.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.RulerBarViewGenerator.UserInput">
			<summary>Gets the UserInput object, which can be used to inform the RulerBarViewGenerator about user input.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.RulerBarViewGenerator.View">
			<summary>Gets the View object, which informs about view changes and provides an image of the RulerBarViewGenerator's current state.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.RulerBarViewGenerator.Colors">
			<summary>The ServerVisualization.RulerBarViewGenerator.Colors class gets, sets or resets the display colors of a ServerVisualization.RulerBarViewGenerator component.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.RulerBarViewGenerator.Colors.#ctor">
			<summary>Initializes a new instance of the RulerBarViewGenerator.Colors class. After creating the object with this constuctor, individual colors can be set. If the Colors object is assigned to the DisplayColors property, non-set colors are reset to their system dependent default values.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.RulerBarViewGenerator.Colors.ResetBackColor">
			<summary>Resets the ruler bar's BackColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.RulerBarViewGenerator.Colors.ResetForeColor">
			<summary>Resets the ruler bar's ForeColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.RulerBarViewGenerator.Colors.ResetGradientBackColor">
			<summary>Resets the ruler bar's GradientBackColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.RulerBarViewGenerator.Colors.ResetRulerColor">
			<summary>Resets the ruler bar's RulerColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.RulerBarViewGenerator.Colors.ResetSeparatorColorDark">
			<summary>Resets the ruler bar's SeparatorColorDark to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.RulerBarViewGenerator.Colors.ResetSeparatorColorLight">
			<summary>Resets the ruler bar's SeparatorColorLight to its system dependent default value.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.RulerBarViewGenerator.Colors.BackColor">
			<summary>Gets or sets the background color at the left or top edge of the ruler bar.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.RulerBarViewGenerator.Colors.ForeColor">
			<summary>Gets or sets the color used for the numbers of the ruler.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.RulerBarViewGenerator.Colors.GradientBackColor">
			<summary>Gets or sets the background color at the right or bottom edge of the ruler bar.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.RulerBarViewGenerator.Colors.RulerColor">
			<summary>Gets or sets the color of the ruler.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.RulerBarViewGenerator.Colors.SeparatorColorDark">
			<summary>Gets or sets the color of dark separators.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.RulerBarViewGenerator.Colors.SeparatorColorLight">
			<summary>Gets or sets the color of light separators.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.ShowDialogBoxEventArgs">
			<summary>The ShowDialogBoxEventArgs class provides a DialogViewGenerator object which can be used to show a further dialog box from a parent dialog box.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.ShowDialogBoxEventArgs.DialogBox">
			<summary>Gets a DialogViewGenerator object which can be used to show the child dialog box.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.ShowErrorMessageEventArgs">
			<summary>The ShowErrorMessageEventArgs class provides a string which should be shown as an error message for the end-user.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.ShowErrorMessageEventArgs.ErrorMessage">
			<summary>Gets the error message.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.StatusBarViewGenerator">
			<summary>An instance of the StatusBarViewGenerator class can be used to visualize a status bar through an image.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.StatusBarViewGenerator.#ctor">
			<summary>Initializes a new instance of the StatusBarViewGenerator class. After initialization the Create method must be called to enable further resources.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.StatusBarViewGenerator.Create">
			<summary>Initializes the resources of a newly instantiated object. This method must be called before using the object. To release created resources, Dispose should be called after using the object.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.StatusBarViewGenerator.ResetDisplayColors">
			<summary>Resets all display colors of a status bar to their system dependent default values.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.BorderStyle">
			<summary>Gets or sets the border style of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.ColumnText">
			<summary>Gets or sets the text in the 'Column' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.DisplayColors">
			<summary>Gets or sets the colors of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.Font">
			<summary>Gets or sets the font which is used to display text.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.LineText">
			<summary>Gets or sets the text in the 'Line' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.PageCounterText">
			<summary>Gets or sets the text in the 'Page counter' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.PageText">
			<summary>Gets or sets the text in the 'Page' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.SectionCounterText">
			<summary>Gets or sets the text in the 'Section counter' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.SectionText">
			<summary>Gets or sets the text in the 'Section' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.ShowColumn">
			<summary>Specifies whether the status bar shows the column number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.ShowKeyStates">
			<summary>Specifies whether the status bar shows the key state of the CAPSLOCK and the NUMLOCK key and the current insertion mode, insert or overwrite.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.ShowLanguage">
			<summary>Specifies whether the status bar shows the language of the text selection or the text input position.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.ShowLine">
			<summary>Specifies whether the status bar shows the line number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.ShowPage">
			<summary>Specifies whether the status bar shows the page number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.ShowPageCounter">
			<summary>Specifies whether the status bar shows the number of pages the document consists of.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.ShowSection">
			<summary>Specifies whether the status bar shows the section number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.ShowSectionCounter">
			<summary>Specifies whether the status bar shows the number of sections the document consists of.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.ShowZoom">
			<summary>Specifies whether the status bar shows the current zoom factor.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.ShowZoomTrackBar">
			<summary>Specifies whether the status bar displays a track bar instead of a simple number to show and to set the zooming factor.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.UserInput">
			<summary>Gets the UserInput object, which can be used to inform the StatusBarViewGenerator about user input.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.View">
			<summary>Gets the View object, which informs about view changes and provides an image of the StatusBarViewGenerator's current state.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors">
			<summary>The StatusBarViewGenerator.Colors class gets, sets or resets the display colors of a ServerVisualization.StatusBarViewGenerator component.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.#ctor">
			<summary>Initializes a new instance of the StatusBarViewGenerator.Colors class. After creating the object with this constuctor, individual colors can be set. If the Colors object is assigned to the DisplayColors property, non-set colors are reset to their system dependent default values.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.ResetBackColor">
			<summary>Resets the status bar's BackColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.ResetBackColorBottom">
			<summary>Resets the status bar's BackColorBottom to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.ResetBackColorMiddle">
			<summary>Resets the status bar's BackColorMiddle to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.ResetBackColorTop">
			<summary>Resets the status bar's BackColorTop to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.ResetForeColor">
			<summary>Resets the status bar's ForeColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.ResetFrameColor">
			<summary>Resets the status bar's FrameColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.ResetGradientBackColor">
			<summary>Resets the status bar's GradientBackColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.ResetSeparatorColorDark">
			<summary>Resets the status bar's SeparatorColorDark to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.ResetSeparatorColorLight">
			<summary>Resets the status bar's SeparatorColorLight to its system dependent default value.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.BackColor">
			<summary>Gets or sets the background color at the left edge of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.BackColorBottom">
			<summary>Gets or sets the background color at the bottom of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.BackColorMiddle">
			<summary>Gets or sets the background color in the middle of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.BackColorTop">
			<summary>Gets or sets the background color at the top of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.ForeColor">
			<summary>Gets or sets the color used for text and numbers.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.FrameColor">
			<summary>Gets or sets the color of the status bar's frames.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.GradientBackColor">
			<summary>Gets or sets the background color at the right edge of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.SeparatorColorDark">
			<summary>Gets or sets the color of the dark part of a separator.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.StatusBarViewGenerator.Colors.SeparatorColorLight">
			<summary>Gets or sets the color of the light part of a separator.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.TextContextMenuEventArgs">
			<summary>The TextContextMenuEventArgs class provides data for the ServerVisualization.TextViewGenerator.TextContextMenuOpening event.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextContextMenuEventArgs.ContextMenuLocation">
			<summary>Gets the location in the document for which the menu items have been generated.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextContextMenuEventArgs.Items">
			<summary>Gets an array of ServerVisualization.MenuItem objects.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextContextMenuEventArgs.Location">
			<summary>Gets the location, in pixels, where the context menu should be displayed.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextContextMenuEventArgs.RightToLeft">
			<summary>Gets a value indicating whether the context menu must be shown from right to left.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.TextViewGenerator">
			<summary>The TextViewGenerator class is a special ServerTextControl, which can be used to visualize the control's text contents through a generated image.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind">
			<summary>Determines a built-in dialog box.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.AddSymbolDialog">
			<summary>Determines the dialog box for inserting symbol characters.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.BarcodeLayoutDialog">
			<summary>Determines the dialog box for layouting and setting attributes of barcodes.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.ChartLayoutDialog">
			<summary>Determines the dialog box for layouting charts.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.DrawingLayoutDialog">
			<summary>Determines the dialog box for layouting drawings.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.FontDialog">
			<summary>Determines the dialog box for setting character attributes like font attributes, text fore- and background color, baseline alignment and underlining.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.ForeColorDialog">
			<summary>Determines the dialog box for defining a text foreground color.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.FormattingStylesDialog">
			<summary>Determines the dialog box for defining formatting styles.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.FrameFillColorDialog">
			<summary>Determines the dialog box for defining a color for the background of a paragraph or a table cell.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.FrameLineColorDialog">
			<summary>Determines the dialog box for defining a color for the frame of a paragraph or a table.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.ImageAttributesDialog">
			<summary>Determines the dialog box for setting image attributes like layout options and position, size, scaling, text distances and saving options.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.InsertTableDialog">
			<summary>Determines the dialog box for inserting tables.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.LanguageDialog">
			<summary>Determines the dialog box for setting languages.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.ListFormatDialog">
			<summary>Determines the dialog box for setting attributes of bulleted and numbered lists.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.PageColorDialog">
			<summary>Determines the dialog box for defining a page color.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.ParagraphFormatDialog">
			<summary>Determines the dialog box for setting paragraph attributes like alignment, indents, distances, frames and pagination.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.SectionFormatDialog">
			<summary>Determines the dialog box for setting section attributes like page size and orientation, page margins, headers and footers, page columns and page frames.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.TabDialog">
			<summary>Determines the dialog box for defining tabulators.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.TableFormatDialog">
			<summary>Determines the dialog box for setting table attributes like frame width and frame color, text distances, cell height and vertical alignment.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.TextBackColorDialog">
			<summary>Determines the dialog box for defining a text background color.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.TextViewGenerator.DialogBoxKind.TextFrameAttributesDialog">
			<summary>Determines the dialog box for setting textframe attributes like layout options and position, size, scaling, text distances and frame options.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.BeginUndoAction(System.String)">
			<summary>Begins a user-defined undo operation. All editing and fomatting changes made between BeginUndoAction and EndUndoAction belong to the undo operation. These changes are undone or redone in a single step. The specified user-defined name is available with the UndoActionName property.</summary>
			<param name="actionName">Specifies the undo action's name.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.EndUndoAction">
			<summary>Ends a user-defined undo operation. All editing and fomatting changes made between BeginUndoAction and EndUndoAction belong to the undo operation. These changes are undone or redone in a single step.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.GetDialogBox(ServerVisualization.TextViewGenerator.DialogBoxKind)">
			<summary>Returns a view generator for the specified built-in dialog box.</summary>
			<param name="kind">Specifies which kind of dialog box is represented through the view generator.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.GetDialogBox(ServerVisualization.TextViewGenerator.DialogBoxKind,System.Int32)">
			<summary>Returns a view generator for the specified built-in dialog box and selects the specified dialog box tab.</summary>
			<param name="kind">Specifies which kind of dialog box is represented through the view generator.</param>
			<param name="selectedTab">Specifies an zero-based index indicating which dialog box tab is selected.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.GetDialogBox(TXTextControl.PageNumberField)">
			<summary>Returns a view generator for a dialog box handling the attributes of the specified pagenumber field.</summary>
			<param name="pageNumberField">Specifies the PageNumberField for which the dialog box is opened.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnBarcodeDeselected(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeDeselected event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnBarcodeSelected(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeSelected event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnChartDeselected(DataVisualization.ChartEventArgs)">
			<summary>Raises the ChartDeselected event.</summary>
			<param name="e">Specifies an ChartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnChartSelected(DataVisualization.ChartEventArgs)">
			<summary>Raises the ChartSelected event.</summary>
			<param name="e">Specifies an ChartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnCaretStateChanged(ServerVisualization.CaretStateEventArgs)">
			<summary>Raises the CaretStateChanged event.</summary>
			<param name="e">Specifies a ServerVisualization.CaretStateEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnChanged(System.EventArgs)">
			<summary>Raises the Changed event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnCharFormatChanged(System.EventArgs)">
			<summary>Raises the CharFormatChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnDocumentLinkClicked(TXTextControl.DocumentLinkEventArgs)">
			<summary>Raises the DocumentLinkClicked event.</summary>
			<param name="e">Specifies an DocumentLinkEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnDocumentSizeChanged(ServerVisualization.DocumentSizeChangedEventArgs)">
			<summary>Raises the DocumentSizeChanged event.</summary>
			<param name="e">Specifies a ServerVisualization.DocumentSizeChangedEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnDrawingDeselected(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingDeselected event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnDrawingSelected(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingSelected event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnDrawShape(ServerVisualization.DrawShapeEventArgs)">
			<summary>Raises the DrawShape event.</summary>
			<param name="e">Specifies a ServerVisualization.DrawShapeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnHeaderFooterActivated(TXTextControl.HeaderFooterEventArgs)">
			<summary>Raises the HeaderFooterActivated event.</summary>
			<param name="e">Specifies an HeaderFooterEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnHeaderFooterDeactivated(TXTextControl.HeaderFooterEventArgs)">
			<summary>Raises the HeaderFooterDeactivated event.</summary>
			<param name="e">Specifies an HeaderFooterEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnHypertextLinkClicked(TXTextControl.HypertextLinkEventArgs)">
			<summary>Raises the HypertextLinkClicked event.</summary>
			<param name="e">Specifies an HypertextLinkEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnImageDeselected(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageDeselected event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnImageSelected(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageSelected event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnInputPositionChanged(System.EventArgs)">
			<summary>Raises the InputPositionChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnPageFormatChanged(System.EventArgs)">
			<summary>Raises the PageFormatChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnParagraphFormatChanged(System.EventArgs)">
			<summary>Raises the ParagraphFormatChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnSubTextPartClicked(TXTextControl.SubTextPartEventArgs)">
			<summary>Raises the SubTextPartClicked event.</summary>
			<param name="e">Specifies an SubTextPartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnSubTextPartDoubleClicked(TXTextControl.SubTextPartEventArgs)">
			<summary>Raises the SubTextPartDoubleClicked event.</summary>
			<param name="e">Specifies an SubTextPartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnSubTextPartEntered(TXTextControl.SubTextPartEventArgs)">
			<summary>Raises the SubTextPartEntered event.</summary>
			<param name="e">Specifies an SubTextPartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnSubTextPartLeft(TXTextControl.SubTextPartEventArgs)">
			<summary>Raises the SubTextPartLeft event.</summary>
			<param name="e">Specifies an SubTextPartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnTextContextMenuOpening(TXTextControl.TextContextMenuEventArgs)">
			<summary>Raises the TextContextMenuOpening event.</summary>
			<param name="e">Specifies an ServerVisualization.TextContextMenuEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnTextFieldClicked(TXTextControl.TextFieldEventArgs)">
			<summary>Raises the TextFieldClicked event.</summary>
			<param name="e">Specifies an TextFieldEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnTextFieldEntered(TXTextControl.TextFieldEventArgs)">
			<summary>Raises the TextFieldEntered event.</summary>
			<param name="e">Specifies an TextFieldEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnTextFieldLeft(TXTextControl.TextFieldEventArgs)">
			<summary>Raises the TextFieldLeft event.</summary>
			<param name="e">Specifies an TextFieldEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnTextFrameDeselected(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameDeselected event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.OnTextFrameSelected(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameSelected event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.Redo">
			<summary>Redoes the last TextViewGenerator operation.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.Undo">
			<summary>Undoes the last edit operation in the TextViewGenerator.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.Zoom(System.Int32)">
			<summary>Zooms the contents of the TextViewGenerator using the specified zoom factor.</summary>
			<param name="zoomFactor">Specifies the zoom factor, in percent.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.Zoom(TXTextControl.ZoomOption)">
			<summary>Zooms the contents of the TextViewGenerator using the specified option.</summary>
			<param name="zoomOption">Specifies one of the ZoomOption values.</param>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.ActivationState">
			<summary>Gets or sets a value indicating the current activation state.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.AllowDrag">
			<summary>Gets or sets a value indicating whether the view generator can be a source of a Drag&amp;Drop operation.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.AllowDrop">
			<summary>Gets or sets a value indicating whether the view generator can accept data that the user drags onto it.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.AllowUndo">
			<summary>Gets or sets a value indicating whether the undo buffer is active or not.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.CanCopy">
			<summary>Informs whether a part of a document has been selected and can be copied to the clipboard.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.CanPaste">
			<summary>Informs whether the clipboard contains a format that can be pasted into a document.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.CanRedo">
			<summary>Informs whether an operation can be re-done.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.CanUndo">
			<summary>Gets a value indicating whether the user can undo the previous operation.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.ControlChars">
			<summary>Specifies if control characters are visible or not.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.DisplayColors">
			<summary>Gets or sets display colors.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.DocumentTargetMarkers">
			<summary>Gets or sets a value indicating that markers for hypertext targets are shown or not.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.DrawingMarkerLines">
			<summary>Specifies whether a marker frame is shown around a drawing to indicate its position and size.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.EditMode">
			<summary>Gets or sets a value indicating whether the document's text is read-only, can be selected or is editable.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.InputFormat">
			<summary>Gets an object of the type InputFormat which represents all formatting attributes at the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.Location">
			<summary>Gets or sets a location, in pixels.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.RedoActionName">
			<summary>Gets a string that represents the name of the action that will be performed when a call to the Redo method is made.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.RulerBar">
			<summary>Specifies the horizontal ruler bar to be used with the TextViewGenerator.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.StatusBar">
			<summary>Specifies the status bar to be used with the TextViewGenerator.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.TextFrameMarkerLines">
			<summary>Specifies whether text frames that have no border line are shown with marker lines.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.UndoActionName">
			<summary>Gets a string that represents the name of the action that will be performed when a call to the Undo method is made.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.UserInput">
			<summary>Gets the UserInput object, which can be used to inform the TextViewGenerator about user input.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.VerticalRulerBar">
			<summary>Specifies the vertical ruler bar to be used with the TextViewGenerator.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.View">
			<summary>Gets the View object, which informs about view changes and provides an image of the TextViewGenerator's current state.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.BarcodeDeselected">
			<summary>Occurs when a barcode has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.BarcodeSelected">
			<summary>Occurs when a barcode has been selected.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.Changed">
			<summary>Indicates that the contents of a document have been changed.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.ChartDeselected">
			<summary>Occurs when a chart has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.ChartSelected">
			<summary>Occurs when a chart has been selected.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.CaretStateChanged">
			<summary>Occurs when the state of the caret (size, position, visibility) has been changed.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.CharFormatChanged">
			<summary>Occurs when the character formatting attributes either of the selected characters or the current text input position have been changed.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.DocumentLinkClicked">
			<summary>Occurs when a text field has been clicked on that represents a link to a target in the document.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.DocumentSizeChanged">
			<summary>Occurs when the size of the document has been changed.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.DrawingDeselected">
			<summary>Occurs when a drawing has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.DrawingSelected">
			<summary>Occurs when a drawing has been selected.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.DrawShape">
			<summary>Occurs when additional user-interaction parts must be drawn.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.HeaderFooterActivated">
			<summary>Occurs when a header or footer has been activated.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.HeaderFooterDeactivated">
			<summary>Occurs when a header or footer has been deactivated.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.HypertextLinkClicked">
			<summary>Occurs when a text field has been clicked on that represents the source of a hypertext link.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.ImageDeselected">
			<summary>Occurs when an image has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.ImageSelected">
			<summary>Occurs when an image has been selected.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.InputPositionChanged">
			<summary>Occurs when the text input position has been changed.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.PageFormatChanged">
			<summary>Occurs when the page format settings have been changed.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.ParagraphFormatChanged">
			<summary>Occurs when the formatting attributes of the selected paragraphs have been changed.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.SubTextPartClicked">
			<summary>Occurs when a subtextpart has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.SubTextPartDoubleClicked">
			<summary>Occurs when a subtextpart has been double-clicked on.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.SubTextPartEntered">
			<summary>Occurs when the current input position has been moved to a position that belongs to a subtextpart.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.SubTextPartLeft">
			<summary>Occurs when the current input position has left a subtextpart.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.TextContextMenuOpening">
			<summary>Occurs when a right mouse click is sent as user input and a context menu should be opened.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.TextControl.TextFieldClicked">
			<summary>Occurs when a text field has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.TextFieldEntered">
			<summary>Occurs when the current input position has been moved to a position that belongs to a text field.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.TextFieldLeft">
			<summary>Occurs when the current input position has left a text field.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.TextFrameDeselected">
			<summary>Occurs when a text frame has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.TextViewGenerator.TextFrameSelected">
			<summary>Occurs when a text frame has been selected.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.TextViewGenerator.Colors">
			<summary>The TextViewGenerator.Colors class gets, sets or resets the display colors of a TextViewGenerator component.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.Colors.#ctor">
			<summary>Initializes a new instance of the TextViewGenerator.Colors class. After creating the object with this constuctor, individual colors can be set. If the Colors object is assigned to the DisplayColors property, non-set colors are reset to their system dependent default values.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.Colors.ResetDarkShadowColor">
			<summary>Resets the text control's DarkShadowColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.Colors.ResetDesktopColor">
			<summary>Resets the text control's DesktopColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.Colors.ResetHeaderFooterLabelColor">
			<summary>Resets the text control's HeaderFooterLabelColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.Colors.ResetHeaderFooterLineColor">
			<summary>Resets the text control's HeaderFooterLineColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.TextViewGenerator.Colors.ResetLightShadowColor">
			<summary>Resets the text control's LightShadowColor to its system dependent default value.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.Colors.DarkShadowColor">
			<summary>Gets or sets the display color for the shadow at the right and the bottom edge of the pages.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.Colors.DesktopColor">
			<summary>Gets or sets the display color for the area around the pages.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.Colors.HeaderFooterLabelColor">
			<summary>Gets or sets the display color for the label showing which header or footer is activated.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.Colors.HeaderFooterLineColor">
			<summary>Gets or sets the display color for the dividing line between headers and footers and the main text.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.TextViewGenerator.Colors.LightShadowColor">
			<summary>Gets or sets the display color for the shadow at the left and the top edge of the pages.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.UserInput">
			<summary>An instance of the UserInput class can be used to inform a view generator about user input.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.UserInput.MouseButtons">
			<summary>Determines a pressed mouse button.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.UserInput.MouseButtons.None">
			<summary>No mouse button was pressed.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.UserInput.MouseButtons.Left">
			<summary>The left mouse button was pressed.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.UserInput.MouseButtons.Right">
			<summary>The right mouse button was pressed.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.UserInput.MouseButtons.Middle">
			<summary>The middle mouse button was pressed.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.UserInput.MouseButtons.XButton1">
			<summary>The first XButton button was pressed.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.UserInput.MouseButtons.XButton2">
			<summary>The second XButton button was pressed.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.UserInput.ModifierKeys">
			<summary>Determines a pressed modifier key.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.UserInput.ModifierKeys.None">
			<summary>No modifier key was pressed.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.UserInput.ModifierKeys.Shift">
			<summary>The SHIFT key was pressed.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.UserInput.ModifierKeys.Control">
			<summary>The CTRL key was pressed.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.UserInput.ModifierKeys.Alt">
			<summary>The ALT key was pressed.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.UserInput.SendKeyDown(System.Int32,ServerVisualization.UserInput.ModifierKeys)">
			<summary>Informs the view generator about a key down event.</summary>
			<param name="keyCode">Specifies the virtual key code for the pressed key.</param>
			<param name="modifierKeys">Specifies modifier keys.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.UserInput.SendKeyPress(System.Int32,ServerVisualization.UserInput.ModifierKeys)">
			<summary>Informs the view generator about a key press event.</summary>
			<param name="keyChar">Specifies the translated character code for the pressed key.</param>
			<param name="modifierKeys">Specifies modifier keys.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.UserInput.SendKeyUp(System.Int32,ServerVisualization.UserInput.ModifierKeys)">
			<summary>Informs the view generator about a key up event.</summary>
			<param name="keyCode">Specifies the virtual key code for the pressed key.</param>
			<param name="modifierKeys">Specifies modifier keys.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.UserInput.SendMouseDoubleClick(System.Drawing.Point,ServerVisualization.UserInput.MouseButtons,ServerVisualization.UserInput.ModifierKeys)">
			<summary>Informs the view generator about a mouse double click event.</summary>
			<param name="viewLocation">Specifies the location, where the mouse double click event occurs.</param>
			<param name="button">Specifies the pressed mouse button.</param>
			<param name="modifierKeys">Specifies modifier keys.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.UserInput.SendMouseDown(System.Drawing.Point,ServerVisualization.UserInput.MouseButtons,ServerVisualization.UserInput.ModifierKeys)">
			<summary>Informs the view generator about a mouse down event.</summary>
			<param name="viewLocation">Specifies the location, where the mouse down event occurs.</param>
			<param name="button">Specifies the pressed mouse button.</param>
			<param name="modifierKeys">Specifies modifier keys.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.UserInput.SendMouseMove(System.Drawing.Point,ServerVisualization.UserInput.MouseButtons,ServerVisualization.UserInput.ModifierKeys)">
			<summary>Informs the view generator about a mouse move event.</summary>
			<param name="viewLocation">Specifies the location, where the mouse move event occurs.</param>
			<param name="button">Specifies a pressed mouse button.</param>
			<param name="modifierKeys">Specifies modifier keys.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.UserInput.SendMouseUp(System.Drawing.Point,ServerVisualization.UserInput.MouseButtons,ServerVisualization.UserInput.ModifierKeys)">
			<summary>Informs the view generator about a mouse up event.</summary>
			<param name="viewLocation">Specifies the location, where the mouse up event occurs.</param>
			<param name="button">Specifies a pressed mouse button.</param>
			<param name="modifierKeys">Specifies modifier keys.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.UserInput.SendMouseWheel(System.Drawing.Point,System.Int32,ServerVisualization.UserInput.MouseButtons,ServerVisualization.UserInput.ModifierKeys)">
			<summary>Informs the view generator about a mouse wheel event.</summary>
			<param name="viewLocation">Specifies the location, where the mouse wheel event occurs.</param>
			<param name="delta">Indicates the distance the wheel is rotated, expressed in multiples or divisions of 120.</param>
			<param name="button">Specifies a pressed mouse button.</param>
			<param name="modifierKeys">Specifies modifier keys.</param>
		</member>
		<member name="T:TXTextControl.ServerVisualization.View">
			<summary>An instance of the View class represents a part of a document for which an image can be generated.</summary>
		</member>
		<member name="F:TXTextControl.ServerVisualization.View.ScrollPadding">
			<summary>This property gets the minimum amout of the visible page background.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.View.GetCursorKind(System.Drawing.Point)">
			<summary>Returns the cursor kind for a certain location in a document.</summary>
			<param name="viewLocation">Specifies the location for which the cursor kind is returned.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.View.GetImage">
			<summary>Gets an image as a System.Drawing.Imaging.Bitmap.</summary>
		</member>
		<member name="M:TXTextControl.ServerVisualization.View.GetImage(System.Drawing.Rectangle)">
			<summary>Gets a clipping of the image as a System.Drawing.Imaging.Bitmap.</summary>
			<param name="clipRectangle">Specifies the clipping, in pixels, relative to the top-left corner of the image, determined through the View.Location and View.Size properties.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.View.GetImage(System.Byte[]@)">
			<summary>Gets an image as an array of bytes.</summary>
			<param name="arImage">Specifies a byte array into which the data is saved.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.View.GetImage(System.Byte[]@,System.Drawing.Rectangle)">
			<summary>Gets a clipping of the image as an array of bytes.</summary>
			<param name="arImage">Specifies a byte array into which the data is saved.</param>
			<param name="clipRectangle">Specifies the clipping, in pixels, relative to the top-left corner of the image, determined through the View.Location and View.Size properties.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.View.GetUpdateRectangle(System.Boolean)">
			<summary>Returns the coordinates of the smallest rectangle that completely encloses the update region. When the document's visible part changes, a Changed event occurs and the changed part is added to the view's update region. The bValidate parameter can be used to reset the current update region to an empty rectangle. When the document's visible part changes because the document has been scrolled, the Changed event informs about the changed part, but it is not added to the update region.</summary>
			<param name="bValidate">Validates the current update region and resets it to an empty rectangle.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.View.OnAutoHScroll(System.EventArgs)">
			<summary>Raises the AutoHScroll event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.View.OnAutoVScroll(System.EventArgs)">
			<summary>Raises the AutoVScroll event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.View.OnChanged(ServerVisualization.ViewChangedEventArgs)">
			<summary>Raises the view's Changed event.</summary>
			<param name="e">Specifies an ViewChangedEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.ServerVisualization.View.OnZoomed(System.EventArgs)">
			<summary>Raises the View's Zoomed event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="P:TXTextControl.ServerVisualization.View.Location">
			<summary>Gets or sets the view's location, in twips.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.View.Size">
			<summary>Gets or sets the view's size, in twips.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.View.ZoomFactor">
			<summary>Gets or sets the zoom factor, in percent, with which the View object generates the image.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.View.AutoHScroll">
			<summary>Occurs when the horizontal location of the view has been changed automatically.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.View.AutoVScroll">
			<summary>Occurs when the vertical location of the view has been changed automatically.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.View.Changed">
			<summary>Occurs after the contents of the View object's image have been changed.</summary>
		</member>
		<member name="E:TXTextControl.ServerVisualization.View.Zoomed">
			<summary>Occurs after the View object's zoom factor has been changed.</summary>
		</member>
		<member name="T:TXTextControl.ServerVisualization.ViewChangedEventArgs">
			<summary>The ViewChangedEventArgs class provides data for the View.Changed event.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.ViewChangedEventArgs.ClipRectangle">
			<summary>Gets the rectangular area, in pixels, which is affected through the changes.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.ViewChangedEventArgs.ScrollDistance">
			<summary>Gets the amount the document has been scrolled.</summary>
		</member>
		<member name="P:TXTextControl.ServerVisualization.ViewChangedEventArgs.ScrollOrientation">
			<summary>Gets a value which determines whether the change is the result of scrolling, either through setting the view's location in the document or through autoscrolling initiated through the control when the input position leaves the visible part of the document.</summary>
		</member>
		<member name="T:TXTextControl.WPF.DialogResult">
			<summary>Specifies identifiers to indicate the return value of a dialog box.</summary>
		</member>
		<member name="F:TXTextControl.WPF.DialogResult.Cancel">
			<summary>Specifies that the dialog box has been canceled.</summary>
		</member>
		<member name="F:TXTextControl.WPF.DialogResult.None">
			<summary>Specifies that the dialog box has been left with the Escape key.</summary>
		</member>
		<member name="F:TXTextControl.WPF.DialogResult.OK">
			<summary>Specifies that the dialog box has been left with OK.</summary>
		</member>
		<member name="T:TXTextControl.WPF.BookmarkDialog">
			<summary>The WPF.BookmarkDialog class implements a dialog box to insert a DocumentTarget at the current input position.</summary>
		</member>
		<member name="M:TXTextControl.WPF.BookmarkDialog.#ctor(TXTextControl.TextControl)">
			<summary>Creates a BookmarkDialog object for the specified WPF.TextControl.</summary>
			<param name="textControl">Specifies the WPF.TextControl for which the dialog box is opened.</param>
		</member>
		<member name="T:TXTextControl.WPF.BookmarkDialog.DialogItem">
			<summary>Each DialogItem represents an item in a WPF.BookmarkDialog dialog box.</summary>
		</member>
		<member name="F:TXTextControl.WPF.BookmarkDialog.DialogItem.TXITEM_BookmarkNameLabel">
			<summary>Identifies the Bookmark Name label.</summary>
		</member>
		<member name="F:TXTextControl.WPF.BookmarkDialog.DialogItem.TXITEM_BookmarkName">
			<summary>Identifies the Bookmark Name text box.</summary>
		</member>
		<member name="F:TXTextControl.WPF.BookmarkDialog.DialogItem.TXITEM_Deletable">
			<summary>Identifies the Deletable check box.</summary>
		</member>
		<member name="F:TXTextControl.WPF.BookmarkDialog.DialogItem.TXITEM_OK">
			<summary>Identifies the OK button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.BookmarkDialog.DialogItem.TXITEM_Cancel">
			<summary>Identifies the Cancel button.</summary>
		</member>
		<member name="T:TXTextControl.WPF.BooleanConverter">
			<summary>The BooleanConverter class provides a way to convert a value to a boolean value.</summary>
		</member>
		<member name="M:TXTextControl.WPF.BooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Converts a value to a boolean. True is returned, if the specified parameter is the string representation of value.</summary>
			<param name="value">The value produced by the binding source.</param>
			<param name="targetType">The type of the binding target property.</param>
			<param name="parameter">The converter parameter to use.</param>
			<param name="culture">The culture to use in the converter.</param>
		</member>
		<member name="M:TXTextControl.WPF.BooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Converts a boolean to a value of the type specified through the targetType parameter.</summary>
			<param name="value">The boolean value that is produced by the binding target.</param>
			<param name="targetType">The type to convert to.</param>
			<param name="parameter">The converter parameter to use.</param>
			<param name="culture">The culture to use in the converter.</param>
		</member>
		<member name="T:TXTextControl.WPF.ButtonBar">
			<summary>The WPF.ButtonBar class represents a tool bar which can be used to show or to set font and paragraph attributes of a WPF.TextControl.</summary>
		</member>
		<member name="T:TXTextControl.WPF.ButtonBar.ButtonBarItem">
			<summary>Each ButtonBarItem represents an item in a WPF.ButtonBar.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_StyleName">
			<summary>Identifies the StyleName combobox.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_FontFamily">
			<summary>Identifies the FontFamily combobox.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_FontSize">
			<summary>Identifies the FontSize combobox.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_ZoomFactor">
			<summary>Identifies the ZoomFactor combobox.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_Bold">
			<summary>Identifies the Bold button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_Italic">
			<summary>Identifies the Italic button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_Underline">
			<summary>Identifies the Underline button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_Strikeout">
			<summary>Identifies the Strikeout button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_Subscript">
			<summary>Identifies the Subscript button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_Superscript">
			<summary>Identifies the Superscript button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_IncreaseFont">
			<summary>Identifies the IncreaseFont button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_DecreaseFont">
			<summary>Identifies the DecreaseFont button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_LeftAligned">
			<summary>Identifies the LeftAligned button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_Centered">
			<summary>Identifies the Centered button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_RightAligned">
			<summary>Identifies the RightAligned button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_Justified">
			<summary>Identifies the Justified button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_DecreaseIndent">
			<summary>Identifies the DecreaseIndent button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_IncreaseIndent">
			<summary>Identifies the IncreaseIndent button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_LeftToRight">
			<summary>Identifies the LeftToRight button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_RightToLeft">
			<summary>Identifies the RightToLeft button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_BulletedList">
			<summary>Identifies the BulletedList button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_NumberedList">
			<summary>Identifies the NumberedList button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_StructuredList">
			<summary>Identifies the StructuredList button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.ButtonBar.ButtonBarItem.TXITEM_ControlChars">
			<summary>Identifies the ControlChars button.</summary>
		</member>
		<member name="T:TXTextControl.WPF.ColorConverter">
			<summary>The WPF.ColorConverter class provides a way to convert a System.Drawing.Color value to System.Windows.Media.Color value.</summary>
		</member>
		<member name="M:TXTextControl.WPF.ColorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Converts a System.Drawing.Color value to System.Windows.Media.Color value.</summary>
			<param name="value">The value produced by the binding source.</param>
			<param name="targetType">The type of the binding target property.</param>
			<param name="parameter">This parameter is not used and can be set to null.</param>
			<param name="culture">The culture to use in the converter.</param>
		</member>
		<member name="M:TXTextControl.WPF.ColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Converts a System.Windows.Media.Color to a System.Drawing.Color value.</summary>
			<param name="value">The System.Windows.Media.Color value that is produced by the binding target.</param>
			<param name="targetType">The type to convert to.</param>
			<param name="parameter">This parameter is not used and can be set to null.</param>
			<param name="culture">The culture to use in the converter.</param>
		</member>
		<member name="T:TXTextControl.WPF.DeleteBookmarksDialog">
			<summary>The DeleteBookmarksDialog class implements a dialog box which shows all targets in the current document.</summary>
		</member>
		<member name="M:TXTextControl.WPF.DeleteBookmarksDialog.#ctor(TXTextControl.TextControl)">
			<summary>Creates a DeleteBookmarksDialog object for the specified WPF.TextControl.</summary>
			<param name="textControl">Specifies the WPF.TextControl for which the dialog box is opened.</param>
		</member>
		<member name="T:TXTextControl.WPF.DeleteBookmarksDialog.DialogItem">
			<summary>Each DialogItem represents an item in a WPF.DeleteBookmarksDialog dialog box.</summary>
		</member>
		<member name="F:TXTextControl.WPF.DeleteBookmarksDialog.DialogItem.TXITEM_BookmarkListLabel">
			<summary>Identifies the bookmark list label.</summary>
		</member>
		<member name="F:TXTextControl.WPF.DeleteBookmarksDialog.DialogItem.TXITEM_BookmarkList">
			<summary>Identifies the bookmark listbox.</summary>
		</member>
		<member name="F:TXTextControl.WPF.DeleteBookmarksDialog.DialogItem.TXITEM_DeleteBookmark">
			<summary>Identifies the Delete button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.DeleteBookmarksDialog.DialogItem.TXITEM_GotoBookmark">
			<summary>Identifies the Goto button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.DeleteBookmarksDialog.DialogItem.TXITEM_Cancel">
			<summary>Identifies the Cancel button.</summary>
		</member>
		<member name="T:TXTextControl.WPF.GotoDialog">
			<summary>The GotoDialog class implements a dialog box which can be used to move the current input position to a certain page, section, line, table or bookmark.</summary>
		</member>
		<member name="M:TXTextControl.WPF.GotoDialog.#ctor(TXTextControl.TextControl)">
			<summary>Creates a GotoDialog object for the specified WPF.TextControl.</summary>
			<param name="textControl">Specifies the WPF.TextControl for which the dialog box is opened.</param>
		</member>
		<member name="T:TXTextControl.WPF.GotoDialog.DialogItem">
			<summary>Each DialogItem represents an item in a WPF.GotoDialog dialog box.</summary>
		</member>
		<member name="F:TXTextControl.WPF.GotoDialog.DialogItem.TXITEM_GotoLabel">
			<summary>Identifies the label of the Go to listbox.</summary>
		</member>
		<member name="F:TXTextControl.WPF.GotoDialog.DialogItem.TXITEM_GotoList">
			<summary>Identifies the Go to listbox.</summary>
		</member>
		<member name="F:TXTextControl.WPF.GotoDialog.DialogItem.TXITEM_NumberLabel">
			<summary>Identifies the label of the Number textbox.</summary>
		</member>
		<member name="F:TXTextControl.WPF.GotoDialog.DialogItem.TXITEM_Number">
			<summary>Identifies the Number textbox.</summary>
		</member>
		<member name="F:TXTextControl.WPF.GotoDialog.DialogItem.TXITEM_NameList">
			<summary>Identifies the Bookmark listbox.</summary>
		</member>
		<member name="F:TXTextControl.WPF.GotoDialog.DialogItem.TXITEM_GotoPrevious">
			<summary>Identifies Previous button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.GotoDialog.DialogItem.TXITEM_GotoNext">
			<summary>Identifies the Next button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.GotoDialog.DialogItem.TXITEM_Close">
			<summary>Identifies the Close button.</summary>
		</member>
		<member name="T:TXTextControl.WPF.HyperlinkDialog">
			<summary>The WPF.HyperlinkDialog class implements a built-in dialog box for inserting and editing a hyperlink at the current text input position.</summary>
		</member>
		<member name="M:TXTextControl.WPF.HyperlinkDialog.#ctor(TXTextControl.TextControl)">
			<summary>Creates a HyperlinkDialog object for the specified WPF.TextControl.</summary>
			<param name="textControl">Specifies the WPF.TextControl for which the dialog box is opened.</param>
		</member>
		<member name="T:TXTextControl.WPF.HyperlinkDialog.DialogItem">
			<summary>Each DialogItem represents an item in a WPF.HyperlinkDialog dialog box.</summary>
		</member>
		<member name="F:TXTextControl.WPF.HyperlinkDialog.DialogItem.TXITEM_HyperlinkTextLabel">
			<summary>Identifies the Hyperlink text label.</summary>
		</member>
		<member name="F:TXTextControl.WPF.HyperlinkDialog.DialogItem.TXITEM_HyperlinkText">
			<summary>Identifies the Hyperlink text edit control.</summary>
		</member>
		<member name="F:TXTextControl.WPF.HyperlinkDialog.DialogItem.TXITEM_HyperlinkLabel">
			<summary>Identifies the Hyperlink label.</summary>
		</member>
		<member name="F:TXTextControl.WPF.HyperlinkDialog.DialogItem.TXITEM_Hyperlink">
			<summary>Identifies the Hyperlink edit control.</summary>
		</member>
		<member name="F:TXTextControl.WPF.HyperlinkDialog.DialogItem.TXITEM_SelectFile">
			<summary>Identifies the Select File button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.HyperlinkDialog.DialogItem.TXITEM_BookmarkListLabel">
			<summary>Identifies the bookmark list label.</summary>
		</member>
		<member name="F:TXTextControl.WPF.HyperlinkDialog.DialogItem.TXITEM_BookmarkList">
			<summary>Identifies the bookmark listbox.</summary>
		</member>
		<member name="F:TXTextControl.WPF.HyperlinkDialog.DialogItem.TXITEM_ShowBookmarks">
			<summary>Identifies the Show Bookmarks label.</summary>
		</member>
		<member name="F:TXTextControl.WPF.HyperlinkDialog.DialogItem.TXITEM_CurrentDocument">
			<summary>Identifies the Current Document radio button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.HyperlinkDialog.DialogItem.TXITEM_SelectedFile">
			<summary>Identifies the Selected File radio button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.HyperlinkDialog.DialogItem.TXITEM_DeleteHyperlink">
			<summary>Identifies the Delete Hyperlink button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.HyperlinkDialog.DialogItem.TXITEM_OK">
			<summary>Identifies the OK button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.HyperlinkDialog.DialogItem.TXITEM_Cancel">
			<summary>Identifies the Cancel button.</summary>
		</member>
		<member name="T:TXTextControl.WPF.LogarithmicConverter">
			<summary>The class WPF.LogarithmicConverter Converts a numeric value from a linear scale to a logarithmic scale.</summary>
		</member>
		<member name="M:TXTextControl.WPF.LogarithmicConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Converts an integer or a double precision floating point value to an integer or a double precision floating point value.</summary>
			<param name="value">The value produced by the binding source.</param>
			<param name="targetType">The type of the binding target property.</param>
			<param name="parameter">The converter parameter.</param>
			<param name="culture">The culture to use in the converter.</param>
		</member>
		<member name="M:TXTextControl.WPF.LogarithmicConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Converts an integer or a double precision floating point value to an integer or a double precision floating point value.</summary>
			<param name="value">The numeric value that is produced by the binding target.</param>
			<param name="targetType">The type of the binding source.</param>
			<param name="parameter">The converter parameter.</param>
			<param name="culture">The culture to use in the converter.</param>
		</member>
		<member name="P:TXTextControl.WPF.LogarithmicConverter.InputMinimum">
			<summary>Sets or gets the lower bound of the source value range.</summary>
		</member>
		<member name="P:TXTextControl.WPF.LogarithmicConverter.InputCenter">
			<summary>Sets or gets the numeric value of the source value range which will be mapped to the center of the target value range.</summary>
		</member>
		<member name="P:TXTextControl.WPF.LogarithmicConverter.InputMaximum">
			<summary>Sets or gets the upper bound of the source value range.</summary>
		</member>
		<member name="P:TXTextControl.WPF.LogarithmicConverter.OutputMinimum">
			<summary>Sets or gets the lower bound of the target value range.</summary>
		</member>
		<member name="P:TXTextControl.WPF.LogarithmicConverter.OutputMaximum">
			<summary>Sets or gets the upper bound of the target value range.</summary>
		</member>
		<member name="T:TXTextControl.WPF.MeasureConverter">
			<summary>The MeasureConverter class provides a way to convert a measure in twips (twentieth of a point) to a value in another measuring unit.</summary>
		</member>
		<member name="M:TXTextControl.WPF.MeasureConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Converts a value from twips to another meaasuring unit.</summary>
			<param name="value">The value produced by the binding source.</param>
			<param name="targetType">The type of the binding target property.</param>
			<param name="parameter">The converter parameter to use.</param>
			<param name="culture">The culture to use in the converter.</param>
		</member>
		<member name="M:TXTextControl.WPF.MeasureConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Converts a value from another measuring unit to twips.</summary>
			<param name="value">The value that is produced by the binding target.</param>
			<param name="targetType">The type to convert to.</param>
			<param name="parameter">The converter parameter to use.</param>
			<param name="culture">The culture to use in the converter.</param>
		</member>
		<member name="P:TXTextControl.WPF.MeasureConverter.Decimals">
			<summary>Gets or sets the number of decimals for the converted value.</summary>
		</member>
		<member name="P:TXTextControl.WPF.MeasureConverter.Unit">
			<summary>Gets or sets the measuring unit for the conversion.</summary>
		</member>
		<member name="P:TXTextControl.WPF.MeasureConverter.ShowAllDecimals">
			<summary>Gets or sets a value specifying whether all decimals set with the Decimals property are shown, when the result is a string.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RibbonFormattingTab">
			<summary>The WPF.RibbonFormattingTab class represents a ribbon tab for setting font and paragraph attributes, formatting styles and for handling the clipboard.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RibbonFormattingTab.RibbonItem">
			<summary>Each RibbonItem represents an item in a WPF.RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_FontFamily">
			<summary>Identifies the FontFamily combobox.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_FontSize">
			<summary>Identifies the FontSize combobox.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_Bold">
			<summary>Identifies the Bold button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_Italic">
			<summary>Identifies the Italic button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_Underline">
			<summary>Identifies the Underline button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_Strikeout">
			<summary>Identifies the Strikeout button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_Subscript">
			<summary>Identifies the Subscript button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_Superscript">
			<summary>Identifies the Superscript button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_IncreaseFont">
			<summary>Identifies the IncreaseFont button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_DecreaseFont">
			<summary>Identifies the DecreaseFont button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_LeftAligned">
			<summary>Identifies the LeftAligned button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_Centered">
			<summary>Identifies the Centered button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_RightAligned">
			<summary>Identifies the RightAligned button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_Justified">
			<summary>Identifies the Justified button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_DecreaseIndent">
			<summary>Identifies the DecreaseIndent button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_IncreaseIndent">
			<summary>Identifies the IncreaseIndent button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_LeftToRight">
			<summary>Identifies the LeftToRight button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_RightToLeft">
			<summary>Identifies the RightToLeft button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_BulletedList">
			<summary>Identifies the BulletedList button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_NumberedList">
			<summary>Identifies the NumberedList button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_StructuredList">
			<summary>Identifies the StructuredList button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_ControlChars">
			<summary>Identifies the ControlChars button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_Paste">
			<summary>Identifies the Paste button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_Cut">
			<summary>Identifies the Cut button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_Copy">
			<summary>Identifies the Copy button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_ClearFormatting">
			<summary>Identifies the ClearFormatting button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_CharacterFormatting">
			<summary>Identifies the CharacterFormatting button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_EditTabs">
			<summary>Identifies the EditTabs button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_ParagraphFormatting">
			<summary>Identifies the ParagraphFormatting button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_Find">
			<summary>Identifies the Find button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_Replace">
			<summary>Identifies the Replace button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_Goto">
			<summary>Identifies the Goto button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_LeftFrameLine">
			<summary>Identifies the LeftFrameLine menu item.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_TopFrameLine">
			<summary>Identifies the TopFrameLine menu item.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_RightFrameLine">
			<summary>Identifies the RightFrameLine menu item.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_BottomFrameLine">
			<summary>Identifies the BottomFrameLine menu item.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_BoxFrame">
			<summary>Identifies the BoxFrame menu item.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_AllFrameLines">
			<summary>Identifies the AllFrameLines menu item.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_InnerHorizontalFrameLines">
			<summary>Identifies the InnerHorizontalFrameLines menu item.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_InnerVerticalFrameLines">
			<summary>Identifies the InnerVerticalFrameLines menu item.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_ChangeCase">
			<summary>Identifies the ChangeCase button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_TextBackColor">
			<summary>Identifies the TextBackColor button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_TextColor">
			<summary>Identifies the TextColor button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_Border">
			<summary>Identifies the Border button.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFormattingTab.RibbonItem.TXITEM_StyleName">
			<summary>Identifies the StyleName button.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RibbonFrameLayoutTab">
			<summary>The RibbonFrameLayoutTab class represents a ribbon tab for editing objects of type Image, TextFrame, DrawingFrame and BarcodeFrame.</summary>
		</member>
		<member name="M:TXTextControl.WPF.RibbonFrameLayoutTab.#ctor">
			<summary>Initializes a new instance of the RibbonFrameLayoutTab class.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem">
			<summary>Each RibbonItem represents an item in a WPF.RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_WrapText">
			<summary>Identifies the WrapText button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_BringToFront">
			<summary>Identifies the BringToFront button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_SendToBack">
			<summary>Identifies the SendToBack button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_Position">
			<summary>Identifies the Position button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_ObjectHeight">
			<summary>Identifies the ObjectHeight text box of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_ObjectWidth">
			<summary>Identifies the ObjectWidth text box of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_ObjectName">
			<summary>Identifies the ObjectName text box of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_ObjectID">
			<summary>Identifies the ObjectID text box of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_TextFrameBackColor">
			<summary>Identifies the TextFrameBackColor button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_TextFrameTransparency">
			<summary>Identifies the TextFrameTransparency button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_TextFrameLineWidth">
			<summary>Identifies the TextFrameLineWidth button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_DrawingLineColor">
			<summary>Identifies the DrawingLineColor button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_DrawingBackColor">
			<summary>Identifies the DrawingBackColor button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_DrawingLineWidth">
			<summary>Identifies the DrawingLineWidth button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_DrawingTransparency">
			<summary>Identifies the DrawingTransparency button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_TableBackColor">
			<summary>Identifies the TableBackColor button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_DrawingRotation">
			<summary>Identifies the DrawingRotation button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_BarcodeForeColor">
			<summary>Identifies the BarcodeForeColor button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_BarcodeBackColor">
			<summary>Identifies the BarcodeBackColor button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_BarcodeTransparency">
			<summary>Identifies the BarcodeTransparency button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_BarcodeHorizontalAlignment">
			<summary>Identifies the BarcodeHorizontalAlignment button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_BarcodeVerticalAlignment">
			<summary>Identifies the BarcodeVerticalAlignment button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonFrameLayoutTab.RibbonItem.TXITEM_BarcodeRotation">
			<summary>Identifies the BarcodeRotation button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RibbonInsertTab">
			<summary>The WPF.RibbonInsertTab class represents a ribbon tab for inserting pages, images, hyperlinks, bookmarks, headers and footers, textframes and symbols.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RibbonInsertTab.RibbonItem">
			<summary>Each RibbonItem represents an item in a WPF.RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonInsertTab.RibbonItem.TXITEM_InsertPage">
			<summary>Identifies the InsertPage button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonInsertTab.RibbonItem.TXITEM_InsertPageBreak">
			<summary>Identifies the InsertPageBreak button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonInsertTab.RibbonItem.TXITEM_InsertTable">
			<summary>Identifies the InsertTable button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonInsertTab.RibbonItem.TXITEM_InsertImage">
			<summary>Identifies the InsertImage button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonInsertTab.RibbonItem.TXITEM_InsertShape">
			<summary>Identifies the InsertShape button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonInsertTab.RibbonItem.TXITEM_InsertBarcode">
			<summary>Identifies the InsertBarcode button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonInsertTab.RibbonItem.TXITEM_InsertHyperlink">
			<summary>Identifies the InsertHyperlink button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonInsertTab.RibbonItem.TXITEM_InsertBookmark">
			<summary>Identifies the InsertBookmark button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonInsertTab.RibbonItem.TXITEM_InsertHeader">
			<summary>Identifies the InsertHeader button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonInsertTab.RibbonItem.TXITEM_InsertFooter">
			<summary>Identifies the InsertFooter button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonInsertTab.RibbonItem.TXITEM_InsertPageNumber">
			<summary>Identifies the InsertPageNumber button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonInsertTab.RibbonItem.TXITEM_InsertTextFrame">
			<summary>Identifies the InsertTextFrame button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonInsertTab.RibbonItem.TXITEM_InsertFile">
			<summary>Identifies the InsertFile button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonInsertTab.RibbonItem.TXITEM_InsertSymbol">
			<summary>Identifies the InsertSymbol button of the RibbonInsertTab.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RibbonPageLayoutTab">
			<summary>The RibbonPageLayoutTab class represents a tab for editing the page setup and layout.</summary>
		</member>
		<member name="M:TXTextControl.WPF.RibbonPageLayoutTab.#ctor">
			<summary>Initializes a new instance of the RibbonPageLayoutTab class.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RibbonPageLayoutTab.RibbonItem">
			<summary>Each RibbonItem represents an item in a WPF.RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonPageLayoutTab.RibbonItem.TXITEM_PageMargins">
			<summary>Identifies the PageMargins button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonPageLayoutTab.RibbonItem.TXITEM_Orientation">
			<summary>Identifies the Orientation button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonPageLayoutTab.RibbonItem.TXITEM_PageSize">
			<summary>Identifies the PageSize button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonPageLayoutTab.RibbonItem.TXITEM_Columns">
			<summary>Identifies the Columns button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonPageLayoutTab.RibbonItem.TXITEM_Breaks">
			<summary>Identifies the Breaks button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonPageLayoutTab.RibbonItem.TXITEM_PageColor">
			<summary>Identifies the PageColor button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonPageLayoutTab.RibbonItem.TXITEM_PageBorders">
			<summary>Identifies the PageBorders button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonPageLayoutTab.RibbonItem.TXITEM_PageLineColor">
			<summary>Identifies the PageLineColor button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonPageLayoutTab.RibbonItem.TXITEM_PageLineWidth">
			<summary>Identifies the PageLineWidth button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RibbonProofingTab">
			<summary>The RibbonProofingTab class represents a tab for setting proofing options such as spelling, hypheantion or language detection.</summary>
		</member>
		<member name="M:TXTextControl.WPF.RibbonProofingTab.#ctor">
			<summary>Initializes a new instance of the RibbonProofingTab class.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RibbonProofingTab.RibbonItem">
			<summary>Each RibbonItem represents an item in a WPF.RibbonProofingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonProofingTab.RibbonItem.TXITEM_EnableSpellChecking">
			<summary>Identifies the EnableSpellChecking button of the RibbonProofingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonProofingTab.RibbonItem.TXITEM_EnableHyphenations">
			<summary>Identifies the button of the RibbonProofingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonProofingTab.RibbonItem.TXITEM_Spelling">
			<summary>Identifies the Spelling button of the RibbonProofingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonProofingTab.RibbonItem.TXITEM_LoadDictionary">
			<summary>Identifies the LoadDictionary button of the RibbonProofingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonProofingTab.RibbonItem.TXITEM_SpellingOptions">
			<summary>Identifies the SpellingOptions button of the RibbonProofingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonProofingTab.RibbonItem.TXITEM_EnableLanguageDetection">
			<summary>Identifies the EnableLanguageDetection button of the RibbonProofingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonProofingTab.RibbonItem.TXITEM_SetLanguage">
			<summary>Identifies the SetLanguage button of the RibbonProofingTab.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RibbonReportingTab">
			<summary>The RibbonReportingTab class represents a WPF ribbon tab to integrate mail merge and reporting functionality.</summary>
		</member>
		<member name="M:TXTextControl.WPF.RibbonReportingTab.#ctor">
			<summary>Initializes a new instance of the RibbonReportingTab class.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RibbonReportingTab.RibbonItem">
			<summary>Each RibbonItem represents an item in a WPF.RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonReportingTab.RibbonItem.TXITEM_DataSource">
			<summary>Identifies the DataSource button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonReportingTab.RibbonItem.TXITEM_SelectMasterTable">
			<summary>Identifies the SelectMasterTable button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonReportingTab.RibbonItem.TXITEM_EditDataRelations">
			<summary>Identifies the EditDataRelations button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonReportingTab.RibbonItem.TXITEM_InsertMergeField">
			<summary>Identifies the InsertMergeField button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonReportingTab.RibbonItem.TXITEM_InsertSpecialField">
			<summary>Identifies the InsertSpecialField button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonReportingTab.RibbonItem.TXITEM_FieldProperties">
			<summary>Identifies the FieldProperties button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonReportingTab.RibbonItem.TXITEM_DeleteField">
			<summary>Identifies the DeleteField button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonReportingTab.RibbonItem.TXITEM_InsertMergeBlock">
			<summary>Identifies the InsertMergeBlock button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonReportingTab.RibbonItem.TXITEM_EditMergeBlocks">
			<summary>Identifies the EditMergeBlocks button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonReportingTab.RibbonItem.TXITEM_ShowFieldCodes">
			<summary>Identifies the ShowFieldCodes button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonReportingTab.RibbonItem.TXITEM_ShowFieldText">
			<summary>Identifies the ShowFieldText button of the RibbonReportingTab.</summary>
		</member>
		<member name="P:TXTextControl.WPF.RibbonReportingTab.DataSourceManager">
			<summary>Provides the DataSourceManager that is connected with the RibbonReportingTab.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RibbonTableLayoutTab">
			<summary>The RibbonTableLayoutTab class represents a ribbon tab for editing tables.</summary>
		</member>
		<member name="M:TXTextControl.WPF.RibbonTableLayoutTab.#ctor">
			<summary>Initializes a new instance of the RibbonTableLayoutTab class.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem">
			<summary>Each RibbonItem represents an item in a WPF.RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_SelectTable">
			<summary>Identifies the SelectTable button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_TableGridLines">
			<summary>Identifies the TableGridLines button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_TableProperties">
			<summary>Identifies the TableProperties button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_DeleteTable">
			<summary>Identifies the DeleteTable button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_InsertTableRowAbove">
			<summary>Identifies the InsertTableRowAbove button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_InsertTableRowBelow">
			<summary>Identifies the InsertTableRowBelow button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_InsertTableColLeft">
			<summary>Identifies the InsertTableColLeft button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_InsertTableColRight">
			<summary>Identifies the InsertTableColRight button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_MergeTableCells">
			<summary>Identifies the MergeTableCells button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_SplitTableCells">
			<summary>Identifies the SplitTableCells button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_SplitTable">
			<summary>Identifies the SplitTable button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_TableFrameLines">
			<summary>Identifies the TableFrameLines button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_TableLineColor">
			<summary>Identifies the TableLineColor button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_TableBackColor">
			<summary>Identifies the TableBackColor button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_TableLineWidth">
			<summary>Identifies the TableLineWidth button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignTopLeft">
			<summary>Identifies the CellAlignTopLeft button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignTopCentered">
			<summary>Identifies the CellAlignTopCentered button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignTopRight">
			<summary>Identifies the CellAlignTopRight button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignTopJustified">
			<summary>Identifies the CellAlignTopJustified button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignMiddleLeft">
			<summary>Identifies the CellAlignMiddleLeft button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignMiddleCentered">
			<summary>Identifies the CellAlignMiddleCentered button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignMiddleRight">
			<summary>Identifies the CellAlignMiddleRight button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignMiddleJustified">
			<summary>Identifies the CellAlignMiddleJustified button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignBottomLeft">
			<summary>Identifies the CellAlignBottomLeft button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignBottomCentered">
			<summary>Identifies the CellAlignBottomCentered button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignBottomRight">
			<summary>Identifies the CellAlignBottomRight button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignBottomJustified">
			<summary>Identifies the CellAlignBottomJustified button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RibbonViewTab">
			<summary>The RibbonViewTab class represents a tab for customizing the view settings.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.#ctor">
			<summary>Initializes a new instance of the RibbonViewTab class.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RibbonViewTab.RibbonItem">
			<summary>Each RibbonItem represents an item in a WPF.RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonViewTab.RibbonItem.TXITEM_PrintLayout">
			<summary>Identifies the PrintLayout button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonViewTab.RibbonItem.TXITEM_Draft">
			<summary>Identifies the Draft button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonViewTab.RibbonItem.TXITEM_ZoomFactor">
			<summary>Identifies the ZoomFactor button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonViewTab.RibbonItem.TXITEM_Zoom100">
			<summary>Identifies the Zoom100 button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonViewTab.RibbonItem.TXITEM_FullPage">
			<summary>Identifies the FullPage button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonViewTab.RibbonItem.TXITEM_PageWidth">
			<summary>Identifies the PageWidth button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonViewTab.RibbonItem.TXITEM_TextWidth">
			<summary>Identifies the TextWidth button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonViewTab.RibbonItem.TXITEM_HorizontalRuler">
			<summary>Identifies the HorizontalRuler button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonViewTab.RibbonItem.TXITEM_VerticalRuler">
			<summary>Identifies the VerticalRuler button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonViewTab.RibbonItem.TXITEM_StatusBar">
			<summary>Identifies the StatusBar button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonViewTab.RibbonItem.TXITEM_ShowTableGridlines">
			<summary>Identifies the TableGridlines button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonViewTab.RibbonItem.TXITEM_ShowBookmarkMarkers">
			<summary>Identifies the BookmarkMarkers button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonViewTab.RibbonItem.TXITEM_ShowTextFrameMarkersLines">
			<summary>Identifies the TextFrameMarkersLines button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonViewTab.RibbonItem.TXITEM_ShowDrawingFrameMarkersLines">
			<summary>Identifies the DrawingFrameMarkersLines button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonViewTab.RibbonItem.TXITEM_ShowControlChars">
			<summary>Identifies the ControlChars button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.WPF.RibbonViewTab.RibbonItem.TXITEM_ShowFrameAnchors">
			<summary>Identifies the FrameAnchors button of the RibbonViewTab.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RulerBar">
			<summary>The WPF.RulerBar class represents a tool bar which can be used to show or to set indents, margins and tabs of a WPF.TextControl.</summary>
		</member>
		<member name="P:TXTextControl.WPF.RulerBar.BorderStyle">
			<summary>Gets or sets the border style of the ruler bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.RulerBar.DisplayColors">
			<summary>Gets or sets the colors of the ruler bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.RulerBar.EnablePageMargins">
			<summary>Enables or disables the setting of page margins.</summary>
		</member>
		<member name="P:TXTextControl.WPF.RulerBar.ScaleUnit">
			<summary>Gets or sets the unit of the ruler bar's scale.</summary>
		</member>
		<member name="T:TXTextControl.WPF.RulerBar.Colors">
			<summary>The WPF.RulerBarColors class gets, sets or resets the display colors of a WPF.RulerBar control.</summary>
		</member>
		<member name="M:TXTextControl.WPF.RulerBarColors.#ctor">
			<summary>Initializes a new instance of the WPF.RulerBarColors class. After creating the object with this constuctor, individual colors can be set. If the Colors object is assigned to the WPF.RulerBar.DisplayColors property, non-set colors are reset to their system dependent default values.</summary>
		</member>
		<member name="P:TXTextControl.WPF.RulerBarColors.BackColor">
			<summary>Gets or sets the background color at the left or top edge of the ruler bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.RulerBarColors.ForeColor">
			<summary>Gets or sets the color used for the numbers of the ruler.</summary>
		</member>
		<member name="P:TXTextControl.WPF.RulerBarColors.GradientBackColor">
			<summary>Gets or sets the background color at the right or bottom edge of the ruler bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.RulerBarColors.RulerColor">
			<summary>Gets or sets the color of the ruler.</summary>
		</member>
		<member name="P:TXTextControl.WPF.RulerBarColors.SeparatorColorDark">
			<summary>Gets or sets the color of dark separators.</summary>
		</member>
		<member name="P:TXTextControl.WPF.RulerBarColors.SeparatorColorLight">
			<summary>Gets or sets the color of light separators.</summary>
		</member>
		<member name="T:TXTextControl.WPF.StatusBar">
			<summary>The WPF.StatusBar class represents a tool bar which can be used to show the position of the curent text input position and other status information of a WPF.TextControl.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.BorderStyle">
			<summary>Gets or sets the border style of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.ColumnText">
			<summary>Gets or sets the text in the 'Column' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.DisplayColors">
			<summary>Gets or sets the colors of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.FontFamily">
			<summary>Gets or sets the font family of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.FontSize">
			<summary>Gets or sets the font size of the status bar in device-independent units (1/96th inch).</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.FontStyle">
			<summary>Gets or sets the font style of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.FontWeight">
			<summary>Gets or sets the weight or thickness of the status bar's font.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.LineText">
			<summary>Gets or sets the text in the 'Line' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.PageCounterText">
			<summary>Gets or sets the text in the 'Page counter' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.PageText">
			<summary>Gets or sets the text in the 'Page' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.SectionCounterText">
			<summary>Gets or sets the text in the 'Section counter' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.SectionText">
			<summary>Gets or sets the text in the 'Section' area of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.ShowColumn">
			<summary>Specifies whether the status bar shows the column number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.ShowKeyStates">
			<summary>Specifies whether the status bar shows the key state of the CAPSLOCK and the NUMLOCK key and the current insertion mode, insert or overwrite.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.ShowLanguage">
			<summary>Specifies whether the status bar shows the language of the text selection or the text input position.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.ShowLine">
			<summary>Specifies whether the status bar shows the line number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.ShowPage">
			<summary>Specifies whether the status bar shows the page number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.ShowPageCounter">
			<summary>Specifies whether the status bar shows the number of pages the document consists of.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.ShowSection">
			<summary>Specifies whether the status bar shows the section number of the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.ShowSectionCounter">
			<summary>Specifies whether the status bar shows the number of sections the document consists of.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.ShowZoom">
			<summary>Specifies whether the status bar shows the current zoom factor.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.ShowZoomTrackBar">
			<summary>Specifies whether the status bar displays a track bar instead of a simple number to show and to set the zooming factor.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBar.Text">
			<summary>Gets or sets the text of the status bar.</summary>
		</member>
		<member name="T:TXTextControl.WPF.StatusBarColors">
			<summary>The WPF.StatusBarColors class gets, sets or resets the display colors of a WPF.StatusBar control.</summary>
		</member>
		<member name="M:TXTextControl.WPF.StatusBarColors.#ctor">
			<summary>Initializes a new instance of the WPF.StatusBarColors class. After creating the object with this constuctor, individual colors can be set. If the Colors object is assigned to the WPF.StatusBar.DisplayColors property, non-set colors are reset to their system dependent default values.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBarColors.BackColor">
			<summary>Gets or sets the background color at the left edge of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBarColors.BackColorBottom">
			<summary>Gets or sets the background color at the bottom of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBarColors.BackColorMiddle">
			<summary>Gets or sets the background color in the middle of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBarColors.BackColorTop">
			<summary>Gets or sets the background color at the top of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBarColors.ForeColor">
			<summary>Gets or sets the color used for text and numbers.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBarColors.FrameColor">
			<summary>Gets or sets the color of the status bar's frames.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBarColors.GradientBackColor">
			<summary>Gets or sets the background color at the right edge of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBarColors.SeparatorColorDark">
			<summary>Gets or sets the color of the dark part of a separator.</summary>
		</member>
		<member name="P:TXTextControl.WPF.StatusBarColors.SeparatorColorLight">
			<summary>Gets or sets the color of the light part of a separator.</summary>
		</member>
		<member name="T:TXTextControl.WPF.TextContextMenuEventArgs">
			<summary>The WPF.TextContextMenuEventArgs class provides data for the WPF.TextControl.TextContextMenuOpening event.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextContextMenuEventArgs.ContextMenuLocation">
			<summary>Gets the location in the document for which the context menu will be opened.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextContextMenuEventArgs.HorizontalOffset">
			<summary>Gets the horizontal distance between the top-left corner of the screen and the location where the menu is displayed.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextContextMenuEventArgs.TextContextMenu">
			<summary>Gets or sets the context menu, which will be shown.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextContextMenuEventArgs.VerticalOffset">
			<summary>Gets the vertical distance between the top-left corner of the screen and the location where the menu is displayed.</summary>
		</member>
		<member name="T:TXTextControl.WPF.TextControl">
			<summary>The WPF.TextControl class class implements a control with high-level text editing features.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.#ctor">
			<summary>Initializes a new instance of the WPF.TextControl class.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.AddSymbolDialog">
			<summary>Invokes a built-in dialog box for inserting symbol characters.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Append(TXTextControl.AppendSettings)">
			<summary>Opens a file open dialogbox and appends the selected file to the existing document.</summary>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Append(TXTextControl.StreamType,TXTextControl.AppendSettings)">
			<summary>Opens a file open dialogbox and appends the selected file with the specified format to the existing document.</summary>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Append(System.String,TXTextControl.StreamType,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format from the specified file and appends it to the existing document.</summary>
			<param name="path">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Append(System.IO.FileStream,TXTextControl.StreamType,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format from the specified file stream and appends it to the existing document.</summary>
			<param name="fileStream">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Append(System.Byte[],TXTextControl.BinaryStreamType,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format from the specified byte array and appends it to the existing document.</summary>
			<param name="binaryData">Specifies a byte array from which the data is loaded.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Append(System.String,TXTextControl.StringStreamType,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format from the specified string and appends it to the existing document.</summary>
			<param name="stringData">Specifies a string from which the data is loaded.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Append(TXTextControl.StreamType,TXTextControl.LoadSettings,TXTextControl.AppendSettings)">
			<summary>Opens a file open dialogbox and appends the selected file with the specified format and special settings to the existing document.</summary>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Append(System.String,TXTextControl.StreamType,TXTextControl.LoadSettings,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format and special settings from the specified file and appends it to the existing document.</summary>
			<param name="path">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Append(System.IO.FileStream,TXTextControl.StreamType,TXTextControl.LoadSettings,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format and special settings from the specified file stream and appends it to the existing document.</summary>
			<param name="fileStream">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Append(System.Byte[],TXTextControl.BinaryStreamType,TXTextControl.LoadSettings)">
			<summary>Loads text with the specified format and special settings from the specified byte array and appends it to the existing document.</summary>
			<param name="binaryData">Specifies a byte array from which the data is loaded.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Append(System.String,TXTextControl.StringStreamType,TXTextControl.LoadSettings,TXTextControl.AppendSettings)">
			<summary>Loads text with the specified format and special settings from the specified string and appends it to the existing document.</summary>
			<param name="stringData">Specifies a string from which the data is loaded.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
			<param name="appendSettings">Specifies settings on how the document is appended.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.BarcodeLayoutDialog">
			<summary>Opens the dialog box showing its first tab.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.BarcodeLayoutDialog(System.Int32)">
			<summary>Opens the dialog box showing the specified tab.</summary>
			<param name="activeTab">Specifies the index of the tab, zero-based, that is displayed when the tabbed dialog box is opened.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.BeginUndoAction(System.String)">
			<summary>Begins a user-defined undo operation. All editing and fomatting changes made between BeginUndoAction and EndUndoAction belong to the undo operation. These changes are undone or redone in a single step. The specified user-defined name is available with the UndoActionName property.</summary>
			<param name="actionName">Specifies the undo action's name.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Clear">
			<summary>Clears the selected text or the character right from the current input position from the Text Control.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.ClearUndo">
			<summary>Clears the undo buffer of the Text Control.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Copy">
			<summary>Copies the current selection in the Text Control to the Clipboard.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Cut">
			<summary>Moves the current selection in the Text Control to the Clipboard.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.DrawingLayoutDialog">
			<summary>Opens the dialog box showing its first tab.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.DrawingLayoutDialog(System.Int32)">
			<summary>Opens the dialog box showing the specified tab.</summary>
			<param name="activeTab">Specifies the index of the tab, zero-based, that is displayed when the tabbed dialog box is opened.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.EndUndoAction">
			<summary>Ends a user-defined undo operation. All editing and fomatting changes made between BeginUndoAction and EndUndoAction belong to the undo operation. These changes are undone or redone in a single step.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Find">
			<summary>Opens the built-in Find dialog box to search for a text string in the text part with the input focus. This can be the main text, a text frame or a header or footer.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Find(System.String)">
			<summary>Searches for the specified text string in the text part with the input focus. This can be the main text, a text frame or a header or footer. The search starts at the beginning of the text.</summary>
			<param name="text">Specifies the text to search for.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Find(System.String,System.Int32,TXTextControl.FindOptions)">
			<summary>Searches for the specified text string in the text part with the input focus. This can be the main text, a text frame or a header or footer. The search is done with the specified find options and starts at the specified position.</summary>
			<param name="text">Specifies the text to search for.</param>
			<param name="start">Specifies the text position where the search starts, beginning with 0.</param>
			<param name="options">Specifies search options.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.FontDialog">
			<summary>Invokes the built-in font dialog box.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.ForeColorDialog">
			<summary>Invokes the built-in dialog box for setting the text color.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.FormattingStylesDialog">
			<summary>Invokes the built-in dialog box for creating, deleting and modifying formatting styles.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.FrameFillColorDialog">
			<summary>Invokes the built-in dialog box for choosing a color for the background of a paragraph or a table cell.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.FrameLineColorDialog">
			<summary>Invokes the built-in dialog box for choosing a color for the frame of a paragraph or a table.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.GetClipboardFormats">
			<summary>Returns an array of ClipboardFormat values. These values specify all the data formats which are currently available in the clipboard and which can be pasted into a document. If there is no data format available, this method returns null.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.GetSupportedFonts">
			<summary>Gets an array of strings specifying the names of all currently supported fonts. These fonts depend on the formatting device set with the WPF.TextControl.FormattingPrinter property. The method returns null if the WPF.TextControl has not been completely initialized.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.GetSupportedPaperSizes">
			<summary>Gets an array of PaperSize structures specifying the names and the size of all currently supported paper sizes. These paper sizes depend on the formatting device set with the WPF.TextControl.FormattingPrinter property.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.GetTextFields(TXTextControl.TextFieldType)">
			<summary>Returns a collection containing text fields of the specified types.</summary>
			<param name="fieldType">Specifies types of text fields.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.GetXmlElements(System.String)">
			<summary>Returns a collection of XML elements. It is an object of the type XmlElementCollection.</summary>
			<param name="elementName">Specifies the XML element's name.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.GetVersionInfo">
			<summary>Returns an object of the type VersionInfo, which provides information about the installed TX Text Control version.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.ImageAttributesDialog">
			<summary>Opens the dialog box showing its first tab.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.ImageAttributesDialog(System.Int32)">
			<summary>Opens the dialog box showing the specified tab.</summary>
			<param name="activeTab">Specifies the index of the tab, zero-based, that is displayed when the tabbed dialog box is opened.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.LanguageDialog">
			<summary>Invokes the built-in dialog box for setting the language of the selected text.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.ListFormatDialog">
			<summary>Invokes the built-in dialog box for setting formatting attributes of bulleted and numbered lists.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Load">
			<summary>Opens a dialog box to select a file and loads the text from that file.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Load(TXTextControl.StreamType)">
			<summary>Opens a dialog box to select a file in the specified format and loads the text from that file.</summary>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Load(System.String,TXTextControl.StreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified file.</summary>
			<param name="path">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Load(System.IO.FileStream,TXTextControl.StreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified file stream.</summary>
			<param name="fileStream">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Load(System.Byte[],TXTextControl.BinaryStreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified byte array.</summary>
			<param name="binaryData">Specifies a byte array from which the data is loaded.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Load(System.String,TXTextControl.StringStreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified string.</summary>
			<param name="stringData">Specifies a string from which the data is loaded.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Load(TXTextControl.StreamType,TXTextControl.LoadSettings)">
			<summary>Opens a dialog box to select a file in the specified format and loads the text from that file using the specified special settings.</summary>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Load(System.String,TXTextControl.StreamType,TXTextControl.LoadSettings)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified file and loaded using the given special settings.</summary>
			<param name="path">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Load(System.IO.FileStream,TXTextControl.StreamType,TXTextControl.LoadSettings)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified file stream and loaded using the given special settings.</summary>
			<param name="fileStream">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Load(System.Byte[],TXTextControl.BinaryStreamType,TXTextControl.LoadSettings)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified byte array and loaded using the given special settings.</summary>
			<param name="binaryData">Specifies a byte array from which the data is loaded.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Load(System.String,TXTextControl.StringStreamType,TXTextControl.LoadSettings)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified string and loaded using the given special settings.</summary>
			<param name="stringData">Specifies a string from which the data is loaded.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
			<param name="loadSettings">Specifies a LoadSettings object with additional information and settings for the load operation.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnAdaptFont(TXTextControl.AdaptFontEventArgs)">
			<summary>Raises the AdaptFont event.</summary>
			<param name="e">Specifies an AdaptFontEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnBarcodeClicked(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeClicked event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnBarcodeCreated(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeCreated event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnBarcodeDeleted(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeDeleted event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnBarcodeDeselected(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeDeselected event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnBarcodeDoubleClicked(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeDoubleClicked event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnBarcodeMoved(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeMoved event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnBarcodeRightClicked(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeRightClicked event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnBarcodeSelected(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeSelected event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnBarcodeSized(DataVisualization.BarcodeEventArgs)">
			<summary>Raises the BarcodeSized event.</summary>
			<param name="e">Specifies an BarcodeEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnChanged(System.EventArgs)">
			<summary>Raises the Changed event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnCharFormatChanged(System.EventArgs)">
			<summary>Raises the CharFormatChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnDocumentLinkClicked(TXTextControl.DocumentLinkEventArgs)">
			<summary>Raises the DocumentLinkClicked event.</summary>
			<param name="e">Specifies an DocumentLinkEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnDocumentLoaded(System.EventArgs)">
			<summary>Raises the DocumentLoaded event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnDrawingActivated(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingActivated event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnDrawingClicked(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingClicked event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnDrawingCreated(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingCreated event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnDrawingDeactivated(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingDeactivated event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnDrawingDeleted(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingDeleted event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnDrawingDeselected(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingDeselected event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnDrawingDoubleClicked(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingDoubleClicked event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnDrawingMoved(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingMoved event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnDrawingRightClicked(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingRightClicked event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnDrawingSelected(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingSelected event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnDrawingSized(DataVisualization.DrawingEventArgs)">
			<summary>Raises the DrawingSized event.</summary>
			<param name="e">Specifies an DrawingEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnFormattingStyleListChanged(System.EventArgs)">
			<summary>Raises the FormattingStyleListChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnFrameClicked(TXTextControl.FrameEventArgs)">
			<summary>Raises the FrameClicked event.</summary>
			<param name="e">Specifies an FrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnFrameDeselected(TXTextControl.FrameEventArgs)">
			<summary>Raises the FrameDeselected event.</summary>
			<param name="e">Specifies an FrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnFrameDoubleClicked(TXTextControl.FrameEventArgs)">
			<summary>Raises the FrameDoubleClicked event.</summary>
			<param name="e">Specifies an FrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnFrameLayoutChanged(TXTextControl.FrameEventArgs)">
			<summary>Raises the FrameLayoutChanged event.</summary>
			<param name="e">Specifies an FrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnFrameMoved(TXTextControl.FrameEventArgs)">
			<summary>Raises the FrameMoved event.</summary>
			<param name="e">Specifies an FrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnFrameRightClicked(TXTextControl.FrameEventArgs)">
			<summary>Raises the FrameRightClicked event.</summary>
			<param name="e">Specifies an FrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnFrameSelected(TXTextControl.FrameEventArgs)">
			<summary>Raises the FrameSelected event.</summary>
			<param name="e">Specifies an FrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnFrameSized(TXTextControl.FrameEventArgs)">
			<summary>Raises the FrameSized event.</summary>
			<param name="e">Specifies an FrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnHeaderFooterActivated(TXTextControl.HeaderFooterEventArgs)">
			<summary>Raises the HeaderFooterActivated event.</summary>
			<param name="e">Specifies an HeaderFooterEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnHeaderFooterDeactivated(TXTextControl.HeaderFooterEventArgs)">
			<summary>Raises the HeaderFooterDeactivated event.</summary>
			<param name="e">Specifies an HeaderFooterEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnHExpanded(System.EventArgs)">
			<summary>Raises the HExpanded event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnHScroll(System.EventArgs)">
			<summary>Raises the HScroll event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnHShrunk(System.EventArgs)">
			<summary>Raises the HShrunk event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnHypertextLinkClicked(TXTextControl.HypertextLinkEventArgs)">
			<summary>Raises the HypertextLinkClicked event.</summary>
			<param name="e">Specifies an HypertextLinkEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnHyphenateWord(TXTextControl.HyphenateWordEventArgs)">
			<summary>Raises the HyphenateWord event.</summary>
			<param name="e">Specifies an HyphenateWordEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnImageClicked(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageClicked event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnImageCreated(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageCreated event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnImageDeleted(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageDeleted event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnImageDeselected(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageDeselected event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnImageDoubleClicked(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageDoubleClicked event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnImageMoved(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageMoved event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnImageRightClicked(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageRightClicked event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnImageSelected(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageSelected event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnImageSized(TXTextControl.ImageEventArgs)">
			<summary>Raises the ImageSized event.</summary>
			<param name="e">Specifies an ImageEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnInputFormattingStyleChanged(System.EventArgs)">
			<summary>Raises the InputFormattingStyleChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnInputParagraphChanged(System.EventArgs)">
			<summary>Raises the InputParagraphChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnInputPositionChanged(System.EventArgs)">
			<summary>Raises the InputPositionChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnPageChanged(System.EventArgs)">
			<summary>Raises the PageChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnPageFormatChanged(System.EventArgs)">
			<summary>Raises the PageFormatChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnParagraphFormatChanged(System.EventArgs)">
			<summary>Raises the ParagraphFormatChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnSectionChanged(System.EventArgs)">
			<summary>Raises the SectionChanged event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnSpellCheckText(TXTextControl.SpellCheckTextEventArgs)">
			<summary>Raises the SpellCheckText event.</summary>
			<param name="e">Specifies an SpellCheckTextEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnSubTextPartClicked(TXTextControl.SubTextPartEventArgs)">
			<summary>Raises the SubTextPartClicked event.</summary>
			<param name="e">Specifies an SubTextPartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnSubTextPartDoubleClicked(TXTextControl.SubTextPartEventArgs)">
			<summary>Raises the SubTextPartDoubleClicked event.</summary>
			<param name="e">Specifies an SubTextPartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnSubTextPartEntered(TXTextControl.SubTextPartEventArgs)">
			<summary>Raises the SubTextPartEntered event.</summary>
			<param name="e">Specifies an SubTextPartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnSubTextPartLeft(TXTextControl.SubTextPartEventArgs)">
			<summary>Raises the SubTextPartLeft event.</summary>
			<param name="e">Specifies an SubTextPartEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTableCreated(TXTextControl.TableEventArgs)">
			<summary>Raises the TableCreated event.</summary>
			<param name="e">Specifies an TableEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTableDeleted(TXTextControl.TableEventArgs)">
			<summary>Raises the TableDeleted event.</summary>
			<param name="e">Specifies an TableEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTableFormatChanged(TXTextControl.TableEventArgs)">
			<summary>Raises the TableFormatChanged event.</summary>
			<param name="e">Specifies an TableEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextContextMenuOpening(TXTextControl.TextContextMenuEventArgs)">
			<summary>Raises the TextContextMenuOpening event.</summary>
			<param name="e">Specifies an WPF.TextContextMenuEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFieldChanged(TXTextControl.TextFieldEventArgs)">
			<summary>Raises the TextFieldChanged event.</summary>
			<param name="e">Specifies an TextFieldEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFieldClicked(TXTextControl.TextFieldEventArgs)">
			<summary>Raises the TextFieldClicked event.</summary>
			<param name="e">Specifies an TextFieldEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFieldCreated(TXTextControl.TextFieldEventArgs)">
			<summary>Raises the TextFieldCreated event.</summary>
			<param name="e">Specifies an TextFieldEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFieldDoubleClicked(TXTextControl.TextFieldEventArgs)">
			<summary>Raises the TextFieldDoubleClicked event.</summary>
			<param name="e">Specifies an TextFieldEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFieldDeleted(TXTextControl.TextFieldEventArgs)">
			<summary>Raises the TextFieldDeleted event.</summary>
			<param name="e">Specifies an TextFieldEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFieldEntered(TXTextControl.TextFieldEventArgs)">
			<summary>Raises the TextFieldEntered event.</summary>
			<param name="e">Specifies an TextFieldEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFieldLeft(TXTextControl.TextFieldEventArgs)">
			<summary>Raises the TextFieldLeft event.</summary>
			<param name="e">Specifies an TextFieldEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFrameActivated(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameActivated event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFrameAppearanceChanged(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameAppearanceChanged event.</summary>
			<param name="e">Specifies a TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFrameClicked(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameClicked event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFrameCreated(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameCreated event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFrameDeactivated(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameDeactivated event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFrameDeleted(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameDeleted event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFrameDeselected(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameDeselected event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFrameDoubleClicked(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameDoubleClicked event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFrameMoved(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameMoved event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFrameRightClicked(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameRightClicked event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFrameSelected(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameSelected event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnTextFrameSized(TXTextControl.TextFrameEventArgs)">
			<summary>Raises the TextFrameSized event.</summary>
			<param name="e">Specifies an TextFrameEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnVExpanded(System.EventArgs)">
			<summary>Raises the VExpanded event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnVScroll(System.EventArgs)">
			<summary>Raises the VScroll event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnVShrunk(System.EventArgs)">
			<summary>Raises the VShrunk event.</summary>
			<param name="e">Specifies an EventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnXmlInvalid(TXTextControl.XmlErrorEventArgs)">
			<summary>Raises the XmlInvalid event.</summary>
			<param name="e">Specifies an XmlErrorEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.OnXmlNotWellFormed(TXTextControl.XmlErrorEventArgs)">
			<summary>Raises the XmlNotWellFormed event.</summary>
			<param name="e">Specifies an XmlErrorEventArgs object that contains the event data.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.PageColorDialog">
			<summary>Invokes the built-in dialog box for setting the page color.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.ParagraphFormatDialog">
			<summary>Opens the dialog box showing its first tab.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.ParagraphFormatDialog(System.Int32)">
			<summary>Opens the dialog box showing the specified tab.</summary>
			<param name="activeTab">Specifies the index of the tab, zero-based, that is displayed when the tabbed dialog box is opened.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Paste">
			<summary>Replaces the current selection in the Text Control with the contents of the Clipboard. If the data in the clipboard are provided in several formats, the format with the maximum of information is used.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Paste(TXTextControl.ClipboardFormat)">
			<summary>Replaces the current selection in the Text Control with the contents of the Clipboard. Only data provided in the specified format is inserted.</summary>
			<param name="format">Specifies the format to paste.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Print(System.String,System.Boolean)">
			<summary>Opens the standard print dialog to get printer settings and prints the document.</summary>
			<param name="docName">Specifies the document's name.</param>
			<param name="useLastPrinterSettings">If this parameter is set to true, the dialog box is initialized with the user settings of the previous call.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Print(System.String,System.Windows.Controls.PageRange,System.Int32,System.Printing.Collation)">
			<summary>Prints a Text Control document with the standard printer using the specified page range, copy count and collation settings.</summary>
			<param name="docName">Specifies the document's name.</param>
			<param name="pageRange">Specifies a System.Windows.Controls.PageRange structure specifying the range of pages to print.</param>
			<param name="copyCount">Specifies the number of copies to print.</param>
			<param name="collation">Specifies a System.Printing.Collation member specifying whether the printer collates output.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Print(System.String,System.String,System.Windows.Controls.PageRange,System.Int32,System.Printing.Collation)">
			<summary>Prints a Text Control document with the specified printer using the specified page range, copy count and collation settings.</summary>
			<param name="docName">Specifies the document's name.</param>
			<param name="printerName">Specifies the name of the printer to which the output is sent.</param>
			<param name="pageRange">Specifies a System.Windows.Controls.PageRange structure specifying the range of pages to print.</param>
			<param name="copyCount">Specifies the number of copies to print.</param>
			<param name="collation">Specifies a System.Printing.Collation member specifying whether the printer collates output.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Redo">
			<summary>Redoes the last Text Control operation.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Replace">
			<summary>Opens the built-in Replace dialog box.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.ResetContents">
			<summary>Deletes the entire contents of a Text Control.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Save">
			<summary>Opens a file save dialogbox and saves the complete contents of a document in a file.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Save(TXTextControl.StreamType)">
			<summary>Opens a file save dialogbox and saves the complete contents of a document in a file with the specified format.</summary>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Save(System.String,TXTextControl.StreamType)">
			<summary>Saves the complete contents of a document in the specified file with the specified format.</summary>
			<param name="path">Specifies a file into which the data is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Save(System.IO.FileStream,TXTextControl.StreamType)">
			<summary>Saves the complete contents of a document in the specified file stream with the specified format.</summary>
			<param name="fileStream">Specifies a file into which the data is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Save(System.Byte[]@,TXTextControl.BinaryStreamType)">
			<summary>Saves the complete contents of a document in the specified byte array with the specified format.</summary>
			<param name="binaryData">Specifies a byte array into which the data is saved.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Save(System.String@,TXTextControl.StringStreamType)">
			<summary>Saves the complete contents of a document as a string with the specified format.</summary>
			<param name="stringData">Specifies a string into which the data is saved.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Save(TXTextControl.StreamType,TXTextControl.SaveSettings)">
			<summary>Opens a file save dialogbox and saves the complete contents of a document in a file with the specified format and special settings.</summary>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Save(System.String,TXTextControl.StreamType,TXTextControl.SaveSettings)">
			<summary>Saves the complete contents of a document in the specified file using the specified format and special settings.</summary>
			<param name="path">Specifies a file into which the data is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Save(System.IO.FileStream,TXTextControl.StreamType,TXTextControl.SaveSettings)">
			<summary>Saves the complete contents of a document in the specified file stream using the specified format and special settings.</summary>
			<param name="fileStream">Specifies a file into which the data is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Save(System.Byte[]@,TXTextControl.BinaryStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the complete contents of a document in the specified byte array using the specified format and special settings.</summary>
			<param name="binaryData">Specifies a byte array into which the data is saved.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Save(System.String@,TXTextControl.StringStreamType,TXTextControl.SaveSettings)">
			<summary>Saves the complete contents of a document as a string using the specified format and special settings.</summary>
			<param name="stringData">Specifies a string into which the data is saved.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
			<param name="saveSettings">Specifies a SaveSettings object with additional information and settings for the save operation.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.SectionFormatDialog(System.Int32)">
			<summary>Invokes the built-in tabbed dialog box for setting section attributes. These are page settings such as margins, size and orientation and all settings concerning headers and footers.</summary>
			<param name="activeTab">Specifies the index of the tab, zero-based, that is displayed when the tabbed dialog box is opened.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Select(System.Int32,System.Int32)">
			<summary>Selects text within the Text Control.</summary>
			<param name="start">Specifies the selection's start position.</param>
			<param name="length">Specifies the number of selected characters.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.SelectAll">
			<summary>Selects all text in the Text Control.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.SpellCheckDialog">
			<summary>Invokes the built-in dialog box for correcting misspelled words.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.SpellCheckDialog(System.Object)">
			<summary>Invokes the built-in dialog box for correcting misspelled words using the specified dictionary for making suggestions.</summary>
			<param name="suggestionDictionary">Specifies the dictionary used for making suggestions.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.TabDialog">
			<summary>Invokes the built-in dialog box for setting tabs.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.TableFormatDialog">
			<summary>Opens the dialog box showing its first tab.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.TableFormatDialog(System.Int32)">
			<summary>Opens the dialog box showing the specified tab.</summary>
			<param name="activeTab">Specifies the index of the tab, zero-based, that is displayed when the tabbed dialog box is opened.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.TextBackColorDialog">
			<summary>Invokes the built-in dialog box for setting the background color of the text.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.TextFrameAttributesDialog">
			<summary>Opens the dialog box showing its first tab.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.TextFrameAttributesDialog(System.Int32)">
			<summary>Opens the dialog box showing the specified tab.</summary>
			<param name="activeTab">Specifies the index of the tab, zero-based, that is displayed when the tabbed dialog box is opened.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Undo">
			<summary>Undoes the last edit operation in the Text Control.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Zoom(System.Int32)">
			<summary>Zooms the contents of the TextControl using the specified zoom factor.</summary>
			<param name="zoomFactor">Specifies the zoom factor, in percent.</param>
		</member>
		<member name="M:TXTextControl.WPF.TextControl.Zoom(TXTextControl.ZoomOption)">
			<summary>Zooms the contents of the TextControl using the specified option.</summary>
			<param name="zoomOption">Specifies one of the ZoomOption values.</param>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.AcceptsTab">
			<summary>Gets or sets a value indicating whether pressing the TAB key types a TAB character in the control instead of moving the focus to the next control in the tab order.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.AllowDrag">
			<summary>Gets or sets a value indicating whether the control can be a source of a Drag&amp;Drop operation.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.AllowDrop">
			<summary>Inherited from System.Windows.UIElement.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.ApplicationFields">
			<summary>Gets a collection of all application fields contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.AutoControlSize">
			<summary>Gets or sets values that enable automatic expansion or shrinking of a Text Control's width or height depending on the currently contained text.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.Barcodes">
			<summary>Gets a collection of all barcodes contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.Baseline">
			<summary>Gets or sets the baseline alignment, in twips, of the Text Control.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.BorderThickness">
			<summary>Gets or sets the border thickness of the Text Control.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.ButtonBar">
			<summary>Specifies the button bar control to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.CanCopy">
			<summary>Informs whether a part of a Text Control document has been selected and can be copied to the clipboard.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.CanPaste">
			<summary>Informs whether the clipboard contains a format that can be pasted into a Text Control document.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.CanRedo">
			<summary>Informs whether an operation can be re-done using the Redo method.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.CanUndo">
			<summary>Gets a value indicating whether the user can undo the previous operation in a Text Control.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.CaretWidth">
			<summary>Gets or sets the width of the caret in pixels.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.ControlChars">
			<summary>Specifies if control characters are visible or not.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.DisplayColors">
			<summary>Gets or sets the colors of the text control.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.DocumentLinks">
			<summary>Gets a collection of all document links contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.DocumentTargetMarkers">
			<summary>Gets or sets a value indicating that markers for hypertext targets are shown or not.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.DocumentTargets">
			<summary>Gets a collection of all targets contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.DrawingMarkerLines">
			<summary>Specifies whether a marker frame is shown around a drawing to indicate its position and size.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.Drawings">
			<summary>Gets a collection of all drawings contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.DropFormats">
			<summary>Gets or sets the formats of data the control can accept when the user drags it onto the control.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.EditMode">
			<summary>Gets or sets a value indicating whether text in the Text Control is read-only, can be selected or is editable.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.FieldCursor">
			<summary>Gets or sets the cursor that is displayed when the mouse pointer is over a marked text field.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.FontFamily">
			<summary>Gets or sets the font family of the text control.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.FontSettings">
			<summary>Gets a FontSettings object which provides properties determining which fonts can be used in a document.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.FontSize">
			<summary>Gets or sets the font size of the text control in device-independent units (1/96th inch).</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.FontStyle">
			<summary>Gets or sets the font style of the text control.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.FontUnderlineStyle">
			<summary>Gets or sets the underlining style for the text displayed by the control.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.FontWeight">
			<summary>Gets or sets the weight or thickness of the text control's font.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.FormattingPrinter">
			<summary>Gets or sets the name of a printer the text dimensions and capabilities of which are used to format the document.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.Frames">
			<summary>Gets a collection of all images, textframes, barcodes and drawings contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.GetPages">
			<summary>Gets a collection of all pages in the document.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.HeaderFooterActivationStyle">
			<summary>Gets or sets a value specifying the activation style for headers and footers.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.HeaderFooterFrameStyle">
			<summary>Gets or sets a value specifying the frame for activated headers and footers.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.HeadersAndFooters">
			<summary>Gets a collection of all headers and footers the current document contains.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.HideSelection">
			<summary>Gets or sets a value indicating whether the selected text in the Text Control remains highlighted when the control loses focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.HorizontalScrollBarVisibility">
			<summary>Gets or sets a value that indicates whether a horizontal scroll bar is shown.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.HypertextLinks">
			<summary>Gets a collection of all hypertext links contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.Images">
			<summary>Gets a collection of all images contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.InlineStyles">
			<summary>Gets a collection of all inline styles the current document contains.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.InputFormat">
			<summary>Gets an object of the type InputFormat which represents all formatting attributes at the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.InputPosition">
			<summary>Gets or sets the current text input position.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.InsertionMode">
			<summary>Specifies whether text is inserted or overwrites existing text.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.IsHyphenationEnabled">
			<summary>Gets or sets a value indicating whether hyphenation is active or not.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.IsLanguageDetectionEnabled">
			<summary>Gets or sets a value indicating whether language detection is active or not.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.IsSpellCheckingEnabled">
			<summary>Gets or sets a value indicating whether spell checking is active or not.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.IsTabStop">
			<summary>Gets or sets a value that indicates whether a text control is included in tab navigation.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.IsUndoEnabled">
			<summary>Gets or sets a value indicating whether the undo buffer is active or not.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.Landscape">
			<summary>Gets or sets a value indicating whether the page orientation is landscape or portrait.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.Lines">
			<summary>Gets a collection of all lines contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.ListFormat">
			<summary>Gets or sets the type and the formatting attributes of a bulleted or numbered list.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.MisspelledWords">
			<summary>Gets a collection of all misspelled words contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.PageMargins">
			<summary>Gets or sets the margins for the pages of the current document.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.Pages">
			<summary>Gets the number of pages contained in the current document.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.PageSize">
			<summary>Specifies the width and height of the pages for the current document.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.PageUnit">
			<summary>Gets or sets the measure used for page sizes and page margins.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.ParagraphFormat">
			<summary>Gets or sets the paragraph formatting attributes of the text displayed by the control.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.Paragraphs">
			<summary>Gets a collection of all paragraphs contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.ParagraphStyles">
			<summary>Gets a collection of all paragraph styles the current document contains.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.PermanentControlChars">
			<summary>Gets or sets a value indicating which control characters are shown permanently on the screen.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.RedoActionName">
			<summary>Gets a string that represents the name of the action that will be performed when a call to the Redo method is made.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.RibbonFormattingTab">
			<summary>Specifies the name of the WPF.RibbonFormattingTab object to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.RibbonFrameLayoutTab">
			<summary>Specifies the name of the WPF.RibbonFrameLayoutTab object to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.RibbonInsertTab">
			<summary>Specifies the name of the WPF.RibbonInsertTab object to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.RibbonPageLayoutTab">
			<summary>Specifies the name of the WPF.RibbonPageLayoutTab object to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.RibbonReportingTab">
			<summary>Specifies the name of the WPF.RibbonReportingTab object to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.RibbonProofingTab">
			<summary>Specifies the name of the WPF.RibbonProofingTab object to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.RibbonTableLayoutTab">
			<summary>Specifies the name of the WPF.RibbonTableLayoutTab object to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.RibbonViewTab">
			<summary>Specifies the name of the WPF.RibbonViewTab object to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.RulerBar">
			<summary>Specifies the horizontal ruler bar control to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.ScrollLocation">
			<summary>Gets or sets the coordinates, in twips, of the upper-left corner of the document's visible part relative to the upper-left corner of the complete document.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.Sections">
			<summary>Gets a collection of all sections in the document.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.Selection">
			<summary>Gets or sets the current selection in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.SelectionViewMode">
			<summary>Specifies whether text selections are displayed with a transparent bitmap or through inverting the text.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.SpellCheckContextMenu">
			<summary>Specifies the context menu which is used when the end-user right-clicks a misspelled word.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.SpellChecker">
			<summary>Specifies the spell checking component to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.StatusBar">
			<summary>Specifies the status bar control to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.SubTextParts">
			<summary>Gets a collection of all subtextparts contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.TabIndex">
			<summary>Gets or sets the tab index of the text control.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.Tables">
			<summary>Gets a collection of all tables contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.Text">
			<summary>Gets or sets the text contents of the text control.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.TextChars">
			<summary>Gets a collection of all characters contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.TextFields">
			<summary>Gets a collection of all standard text fields contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.TextFrameMarkerLines">
			<summary>Specifies whether text frames that have no border line are shown with marker lines.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.TextFrames">
			<summary>Gets a collection of all text frames contained in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.TextParts">
			<summary>Gets a collection of all main text parts the current document contains.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.UndoActionName">
			<summary>Gets a string that represents the name of the action that will be performed when a call to the Undo method is made.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.VerticalRulerBar">
			<summary>Specifies the vertical ruler bar control to be used with a TextControl.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.VerticalScrollBarVisibility">
			<summary>Gets or sets a value that indicates whether a vertical scroll bar is shown.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.ViewMode">
			<summary>Gets or sets the mode in which Text Control displays its contents.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.XmlEditMode">
			<summary>Gets or sets a value specifying whether Text Control operates in an edit mode that validates the XML document according to the document's DTD.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControl.ZoomFactor">
			<summary>Gets or sets the zoom factor, in percent, for a Text Control.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.AdaptFont">
			<summary>Occurs for each font that must be adapted, because it is not supported.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.BarcodeClicked">
			<summary>Occurs when a barcode has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.BarcodeCreated">
			<summary>Occurs when a new barcode has been created.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.BarcodeDeleted">
			<summary>Occurs when a barcode has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.BarcodeDoubleClicked">
			<summary>Occurs when a barcode has been doubleclicked on.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.BarcodeMoved">
			<summary>Occurs when a barcode has been moved.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.BarcodeRightClicked">
			<summary>Occurs when a barcode has been clicked on with the right mouse button.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.BarcodeSelected">
			<summary>Occurs when a barcode has been selected.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.BarcodeDeselected">
			<summary>Occurs when a barcode has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.BarcodeSized">
			<summary>Occurs when a barcode has been sized.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.Changed">
			<summary>Indicates that the contents of a document have been changed.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.CharFormatChanged">
			<summary>Occurs when the character formatting attributes either of the selected characters or the current text input position have been changed.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.DocumentLinkClicked">
			<summary>Occurs when a text field has been clicked on that represents a link to a target in the document.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.DocumentLoaded">
			<summary>Occurs when a new document has been loaded.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.DrawingActivated">
			<summary>Occurs when a drawing has been activated.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.DrawingClicked">
			<summary>Occurs when a drawing has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.DrawingCreated">
			<summary>Occurs when a new drawing has been created.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.DrawingDeleted">
			<summary>Occurs when a drawing has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.DrawingDeactivated">
			<summary>Occurs when a drawing has been deactivated.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.DrawingDeselected">
			<summary>Occurs when a drawing has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.DrawingDoubleClicked">
			<summary>Occurs when a drawing has been doubleclicked on.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.DrawingMoved">
			<summary>Occurs when a drawing has been moved.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.DrawingRightClicked">
			<summary>Occurs when a drawing has been clicked on with the right mouse button.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.DrawingSelected">
			<summary>Occurs when a drawing has been selected.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.DrawingSized">
			<summary>Occurs when a drawing has been sized.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.FormattingStyleListChanged">
			<summary>Occurs after one or more formatting styles have been added or removed.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.FrameClicked">
			<summary>Occurs when a frame (image, text frame, chart, barcode or drawing) has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.FrameDeselected">
			<summary>Occurs when a frame (image, text frame, chart, barcode or drawing) has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.FrameDoubleClicked">
			<summary>Occurs when a frame (image, text frame, chart, barcode or drawing) has been doubleclicked on.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.FrameLayoutChanged">
			<summary>Occurs when the layout of a frame (image, text frame, chart, barcode or drawing) has been changed.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.FrameMoved">
			<summary>Occurs when a frame (image, text frame, chart, barcode or drawing) has been moved.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.FrameRightClicked">
			<summary>Occurs when a frame (image, text frame, chart, barcode or drawing) has been clicked on with the right mouse button.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.FrameSelected">
			<summary>Occurs when a frame (image, text frame, chart, barcode or drawing) has been selected.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.FrameSized">
			<summary>Occurs when a frame (image, text frame, chart, barcode or drawing) has been sized.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.HeaderFooterActivated">
			<summary>Occurs when a header or footer has been activated.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.HeaderFooterDeactivated">
			<summary>Occurs when a header or footer has been deactivated.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.HExpanded">
			<summary>Occurs when the Text Control has automatically expanded its size horizontally.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.HScroll">
			<summary>Occurs when the horizontal scroll position has been changed.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.HShrunk">
			<summary>Occurs when the Text Control has automatically shrunk its size horizontally.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.HypertextLinkClicked">
			<summary>Occurs when a text field has been clicked on that represents the source of a hypertext link.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.HyphenateWord">
			<summary>Occurs, if a word does not fit in the line and must be hyphenated.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.ImageClicked">
			<summary>Occurs when an image has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.ImageCreated">
			<summary>Occurs when a new image has been created.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.ImageDeleted">
			<summary>Occurs when an image has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.ImageDeselected">
			<summary>Occurs when an image has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.ImageDoubleClicked">
			<summary>Occurs when an image has been doubleclicked on.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.ImageMoved">
			<summary>Occurs when an inserted image has been moved.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.ImageRightClicked">
			<summary>Occurs when an image has been clicked on with the right mouse button.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.ImageSelected">
			<summary>Occurs when an image has been selected.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.ImageSized">
			<summary>Occurs when an inserted image has been sized.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.InputFormattingStyleChanged">
			<summary>Occurs after the text input position has been moved to a text part formatted with another style.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.InputParagraphChanged">
			<summary>Occurs when the text input position has been moved to another paragraph.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.InputPositionChanged">
			<summary>Occurs when the text input position has been changed.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.PageChanged">
			<summary>Occurs when the text input position has been moved to another page.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.PageFormatChanged">
			<summary>Occurs when the page format settings have been changed.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.ParagraphFormatChanged">
			<summary>Occurs when the formatting attributes of the selected paragraphs have been changed.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.SectionChanged">
			<summary>Occurs when the text input position has been moved to another section.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.SpellCheckText">
			<summary>Occurs, if the document's text has been altered and the spelling of the new text must be checked.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.SubTextPartClicked">
			<summary>Occurs when a subtextpart has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.SubTextPartDoubleClicked">
			<summary>Occurs when a subtextpart has been double-clicked on.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.SubTextPartEntered">
			<summary>Occurs when the current input position has been moved to a position that belongs to a subtextpart.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.SubTextPartLeft">
			<summary>Occurs when the current input position has left a subtextpart.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TableCreated">
			<summary>Occurs after a new table has been created as a result of a text insertion via the clipboard or when loading a document which contains a table without an identifier.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TableDeleted">
			<summary>Occurs after a table has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TableFormatChanged">
			<summary>Occurs when the design attributes of a selected table have been changed.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextContextMenuOpening">
			<summary>Occurs immedialtely before a built-in context menu will be opened.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFieldChanged">
			<summary>Occurs when the text of a text field has been changed.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFieldClicked">
			<summary>Occurs when a text field has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFieldCreated">
			<summary>Occurs when a text field has been pasted from the clipboard.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFieldDoubleClicked">
			<summary>Occurs when a text field has been double-clicked on.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFieldDeleted">
			<summary>Occurs when a text field has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFieldEntered">
			<summary>Occurs when the current input position has been moved to a position that belongs to a text field.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFieldLeft">
			<summary>Occurs when the current input position has left a text field.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFrameActivated">
			<summary>Occurs when a text frame has been activated.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFrameAppearanceChanged">
			<summary>Occurs when the appearance of a text frame (background color, transparency, border, inner margins) has been changed.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFrameClicked">
			<summary>Occurs when a text frame has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFrameCreated">
			<summary>Occurs when a new text frame has been created.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFrameDeactivated">
			<summary>Occurs when a text frame has been deactivated.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFrameDeleted">
			<summary>Occurs when a text frame has been deleted.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFrameDeselected">
			<summary>Occurs when a text frame has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFrameDoubleClicked">
			<summary>Occurs when a text frame has been doubleclicked on.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFrameMoved">
			<summary>Occurs when a text frame has been moved.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFrameRightClicked">
			<summary>Occurs when a text frame has been clicked on with the right mouse button.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFrameSelected">
			<summary>Occurs when a text frame has been selected.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.TextFrameSized">
			<summary>Occurs when a text frame has been sized.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.VExpanded">
			<summary>Occurs when the Text Control has automatically expanded its size vertically.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.VScroll">
			<summary>Occurs when the vertical scroll position has been changed.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.VShrunk">
			<summary>Occurs when the Text Control has automatically shrunk its size vertically.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.XmlInvalid">
			<summary>Occurs when a loaded or changed XML document cannot be validated with the document type definition (DTD) referenced in the document.</summary>
		</member>
		<member name="E:TXTextControl.WPF.TextControl.XmlNotWellFormed">
			<summary>Occurs when a loaded XML document is not well-formed.</summary>
		</member>
		<member name="T:TXTextControl.WPF.TextControlColors">
			<summary>The WPF.TextControlColors class gets, sets or resets the display colors of a WPF.TextControl control.</summary>
		</member>
		<member name="M:TXTextControl.WPF.TextControlColors.#ctor">
			<summary>Initializes a new instance of the WPF.TextControlColors class. After creating the object with this constuctor, individual colors can be set. If the Colors object is assigned to the WPF.TextControl.DisplayColors property, non-set colors are reset to their system dependent default values.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControlColors.DarkShadowColor">
			<summary>Gets or sets the display color for the shadow at the right and the bottom edge of the pages.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControlColors.DesktopColor">
			<summary>Gets or sets the display color for the area around the pages.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControlColors.HeaderFooterLabelColor">
			<summary>Gets or sets the display color for the label showing which header or footer is activated.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControlColors.HeaderFooterLineColor">
			<summary>Gets or sets the display color for the dividing line between headers and footers and the main text.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControlColors.LightShadowColor">
			<summary>Gets or sets the display color for the shadow at the left and the top edge of the pages.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControlColors.PageBackColor">
			<summary>Gets or sets the display color for the page background.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControlColors.TextBackColor">
			<summary>Gets or sets the background color for the text.</summary>
		</member>
		<member name="P:TXTextControl.WPF.TextControlColors.TextColor">
			<summary>Gets or sets the color for the text.</summary>
		</member>
		<member name="T:TXTextControl.WPF.TextControlDocument">
			<summary>An object of the WPF.TextControlDocument class represents a document and is part of the template of a WPF.TextControl.</summary>
		</member>
		<member name="T:TXTextControl.WPF.TextControlToolBar">
			<summary>The WPF.TextControlToolBar class is the base class of the WPF.RulerBar and the WPF.StatusBar classes.</summary>
		</member>
		<member name="T:TXTextControl.WPF.TextControlToolBarPresenter">
			<summary>A WPF.TextControlToolBarPresenter object is part of the template of a WPF.TextControlToolBar.</summary>
		</member>
		<member name="T:TXTextControl.WPF.Drawing.ShapesContextMenu">
			<summary>The WPF.Drawing.ShapesContextMenu class represents the default context menu of the WPF TXDrawingControl.</summary>
		</member>
		<member name="P:TXTextControl.WPF.Drawing.ShapesContextMenu.SelectedShapesMenuItems">
			<summary>Returns an array of System.Windows.Controls.Control objects that represents those items which are displayed in the context menu strip when the control is right clicked inside a shape.</summary>
		</member>
		<member name="P:TXTextControl.WPF.Drawing.ShapesContextMenu.StandardMenuItems">
			<summary>Returns an array of System.Windows.Controls.Control objects that represents those items which are displayed in the context menu strip when the control is right clicked outside a shape.</summary>
		</member>
		<member name="T:TXTextControl.WPF.Drawing.TXDrawingControl">
			<summary>The WPF.TXDrawingControl class implements a WPF FrameworkElement with features to draw custom or predefined shapes.</summary>
		</member>
		<member name="M:TXTextControl.WPF.Drawing.TXDrawingControl.#ctor">
			<summary>Initializes a new instance of the TXDrawingControl class.</summary>
		</member>
		<member name="M:TXTextControl.WPF.Drawing.TXDrawingControl.ClearUndo">
			<summary>Clears the undo buffer of the TX Drawing Control.</summary>
		</member>
		<member name="M:TXTextControl.WPF.Drawing.TXDrawingControl.Copy">
			<summary>Copies the current selected shapes of the TX Drawing Control to the Clipboard.</summary>
		</member>
		<member name="M:TXTextControl.WPF.Drawing.TXDrawingControl.Cut">
			<summary>Moves the current selected shapes of the TX Drawing Control to the Clipboard.</summary>
		</member>
		<member name="M:TXTextControl.WPF.Drawing.TXDrawingControl.FormatShapesDialog">
			<summary>Opens a dialog to format selected shapes.</summary>
		</member>
		<member name="M:TXTextControl.WPF.Drawing.TXDrawingControl.Load(System.IO.Stream)">
			<summary>Loads shapes data into the TX Drawing Control from a specified object of type System.IO.Stream.</summary>
			<param name="stream">Specifies an object of type System.IO.Stream the data is loaded from.</param>
		</member>
		<member name="M:TXTextControl.WPF.Drawing.TXDrawingControl.Paste">
			<summary>Pastes the content of the clipboard into the TX Drawing Control</summary>
		</member>
		<member name="M:TXTextControl.WPF.Drawing.TXDrawingControl.PrintPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
			<summary>Renders only the displayed shapes on the specified System.Drawing.Graphics object. No activated UI elements are rendered.</summary>
			<param name="graphics">Specifies the object of type System.Drawing.Graphics the displayed shapes are rendered to.</param>
			<param name="position">Specifies the position to draw on the specified System.Drawing.Graphics object.</param>
		</member>
		<member name="M:TXTextControl.WPF.Drawing.TXDrawingControl.PrintPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
			<summary>Renders the displayed shapes on the specified System.Drawing.Graphics object with or without activated UI elements.</summary>
			<param name="graphics">Specifies the object of type System.Drawing.Graphics the displayed shapes are rendered to.</param>
			<param name="position">Specifies the position to draw on the specified System.Drawing.Graphics object.</param>
			<param name="showUIElements">Specifies whether the activated UI elements are rendered on the specified System.Drawing.Graphics object or not.</param>
		</member>
		<member name="M:TXTextControl.WPF.Drawing.TXDrawingControl.Redo">
			<summary>Redoes the last TX Drawing Control operation.</summary>
		</member>
		<member name="M:TXTextControl.WPF.Drawing.TXDrawingControl.Save(System.IO.Stream)">
			<summary>Saves the shapes data to the given object of type System.IO.Stream.</summary>
			<param name="stream">Specifies an object of type System.IO.Stream the data is saved to.</param>
		</member>
		<member name="M:TXTextControl.WPF.Drawing.TXDrawingControl.SaveImage(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
			<summary>Saves the displayed shapes as an image to the specified object of type System.IO.Stream.</summary>
			<param name="imageStream">Specifies an object of type System.IO.Stream the image is saved to.</param>
			<param name="format">Specifies the format used to save the image.</param>
		</member>
		<member name="M:TXTextControl.WPF.Drawing.TXDrawingControl.SaveImage(System.String,System.Drawing.Imaging.ImageFormat)">
			<summary>Saves the displayed shapes as an image to the specified file using the specified format.</summary>
			<param name="imageFileName">Specifies a file the image is saved to.</param>
			<param name="format">Specifies the format used to save the image.</param>
		</member>
		<member name="M:TXTextControl.WPF.Drawing.TXDrawingControl.SelectAll">
			<summary>Selects all shapes in the TX Drawing Control.</summary>
		</member>
		<member name="M:TXTextControl.WPF.Drawing.TXDrawingControl.SetCanvasSize(System.Double,System.Double)">
			<summary>Specifies, pursuant to a ZoomFactor value of 100, the height and width of the canvas. The parameters must be given in twips.</summary>
			<param name="width">Specifies the width of the canvas.</param>
			<param name="height">Specifies the height of the canvas.</param>
		</member>
		<member name="M:TXTextControl.WPF.Drawing.TXDrawingControl.SizeToContent">
			<summary>If any changes of the the displayed shapes' visible bounds require an adaption of the TX Drawing Control bounds, the size and/or location of the control is expanded respectively decreased by the considering value of the considering shape's side(s). The method returns an array of doubles which represent the effected alteration for each control's side (left, top, right, bottom) in twips.</summary>
		</member>
		<member name="M:TXTextControl.WPF.Drawing.TXDrawingControl.Undo">
			<summary>Undoes the last edit operation in the TX Drawing Control.</summary>
		</member>
		<member name="P:TXTextControl.WPF.Drawing.TXDrawingControl.BackColor">
			<summary>Gets or sets the TX Drawing Control's back color.</summary>
		</member>
		<member name="P:TXTextControl.WPF.Drawing.TXDrawingControl.BorderColor">
			<summary>Gets or sets the TX Drawing Control's border line color.The default value is null and represents the color System.Windows.SystemColors.WindowTextColor.</summary>
		</member>
		<member name="P:TXTextControl.WPF.Drawing.TXDrawingControl.BorderWidth">
			<summary>Gets or sets the TX Drawing Control's border line width.</summary>
		</member>
		<member name="P:TXTextControl.WPF.Drawing.TXDrawingControl.CanCopy">
			<summary>Informs whether shapes are selected which can be copied to the internal clipboard.</summary>
		</member>
		<member name="P:TXTextControl.WPF.Drawing.TXDrawingControl.CanPaste">
			<summary>Informs whether the internal clipboard contains shapes that can be pasted into the TX Drawing Control.</summary>
		</member>
		<member name="P:TXTextControl.WPF.Drawing.TXDrawingControl.CanRedo">
			<summary>Informs whether an operation can be re-done using the Redo method.</summary>
		</member>
		<member name="P:TXTextControl.WPF.Drawing.TXDrawingControl.CanUndo">
			<summary>Gets a value indicating whether the user can undo the previous operation in the TX Drawing Control.</summary>
		</member>
		<member name="P:TXTextControl.WPF.Drawing.TXDrawingControl.IsCanvasVisible">
			<summary>Gets a value whether the TX Drawing Control is interpreted as canvas or not.</summary>
		</member>
		<member name="P:TXTextControl.WPF.Drawing.TXDrawingControl.Selection">
			<summary>Gets an object of type Drawing.Selection that represents the current selected shapes inside the TX Drawing Control.</summary>
		</member>
		<member name="P:TXTextControl.WPF.Drawing.TXDrawingControl.Shapes">
			<summary>Gets an object of type ShapeCollection that represents those shapes which are displayed inside the TX Drawing Control.</summary>
		</member>
		<member name="P:TXTextControl.WPF.Drawing.TXDrawingControl.ZoomFactor">
			<summary>Gets or sets the zoom factor, in percent, for the TX Drawing Control.</summary>
		</member>
		<member name="E:TXTextControl.WPF.Drawing.TXDrawingControl.AdaptBounds">
			<summary>Indicates that the visible bounds of the displayed shapes have been changed (by changing the shape's angle, outline width, yellow adjust rectangles or the control's border width) in so far that the control requires an update of its bounds.</summary>
		</member>
		<member name="E:TXTextControl.WPF.Drawing.TXDrawingControl.Changed">
			<summary>Indicates that the number or formatting of the displayed shapes has been changed.</summary>
		</member>
		<member name="E:TXTextControl.WPF.Drawing.TXDrawingControl.ShapeAdjusted">
			<summary>Occurs when a shape has been adjusted by using its yellow adjust rectangle.</summary>
		</member>
		<member name="E:TXTextControl.WPF.Drawing.TXDrawingControl.ShapeClicked">
			<summary>Occurs when a shape has been clicked on.</summary>
		</member>
		<member name="E:TXTextControl.WPF.Drawing.TXDrawingControl.ShapeCreated">
			<summary>Occurs when a new shape has been created.</summary>
		</member>
		<member name="E:TXTextControl.WPF.Drawing.TXDrawingControl.ShapeDeleted">
			<summary>Occurs when a shape has been deleted from the TX Drawing Control's shapes collection.</summary>
		</member>
		<member name="E:TXTextControl.WPF.Drawing.TXDrawingControl.ShapeDeselected">
			<summary>Occurs when a shape has been deselected.</summary>
		</member>
		<member name="E:TXTextControl.WPF.Drawing.TXDrawingControl.ShapeFlipped">
			<summary>Occurs when a shape has been flipped.</summary>
		</member>
		<member name="E:TXTextControl.WPF.Drawing.TXDrawingControl.ShapeFormatChanged">
			<summary>Occurs when shape formatting attributes which cannot be handled with the built-in mouse interface have been changed.</summary>
		</member>
		<member name="E:TXTextControl.WPF.Drawing.TXDrawingControl.ShapeMoved">
			<summary>Occurs when a shape has been moved with the built-in mouse interface.</summary>
		</member>
		<member name="E:TXTextControl.WPF.Drawing.TXDrawingControl.ShapeSelected">
			<summary>Occurs when a shape has been selected.</summary>
		</member>
		<member name="E:TXTextControl.WPF.Drawing.TXDrawingControl.ShapeSized">
			<summary>Occurs when a shape has been sized with the built-in mouse interface.</summary>
		</member>
		<member name="E:TXTextControl.WPF.Drawing.TXDrawingControl.ViewChanged">
			<summary>Occurs when UI manipulations such as shape moving or selection changing have caused the view to change.</summary>
		</member>
		<member name="T:TXTextControl.Web.HeaderFooter">
			<summary>An instance of the Web.HeaderFooter class represents a header or footer in a Text Control document.</summary>
		</member>
		<member name="P:TXTextControl.Web.HeaderFooter.Section">
			<summary>Returns the number of the section to which the header or footer belongs.</summary>
		</member>
		<member name="P:TXTextControl.Web.HeaderFooter.Type">
			<summary>Gets the type of the header or footer.</summary>
		</member>
		<member name="T:TXTextControl.Web.IFormattedText">
			<summary>The Web.IFormattedText interface contains properties common to all text parts in a TX Text Control document.</summary>
		</member>
		<member name="P:TXTextControl.Web.IFormattedText.Selection">
			<summary>Gets or sets the current selection.</summary>
		</member>
		<member name="T:TXTextControl.Web.MainText">
			<summary>The Web.MainText class represents the main text of a TX Text Control document.</summary>
		</member>
		<member name="T:TXTextControl.Web.Selection">
			<summary>The Web.Selection class describes and handles the position and length of a text selection.</summary>
		</member>
		<member name="M:TXTextControl.Web.Selection.#ctor">
			<summary>Creates an empty Selection object with all properties set to their default values.</summary>
		</member>
		<member name="M:TXTextControl.Web.Selection.#ctor(System.Int32,System.Int32)">
			<summary>Creates an instance of the Web.Selection class with the specified start value and length.</summary>
			<param name="start">Specifies the selection's start position.</param>
			<param name="length">Specifies the number of selected characters.</param>
		</member>
		<member name="M:TXTextControl.Web.Selection.Load(System.String,Web.StreamType)">
			<summary>Exchanges the currently selected text with text in the specified format. The new text is read from the specified file.</summary>
			<param name="path">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.Selection.Load(System.IO.FileStream,Web.StreamType)">
			<summary>Exchanges the currently selected text with text in the specified format. The new text is read from the specified file stream.</summary>
			<param name="fileStream">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.Selection.Load(System.Byte[],Web.BinaryStreamType)">
			<summary>Exchanges the currently selected text with text in the specified format. The new text is read from the specified byte array.</summary>
			<param name="binaryData">Specifies a byte array from which the data is loaded.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.Selection.Load(System.String,Web.StringStreamType)">
			<summary>Exchanges the currently selected text with text in the specified format. The new text is read from the specified string.</summary>
			<param name="stringData">Specifies a string from which the data is loaded.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.Selection.Save(System.String,Web.StreamType)">
			<summary>Saves the selected text of a document in the specified file with the specified format.</summary>
			<param name="path">Saves the selected text of a document in the specified file with the specified format.</param>
			<param name="streamType">Specifies one of the StreamType values.Specifies one of the StreamType values.Specifies one of the BinaryStreamType values.Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.Selection.Save(System.IO.FileStream,Web.StreamType)">
			<summary>Saves the selected text of a document in the specified file stream with the specified format.</summary>
			<param name="fileStream">Specifies a file into which the selection is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.Specifies one of the StreamType values.Specifies one of the BinaryStreamType values.Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.Selection.Save(System.Byte[]@,Web.BinaryStreamType)">
			<summary>Saves the selected text of a document in the specified byte array with the specified format.</summary>
			<param name="data">Specifies a byte array into which the selection is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.Specifies one of the StreamType values.Specifies one of the BinaryStreamType values.Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.Selection.Save(System.String@,Web.StringStreamType)">
			<summary>Saves the selected text of a document as a string with the specified format.</summary>
			<param name="stringData">Specifies a string into which the selection is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.Specifies one of the StreamType values.Specifies one of the BinaryStreamType values.Specifies one of the StringStreamType values.</param>
		</member>
		<member name="P:TXTextControl.Web.Selection.Start">
			<summary>Gets the starting point of selected text.</summary>
		</member>
		<member name="P:TXTextControl.Web.Selection.Length">
			<summary>Returns the number of characters selected.</summary>
		</member>
		<member name="T:TXTextControl.Web.TextControl">
			<summary>The TextControl class implements a control with high-level text editing features.</summary>
		</member>
		<member name="M:TXTextControl.Web.TextControl.#ctor">
			<summary>Initializes a new instance of the TextControl class.</summary>
		</member>
		<member name="M:TXTextControl.Web.TextControl.GetFileDirectory(Web.FileType)">
			<summary>Returns the directory path where the files of a specific file type are stored.</summary>
			<param name="type">Specifies one of the FileType values.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.GetFileDirectoryAsync(Web.FileType)">
			<summary>Returns the directory path where the files of a specific file type are stored.</summary>
			<param name="type">Specifies one of the FileType values.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadDataFromJson(System.String)">
			<summary>Uses data given as a JSON string as a data source. The JSON string has to contain an array of equally structured objects. Analyzes and uses the given objects as merge data in the same way as the method LoadDataFromModel.</summary>
			<param name="json">The JSON string containing the merge data.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadDataFromJsonAsync(System.String)">
			<summary>Uses data given as a JSON string as a data source. The JSON string has to contain an array of equally structured objects. Analyzes and uses the given objects as merge data in the same way as the method LoadDataFromModel. The method returns immediately.</summary>
			<param name="json">The JSON string containing the merge data.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadDataFromModel(System.Collections.IEnumerable)">
			<summary>Interprets all public properties of the objects in the collection as possible table columns and / or child tables. The type of the first object in the collection is analyzed via .NET reflection and used as the basis of the assumed table structure. For more information about using object based data sources see DocumentServer.MailMerge.MergeObjects. The method returns immediately.</summary>
			<param name="model">Specifies a System.Collections.IEnumerable that contains the merge data.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadDataFromModel(System.Collections.IEnumerable,System.IFormatProvider)">
			<summary>Allows to additionally specify a format which should be applied when converting date / time values and numerical values to strings.</summary>
			<param name="model">Specifies a System.Collections.IEnumerable that contains the merge data.</param>
			<param name="numberAndDateTimeFormat">The format which should be applied when converting date / time values and numerical values to strings.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadDataFromModelAsync(System.Collections.IEnumerable)">
			<summary>Interprets all public properties of the objects in the collection as possible table columns and / or child tables. The type of the first object in the collection is analyzed via .NET reflection and used as the basis of the assumed table structure. For more information about using object based data sources see DocumentServer.MailMerge.MergeObjects. The method returns immediately.</summary>
			<param name="model">Specifies a System.Collections.IEnumerable that contains the merge data.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadDataFromModelAsync(System.Collections.IEnumerable,System.IFormatProvider)">
			<summary>Allows to additionally specify a format which should be applied when converting date / time values and numerical values to strings.</summary>
			<param name="model">Specifies a System.Collections.IEnumerable that contains the merge data.</param>
			<param name="numberAndDateTimeFormat">The format which should be applied when converting date / time values and numerical values to strings.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadDataSet(System.Data.DataSet)">
			<summary>Loads a database which is used to create table and field name menu items in the mailings ribbon tab from an existing DataSet object.</summary>
			<param name="dataSet">Specifies a System.Data.DataSet object from which table and field names and existing data relations are loaded.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadDataSetAsync(System.Data.DataSet)">
			<summary>Loads a database which is used to create table and field name menu items in the mailings ribbon tab from an existing DataSet object. This method returns immediately and does not wait for the DataSet to be loaded completely.</summary>
			<param name="dataSet">Specifies a System.Data.DataSet object from which table and field names and existing data relations are loaded.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadText(System.String,Web.StreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified file.</summary>
			<param name="path">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadText(System.IO.FileStream,Web.StreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified file stream.</summary>
			<param name="fileStream">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadText(System.Byte[],Web.BinaryStreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified byte array.</summary>
			<param name="binaryData">Specifies a byte array from which the data is loaded.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadText(System.String,Web.StringStreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified string.</summary>
			<param name="stringData">Specifies a string from which the data is loaded.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadTextAsync(System.String,Web.StreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified file.</summary>
			<param name="path">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadTextAsync(System.IO.FileStream,Web.StreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified file stream.</summary>
			<param name="fileStream">Specifies a file from which the data is loaded.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadTextAsync(System.Byte[],Web.BinaryStreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified byte array.</summary>
			<param name="binaryData">Specifies a byte array from which the data is loaded.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadTextAsync(System.String,Web.StringStreamType)">
			<summary>Loads text formatted with the specified format. The new text is read from the specified string.</summary>
			<param name="stringData">Specifies a string from which the data is loaded.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadXMLDatabase(System.String)">
			<summary>Loads an XML database from a file.</summary>
			<param name="fileName">Specifies an xml file from which the database is loaded.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadXMLDatabase(System.Xml.XmlDocument)">
			<summary>Loads an XML database from an XmlDocument object.</summary>
			<param name="xmlDocument">Specifies an XmlDocument object from which the database is loaded.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadXMLDatabase(System.IO.FileStream)">
			<summary>Loads an XML database from a file stream.</summary>
			<param name="fileStream">Specifies an xml file from which the database is loaded.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadXMLDatabaseAsync(System.String)">
			<summary>Loads an XML database from a file.</summary>
			<param name="fileName">Specifies an xml file from which the database is loaded.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadXMLDatabaseAsync(System.Xml.XmlDocument)">
			<summary>Loads an XML database from an XmlDocument object.</summary>
			<param name="xmlDocument">Specifies an XmlDocument object from which the database is loaded.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.LoadXMLDatabaseAsync(System.IO.FileStream)">
			<summary>Loads an XML database from a file stream.</summary>
			<param name="fileStream">Specifies an xml file from which the database is loaded.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.ResetContents">
			<summary>Deletes the entire contents of the control.</summary>
		</member>
		<member name="M:TXTextControl.Web.TextControl.SaveText(System.String,Web.StreamType)">
			<summary>Saves the complete contents of a document in the specified file with the specified format.</summary>
			<param name="path">Specifies a file into which the data is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.SaveText(System.IO.FileStream,Web.StreamType)">
			<summary>Saves the complete contents of a document in the specified file stream with the specified format.</summary>
			<param name="fileStream">Specifies a file into which the data is saved.</param>
			<param name="streamType">Specifies one of the StreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.SaveText(System.Byte[]@,Web.BinaryStreamType)">
			<summary>Saves the complete contents of a document in the specified byte array with the specified format.</summary>
			<param name="binaryData">Specifies a byte array into which the data is saved.</param>
			<param name="binaryStreamType">Specifies one of the BinaryStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.SaveText(System.String@,Web.StringStreamType)">
			<summary>Saves the complete contents of a document as a string with the specified format.</summary>
			<param name="stringData">Specifies a string into which the data is saved.</param>
			<param name="stringStreamType">Specifies one of the StringStreamType values.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.SetFileDirectory(System.String,Web.FileType)">
			<summary>Determines the directory path where the files of a specific file type are stored.</summary>
			<param name="directory">Specifies the directory path where the files of a specific file type are stored.</param>
			<param name="type">Specifies one of the FileType values.</param>
		</member>
		<member name="M:TXTextControl.Web.TextControl.SetFileDirectoryAsync(System.String,Web.FileType)">
			<summary>Determines the directory path where the files of a specific file type are stored.</summary>
			<param name="directory">Specifies the directory path where the files of a specific file type are stored.</param>
			<param name="type">Specifies one of the FileType values.</param>
		</member>
		<member name="P:TXTextControl.Web.TextControl.BackColor">
			<summary>Specifies or returns the background color of the main text area and the ruler bars.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.ContextMenusEnabled">
			<summary>Specifies or returns a value indicating if a right click opens a context menu or not.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.ControlChars">
			<summary>Specifies if control characters are visible or not.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.Culture">
			<summary>Gets or sets the control's culture.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.Dock">
			<summary>Gets or sets a value how the control is docked to its container or web site.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.DocumentTargetMarkers">
			<summary>Specifies or returns a value indicating if markers for hypertext targets are shown in the editor or not.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.EditMode">
			<summary>Specifies or returns a value of type Web.EditMode indicating whether the document's text is read-only, can be selected or is editable.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.FormattingPrinter">
			<summary>Gets or sets the name of a printer the text dimensions and capabilities of which are used to format the document.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.IsReady">
			<summary>Gets a value indicating whether all TX Text Control components are completely loaded in the service's worker process.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.SaveDocumentQuestionDialogEnabled">
			<summary>Specifies or returns a value indicating if a confirmation dialog should be shown before discarding unsaved changes.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.Selection">
			<summary>Gets or sets the current selection in the text part with the input focus.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.ServiceAddress">
			<summary>Gets or sets the IP address at which the websocket handler tries to connect to the Service.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.ServicePort">
			<summary>Gets or sets the Port at which the websocket handler tries to connect to the Service.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.StatusBarColor">
			<summary>Specifies or returns the background color of the status bar.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.TableGridLines">
			<summary>Specifies or returns a value indicating wether table grid lines are shown in the editor or not.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.TextFieldsEditable">
			<summary>Gets or sets if text fields are editable or not.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.TextFrameMarkerLines">
			<summary>Specifies whether text frames that have no border line are shown with marker lines.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.TextParts">
			<summary>Gets a collection of all text parts the current document contains.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.UICulture">
			<summary>Gets or sets the control's user interface culture.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextControl.WebSocketHandlerPath">
			<summary>Specifies the path to the WebSocket handler (TXWebSocketHandler.ashx).</summary>
		</member>
		<member name="T:TXTextControl.Web.TextFrame">
			<summary>An instance of the Web.TextFrame class represents a text frame in a Text Control document.</summary>
		</member>
		<member name="T:TXTextControl.Web.TextPart">
			<summary>The Web.TextPart class implements the Web.IFormattedText interface as well as public properties and internal functionality common to all text parts in a TX Text Control document.</summary>
		</member>
		<member name="P:TXTextControl.Web.TextPart.Selection">
			<summary>Gets or sets the current selection in a text part.</summary>
		</member>
		<member name="T:TXTextControl.Web.TextPartCollection">
			<summary>An instance of the Web.TextPartCollection class contains all text parts in a TX Text Control document.</summary>
		</member>
		<member name="M:TXTextControl.Web.TextPartCollection.Activate(Web.IFormattedText)">
			<summary>Sets the input focus to the specified text part. If the activated text part is not in the visible part of the document, the document is scrolled.</summary>
			<param name="textPart">Specifies the text part to activate.</param>
		</member>
		<member name="T:TXTextControl.Web.BinaryStreamType">
			<summary>Determines a certain text format that must tbe stored in a one-dimensional byte array.</summary>
		</member>
		<member name="F:TXTextControl.Web.BinaryStreamType.AdobePDF">
			<summary>Specifies Adobe Portable Document Format (PDF). If a document is loaded, only the text is imported.</summary>
		</member>
		<member name="F:TXTextControl.Web.BinaryStreamType.AdobePDFA">
			<summary>Specifies Adobe Portable Document Format Archive (PDF/A). This format can only be used in saving operations.</summary>
		</member>
		<member name="F:TXTextControl.Web.BinaryStreamType.InternalFormat">
			<summary>Specifies the internal Text Control format. Text is stored in ANSI format.</summary>
		</member>
		<member name="F:TXTextControl.Web.BinaryStreamType.InternalUnicodeFormat">
			<summary>Specifies the internal Text Control format. Text is stored in Unicode format.</summary>
		</member>
		<member name="F:TXTextControl.Web.BinaryStreamType.MSWord">
			<summary>Specifies Microsoft Word format.</summary>
		</member>
		<member name="F:TXTextControl.Web.BinaryStreamType.WordprocessingML">
			<summary>Specifies Microsoft Word format (Office Open XML version).</summary>
		</member>
		<member name="T:TXTextControl.Web.DockStyle">
			<summary>Specifies the manner in which a Web.TextControl is docked.</summary>
		</member>
		<member name="F:TXTextControl.Web.DockStyle.Fill">
			<summary>All the control's edges are docked to the all edges of its container and sized appropriately.</summary>
		</member>
		<member name="F:TXTextControl.Web.DockStyle.None">
			<summary>The control is not docked.</summary>
		</member>
		<member name="F:TXTextControl.Web.DockStyle.Window">
			<summary>The control fills the browser window.</summary>
		</member>
		<member name="T:TXTextControl.Web.FileType">
			<summary>Specifies the kind of file types.</summary>
		</member>
		<member name="F:TXTextControl.Web.FileType.Database">
			<summary>Specifies database file types.</summary>
		</member>
		<member name="F:TXTextControl.Web.FileType.Document">
			<summary>Specifies document file types.</summary>
		</member>
		<member name="F:TXTextControl.Web.FileType.Image">
			<summary>Specifies image file types.</summary>
		</member>
		<member name="T:TXTextControl.Web.StreamType">
			<summary>Determines a certain text format.</summary>
		</member>
		<member name="F:TXTextControl.Web.StreamType.AdobePDF">
			<summary>Specifies Adobe Portable Document Format (PDF). If a document is loaded, only the text is imported.</summary>
		</member>
		<member name="F:TXTextControl.Web.StreamType.AdobePDFA">
			<summary>Specifies Adobe Portable Document Format Archive (PDF/A). This format can only be used in saving operations.</summary>
		</member>
		<member name="F:TXTextControl.Web.StreamType.CascadingStylesheet">
			<summary>Specifies CSS format (Cascading Style Sheet). This format can only be used in saving operations.</summary>
		</member>
		<member name="F:TXTextControl.Web.StreamType.HTMLFormat">
			<summary>Specifies HTML format (Hypertext Markup Language).</summary>
		</member>
		<member name="F:TXTextControl.Web.StreamType.InternalFormat">
			<summary>Specifies the internal Text Control format. Text is stored in ANSI format.</summary>
		</member>
		<member name="F:TXTextControl.Web.StreamType.InternalUnicodeFormat">
			<summary>Specifies the internal Text Control format. Text is stored in Unicode format.</summary>
		</member>
		<member name="F:TXTextControl.Web.StreamType.MSWord">
			<summary>Specifies Microsoft Word format (.DOC version).</summary>
		</member>
		<member name="F:TXTextControl.Web.StreamType.PlainAnsiText">
			<summary>Specifies text in Windows ANSI format (an end of a paragraph is marked with the control characters 13 and 10).</summary>
		</member>
		<member name="F:TXTextControl.Web.StreamType.PlainText">
			<summary>Specifies text in Windows Unicode format (an end of a paragraph is marked with the control characters 13 and 10).</summary>
		</member>
		<member name="F:TXTextControl.Web.StreamType.RichTextFormat">
			<summary>Specifies RTF format (Rich Text Format).</summary>
		</member>
		<member name="F:TXTextControl.Web.StreamType.WordprocessingML">
			<summary>Specifies Microsoft Word format (Office Open XML version).</summary>
		</member>
		<member name="F:TXTextControl.Web.StreamType.XMLFormat">
			<summary>Specifies XML format (Extensible Markup Language).</summary>
		</member>
		<member name="T:TXTextControl.Web.StringStreamType">
			<summary>Determines a certain text format that can be stored as a string.</summary>
		</member>
		<member name="F:TXTextControl.Web.StringStreamType.CascadingStylesheet">
			<summary>Specifies CSS format (Cascading Style Sheet). This format can only be used in saving operations.</summary>
		</member>
		<member name="F:TXTextControl.Web.StringStreamType.HTMLFormat">
			<summary>Specifies HTML format (Hypertext Markup Language).</summary>
		</member>
		<member name="F:TXTextControl.Web.StringStreamType.PlainText">
			<summary>Specifies Text in Windows Unicode format (an end of a paragraph is marked with the control characters 13 and 10).</summary>
		</member>
		<member name="F:TXTextControl.Web.StringStreamType.RichTextFormat">
			<summary>Specifies RTF format (Rich Text Format).</summary>
		</member>
		<member name="F:TXTextControl.Web.StringStreamType.XMLFormat">
			<summary>Specifies XML format (Extensible Markup Language).</summary>
		</member>
		<member name="T:TXTextControl.Web.EditMode">
			<summary>Specifies possible edit modes a Web.TextControl can be in.</summary>
		</member>
		<member name="F:TXTextControl.Web.EditMode.Edit">
			<summary>The document's text can be edited.</summary>
		</member>
		<member name="F:TXTextControl.Web.EditMode.ReadAndSelect">
			<summary>The document's text is read only but can be selected.</summary>
		</member>
		<member name="F:TXTextControl.Web.EditMode.ReadOnly">
			<summary>The document's text is read only.</summary>
		</member>
		<member name="T:TXTextControl.Web.HeaderFooterType">
			<summary>Determines the type of a header or footer.</summary>
		</member>
		<member name="F:TXTextControl.Web.HeaderFooterType.Header">
			<summary>The object is a header. When an even header exists, the object represents the odd header. Otherwise it represents the header of all pages.</summary>
		</member>
		<member name="F:TXTextControl.Web.HeaderFooterType.FirstPageHeader">
			<summary>The object represents a special header of the document's or section's first page.</summary>
		</member>
		<member name="F:TXTextControl.Web.HeaderFooterType.Footer">
			<summary>The object is a footer. When an even footer exists, this member represents the odd footer. Otherwise it represents the footer of all pages.</summary>
		</member>
		<member name="F:TXTextControl.Web.HeaderFooterType.FirstPageFooter">
			<summary>The object represents a special footer of the document's or section's first page.</summary>
		</member>
		<member name="F:TXTextControl.Web.HeaderFooterType.EvenHeader">
			<summary>The object represents an even header.</summary>
		</member>
		<member name="F:TXTextControl.Web.HeaderFooterType.EvenFooter">
			<summary>The object represents an even footer.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.IconTextRelation">
			<summary>Specifies the position of the text and the kind of icon relative to each other on objects of type RibbonButton and RibbonTextBox:</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.IconTextRelation.LargeIconLabeled">
			<summary>If the object is part of a RibbonGroup the item displayes its large icon above its text. If the item is an object of type RibbonButton and inserted as a drop-down item, the image is displayed horizontally before the text and the description text.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.IconTextRelation.SmallIconLabeled">
			<summary>The item displayes its small icon horizontally before the text.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.IconTextRelation.SmallIconUnlabeled">
			<summary>The item's small icon is displayed, but not its text.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.IconTextRelation.NoIconLabeled">
			<summary>Only the item's text is displayed.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonListView.ListViewMode">
			<summary>Determines the view mode of the RibbonListView:</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonListView.ListViewMode.Icon">
			<summary>A RibbonListViewItem displayes its icon.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonListView.ListViewMode.Text">
			<summary>A RibbonListViewItem displayes its text.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonSeperator.SeperatorAlignment">
			<summary>Determines the alignment of the RibbonSeperator:</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonSeperator.SeperatorAlignment.Horizontal">
			<summary>The seperator is aligned horizontally.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonSeperator.SeperatorAlignment.Vertical">
			<summary>The seperator is aligned vertically.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.InputValidationMode">
			<summary>Determines the validation mode that is used to validate the inserted text in the RibbonTextBox:</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.InputValidationMode.All">
			<summary>All characters are valid to be inserted into the text box.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.InputValidationMode.LettersOrDigits">
			<summary>Only letters or digits are valid text box characters.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.InputValidationMode.OnlyLetters">
			<summary>Only letters or digits are valid text box characters.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.InputValidationMode.OnlyDigits">
			<summary>Only digits are valid text box characters.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.ContextualTabGroup">
			<summary>An object of the ContextualTabGroup class represents a group of ribbon tabs which are only shown in a certain context.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.ContextualTabGroup.#ctor">
			<summary>Initializes a new instance of the ContextualTabGroup class.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.ContextualTabGroup.BackColor">
			<summary>Gets or sets the background color of the group's label.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.ContextualTabGroup.ContextualTabs">
			<summary>Gets a list of all RibbonTab objects contained in this group.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.ContextualTabGroup.Header">
			<summary>Gets or sets the group's header.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.ContextualTabGroup.Name">
			<summary>Gets or sets the group's name.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.ContextualTabGroup.Visible">
			<summary>Gets or sets the group's visibility.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.ContextualTabGroupCollection">
			<summary>The ContextualTabGroupCollection class represents all groups of ribbon tabs which are only shown in a certain context.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.HorizontalRibbonGroup">
			<summary>The HorizontalRibbonGroup class represents a logical group of controls as they appear on a RibbonTab.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.HorizontalRibbonGroup.#ctor">
			<summary>Initializes a new instance of the HorizontalRibbonGroup class.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.HorizontalRibbonGroup.Add(System.Windows.Forms.Control,System.Int32)">
			<summary>Adds a control of type RibbonButton, RibbonComboBox, RibbonLabel, RibbonListView, RibbonTextBox or RibbonSeperator to the end of a specific row inside the horizontal ribbon group.</summary>
			<param name="item">The control to be added to this group.</param>
			<param name="row">The row where to add the control.</param>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.HorizontalRibbonGroup.AddRange(System.Windows.Forms.Control[],System.Int32)">
			<summary>Adds an array of controls to the end of a specific row. These controls must be objects of type RibbonButton, RibbonComboBox, RibbonLabel, RibbonListView, RibbonTextBox or RibbonSeperator.</summary>
			<param name="items">An array of controls to be added to this group.</param>
			<param name="row">The row where to add the controls.</param>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.HorizontalRibbonGroup.Insert(System.Int32,System.Windows.Forms.Control,System.Int32)">
			<summary>Inserts a control of type RibbonButton, RibbonComboBox, RibbonLabel, RibbonListView, RibbonTextBox or RibbonSeperator at the specified index.</summary>
			<param name="index">The zero-based index at which the control should be inserted.</param>
			<param name="item">The control to be inserted to this group.</param>
			<param name="row">The row where to insert the control.</param>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.HorizontalRibbonGroup.InsertRange(System.Int32,System.Windows.Forms.Control[],System.Int32)">
			<summary>Inserts an array of controls at the specified index. These controls must be objects of type RibbonButton, RibbonComboBox, RibbonLabel, RibbonListView, RibbonTextBox or RibbonSeperator.</summary>
			<param name="index">The zero-based index at which the controls should be inserted.</param>
			<param name="items">An array of controls to be inserted to this group.</param>
			<param name="row">The row where to insert the controls.</param>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.Ribbon">
			<summary>The Ribbon class is a command bar that organizes the features of an application into a series of tabs at the top of the application window.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.Ribbon.#ctor">
			<summary>Initializes a new instance of the Ribbon class.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.Ribbon.ApplicationMenuHelpPaneItems">
			<summary>Gets a collection of all items which are displayed on the help pane of the Application Menu.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.Ribbon.ApplicationMenuItems">
			<summary>Gets a collection of all items which are displayed on the Application Menu.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.Ribbon.ContextualTabGroups">
			<summary>Gets a collection of all contextual tab groups of this ribbon.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.Ribbon.DisplayColors">
			<summary>Gets or sets the colors of the ribbon.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.Ribbon.ReadOnly">
			<summary>Gets or sets a value determining the ribbon's read only mode.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.Ribbon.Colors">
			<summary>The Ribbon.Colors class gets, sets or resets the display colors of a Windows Forms Ribbon control.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.Ribbon.Colors.#ctor">
			<summary>Initializes a new instance of the Ribbon.Colors class. After creating the object with this constuctor, individual colors can be set. If the Colors object is assigned to the Windows.Forms.Ribbon.Ribbon.DisplayColors property, non-set colors are reset to their system dependent default values.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.Ribbon.Colors.ResetApplicationMenuColor">
			<summary>Resets the ribbon's ApplicationMenuColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.Ribbon.Colors.ResetApplicationMenuTabHighlightColor">
			<summary>Resets the ribbon's ApplicationMenuTabHighlightColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.Ribbon.Colors.ResetApplicationMenuTabColor">
			<summary>Resets the ribbon's ApplicationMenuTabColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.Ribbon.Colors.ResetHighlightTabColor">
			<summary>Resets the ribbon's HighlightTabColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.Ribbon.Colors.ResetMenuColor">
			<summary>Resets the ribbon's MenuColor to its system dependent default value.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.Ribbon.Colors.ResetTabColor">
			<summary>Resets the ribbon's TabColor to its system dependent default value.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.Ribbon.Colors.ApplicationMenuColor">
			<summary>Gets or sets the background color of a ribbon's application menu.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.Ribbon.Colors.ApplicationMenuTabColor">
			<summary>Gets or sets the color of a ribbon's first tab, which opens the application menu.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.Ribbon.Colors.ApplicationMenuTabHighlightColor">
			<summary>Gets or sets the highlight color of a ribbon's first tab which is used, when the mouse pointer is moved over it.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.Ribbon.Colors.HighlightTabColor">
			<summary>Gets or sets the highlight color of a ribbon tab which is used when a tab is selected.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.Ribbon.Colors.MenuColor">
			<summary>Gets or sets the menu color of a ribbon.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.Ribbon.Colors.TabColor">
			<summary>Gets or sets the background color of a ribbon tab.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonButton">
			<summary>The RibbonButton class is a button control which can be added to a RibbonGroup or to a RibbonMenuButton where it is stored as an item of the drop-down menu.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonButton.#ctor">
			<summary>Initializes a new instance of the RibbonButton class.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonButton.Description">
			<summary>Gets or sets the description text that appears on this button in a RibbonMenuButton's drop down menu when the DisplayMode property of the button is set to IconTextRelation.LargeIconLabeled.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonButton.DisplayMode">
			<summary>Sets the RibbonButton's superordinate display settings and gets its corresponding text icon relation rendering to the current group's width.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonButton.IsAddToQuickAccessToolbarEnabled">
			<summary>Gets or sets value whether the RibbonButton can be added to the quick access toolbar.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonButton.KeyTip">
			<summary>Gets or sets the keyboard shortcut of the RibbonButton.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonButton.LargeIcon">
			<summary>Gets or sets a 32x32 icon for this RibbonButton.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonButton.ParentCollection">
			<summary>Gets the RibbonItemCollection that contains this RibbonButton.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonButton.SmallIcon">
			<summary>Gets or sets a 16x16 icon for this RibbonButton.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonButton.Text">
			<summary>Overridden. Gets or sets the RibbonButton's text.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonButton.ToolTip">
			<summary>Gets an object of type RibbonToolTip that displays text when the mouse pointer hovers over the item.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonComboBox">
			<summary>The RibbonComboBox class represents a combobox which is inherited from the System.Windows.Forms.ComboBox class.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonComboBox.#ctor">
			<summary>Initializes a new instance of the RibbonComboBox class.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonComboBox.KeyTip">
			<summary>Gets or sets the keyboard shortcut of the RibbonComboBox.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonComboBox.ParentCollection">
			<summary>Gets the RibbonItemCollection that contains this RibbonComboBox.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonComboBox.ToolTip">
			<summary>Gets an object of type RibbonToolTip that displays text when the mouse pointer hovers over the item.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonForm">
			<summary>The RibbonForm class represents a Windows Forms form that can draw a Ribbon Quick Access Toolbar and contextual tabs in its border.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonForm.#ctor">
			<summary>Initializes a new instance of the RibbonForm class.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonForm.SetQuickAccessToolbarStandardItems(System.Windows.Forms.ToolStripItem[])">
			<summary>Specifies the standard items of the Quick Access Toolbar. Additional items can be added and removed through a context menu.</summary>
			<param name="items">An array of ToolStripItem objects which act as the standard items of the Quick Access Toolbar.</param>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab">
			<summary>The RibbonFormattingTab class represents a ribbon tab for setting font and paragraph attributes, formatting styles and for handling the clipboard.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.#ctor">
			<summary>Initializes a new instance of the RibbonFormattingTab class.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem">
			<summary>Each RibbonItem represents an item in a Windows.Forms.Ribbon.RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_Paste">
			<summary>Identifies the Paste button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_Cut">
			<summary>Identifies the Cut button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_Copy">
			<summary>Identifies the Copy button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_FontFamily">
			<summary>Identifies the FontFamily combobox of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_FontSize">
			<summary>Identifies the FontSize combobox of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_IncreaseFont">
			<summary>Identifies the IncreaseFont button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_DecreaseFont">
			<summary>Identifies the DecreaseFont button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_ClearFormatting">
			<summary>Identifies the ClearFormatting button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_Bold">
			<summary>Identifies the Bold button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_Italic">
			<summary>Identifies the Italic button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_Underline">
			<summary>Identifies the Underline button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_Strikeout">
			<summary>Identifies the Strikeout button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_Subscript">
			<summary>Identifies the Subscript button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_Superscript">
			<summary>Identifies the Superscript button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_ChangeCase">
			<summary>Identifies the ChangeCase button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_TextBackColor">
			<summary>Identifies the TextBackColor button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_TextColor">
			<summary>Identifies the TextColor button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_BulletedList">
			<summary>Identifies the BulletedList button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_NumberedList">
			<summary>Identifies the NumberedList button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_StructuredList">
			<summary>Identifies the StructuredList button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_DecreaseIndent">
			<summary>Identifies the DecreaseIndent button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_IncreaseIndent">
			<summary>Identifies the IncreaseIndent button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_LeftToRight">
			<summary>Identifies the LeftToRight button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_RightToLeft">
			<summary>Identifies the RightToLeft button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_EditTabs">
			<summary>Identifies the EditTabs button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_ControlChars">
			<summary>Identifies the ControlChars button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_LeftAligned">
			<summary>Identifies the LeftAligned button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_Centered">
			<summary>Identifies the Centered button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_RightAligned">
			<summary>Identifies the RightAligned button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_Justified">
			<summary>Identifies the Justified button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_LineSpacing">
			<summary>Identifies the LineSpacing button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_Borders">
			<summary>Identifies the Borders button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_LeftFrameLine">
			<summary>Identifies the LeftFrameLine menu item of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_TopFrameLine">
			<summary>Identifies the TopFrameLine menu item of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_RightFrameLine">
			<summary>Identifies the RightFrameLine menu item of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_BottomFrameLine">
			<summary>Identifies the BottomFrameLine menu item of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_BoxFrame">
			<summary>Identifies the BoxFrame menu item of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_AllFrameLines">
			<summary>Identifies the AllFrameLines menu item of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_InnerHorizontalFrameLines">
			<summary>Identifies the InnerHorizontalFrameLines menu item of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_InnerVerticalFrameLines">
			<summary>Identifies the InnerVerticalFrameLines menu item of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_BackColor">
			<summary>Identifies the BackColor button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_FrameLineColor">
			<summary>Identifies the FrameLineColor button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_FrameLineWidth">
			<summary>Identifies the FrameLineWidth button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_StyleName">
			<summary>Identifies the StyleName gallery of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_Find">
			<summary>Identifies the Find button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_Replace">
			<summary>Identifies the Replace button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_Goto">
			<summary>Identifies the Goto button of the RibbonFormattingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem.TXITEM_SelectAll">
			<summary>Identifies the SelectAll button of the RibbonFormattingTab.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonFormattingTab.FindItem(Windows.Forms.Ribbon.RibbonFormattingTab.RibbonItem)">
			<summary>Finds a control that has the provided RibbonFormattingTab.RibbonItem identifier.</summary>
			<param name="ribbonItem">Specifies the identifier of the requested control.</param>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab">
			<summary>The RibbonFrameLayoutTab class represents a Windows Forms ribbon tab for editing objects of type Image, TextFrame, DrawingFrame, BarcodeFrame and ChartFrame.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.#ctor">
			<summary>Initializes a new instance of the RibbonFrameLayoutTab class.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem">
			<summary>Each RibbonItem represents an item in a Windows.Forms.Ribbon.RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_WrapText">
			<summary>Identifies the WrapText button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_BringToFront">
			<summary>Identifies the BringToFront button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_SendToBack">
			<summary>Identifies the SendToBack button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_Position">
			<summary>Identifies the Position button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_ObjectHeight">
			<summary>Identifies the ObjectHeight text box of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_ObjectWidth">
			<summary>Identifies the ObjectWidth text box of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_ObjectName">
			<summary>Identifies the ObjectName text box of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_ObjectID">
			<summary>Identifies the ObjectID text box of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_TextFrameBackColor">
			<summary>Identifies the TextFrameBackColor button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_TextFrameTransparency">
			<summary>Identifies the TextFrameTransparency button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_TextFrameLineWidth">
			<summary>Identifies the TextFrameLineWidth button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_DrawingLineColor">
			<summary>Identifies the DrawingLineColor button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_DrawingBackColor">
			<summary>Identifies the DrawingBackColor button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_DrawingLineWidth">
			<summary>Identifies the DrawingLineWidth button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_DrawingTransparency">
			<summary>Identifies the DrawingTransparency button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_TableBackColor">
			<summary>Identifies the TableBackColor button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_DrawingRotation">
			<summary>Identifies the DrawingRotation button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_BarcodeForeColor">
			<summary>Identifies the BarcodeForeColor button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_BarcodeBackColor">
			<summary>Identifies the BarcodeBackColor button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_BarcodeTransparency">
			<summary>Identifies the BarcodeTransparency button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_BarcodeHorizontalAlignment">
			<summary>Identifies the BarcodeHorizontalAlignment button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_BarcodeVerticalAlignment">
			<summary>Identifies the BarcodeVerticalAlignment button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem.TXITEM_BarcodeRotation">
			<summary>Identifies the BarcodeRotation button of the RibbonFrameLayoutTab.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonFrameLayoutTab.FindItem(Windows.Forms.Ribbon.RibbonFrameLayoutTab.RibbonItem)">
			<summary>Finds a control that has the provided RibbonFrameLayoutTab.RibbonItem identifier.</summary>
			<param name="ribbonItem">Specifies the identifier of the requested control.</param>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonGroup">
			<summary>The RibbonGroup class represents a logical group of controls as they appear on a RibbonTab and is the base class of the HorizontalRibbonGroup class.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonGroup.#ctor">
			<summary>Initializes a new instance of the RibbonGroup class.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonGroup.DialogBoxLauncher">
			<summary>Gets an object of type DialogBoxLauncher which represents the RibbonGroup's dialog box launcher item.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonGroup.IsAddToQuickAccessToolbarEnabled">
			<summary>Gets or sets a value whether the RibbonGroup can be added to the quick access toolbar.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonGroup.LargeIcon">
			<summary>Gets or sets a 32x32 icon for this RibbonGroup.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonGroup.RibbonItems">
			<summary>Gets a collection of all items contained in this group.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonGroup.RowCount">
			<summary>Gets or sets the number of rows in the RibbonGroup.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonGroup.SmallIcon">
			<summary>Gets or sets a 16x16 icon for this RibbonGroup.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonGroup.ShowSeperator">
			<summary>Gets or sets a value whether the RibbonGroup's seperator is shown.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonGroup.Text">
			<summary>Overridden. Gets or sets the RibbonGroup's footer text.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonGroup.ToolTip">
			<summary>Gets an object of type RibbonToolTip that displays text when the mouse pointer hovers over this RibbonGroup.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonGroup.DialogBoxLauncher">
			<summary>The DialogBoxLauncher class represents the dialog box launcher item of a RibbonGroup.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonGroup.DialogBoxLauncher.ContextMenuStrip">
			<summary>Gets or sets the ContextMenuStrip associated with this dialog box launcher.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonGroup.DialogBoxLauncher.Enabled">
			<summary>Gets or sets a value indicating whether this dialog box launcher is enabled.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonGroup.DialogBoxLauncher.Visible">
			<summary>Gets or sets a value indicating whether this dialog box launcher is visible.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonGroup.DialogBoxLauncher.ToolStripItemImage">
			<summary>Gets or sets a 16x16 icon for this dialog box launcher's quick access toolbar tool strip item.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonGroup.DialogBoxLauncher.ToolTip">
			<summary>Gets an object of type RibbonToolTip that displays text when the mouse pointer hovers over the item.</summary>
		</member>
		<member name="E:TXTextControl.Windows.Forms.Ribbon.RibbonGroup.DialogBoxLauncher.Click">
			<summary>Occurs as the dialog box launcher is clicked.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonGroupCollection">
			<summary>An instance of the RibbonGroupCollection class contains objects of type RibbonGroup and can be obtained with the RibbonTab.RibbonGroups property.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonGroupCollection.Add(Windows.Forms.Ribbon.RibbonGroup)">
			<summary>Adds an object of the type RibbonGroup to the end of the collection.</summary>
			<param name="ribbonGroup">The RibbonGroup to be added to the end of the collection.</param>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonGroupCollection.Insert(System.Int32,Windows.Forms.Ribbon.RibbonGroup)">
			<summary>Inserts an object of the type RibbonGroup at the specified index of the collection.</summary>
			<param name="index">The zero-based index at which the RibbonGroup should be inserted.</param>
			<param name="ribbonGroup">The RibbonGroup to be inserted.</param>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonGroupCollection.Remove(Windows.Forms.Ribbon.RibbonGroup)">
			<summary>Removes an object of the type RibbonGroup from the collection.</summary>
			<param name="ribbonGroup">The RibbonGroup to be removed from the collection.</param>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonGroupCollection.Item">
			<summary>Gets an object of type RibbonGroup from the collection. This property is the indexer for the RibbonItemCollection class.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab">
			<summary>The RibbonInsertTab class represents a Windows Forms ribbon tab for inserting pages, images, hyperlinks, bookmarks, headers and footers, textframes and symbols.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab.#ctor">
			<summary>Initializes a new instance of the RibbonInsertTab class.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab.RibbonItem">
			<summary>Each RibbonItem represents an item in a Windows.Forms.Ribbon.RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab.RibbonItem.TXITEM_InsertPage">
			<summary>Identifies the InsertPage button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab.RibbonItem.TXITEM_InsertPageBreak">
			<summary>Identifies the InsertPageBreak button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab.RibbonItem.TXITEM_InsertTable">
			<summary>Identifies the InsertTable button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab.RibbonItem.TXITEM_InsertImage">
			<summary>Identifies the InsertImage button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab.RibbonItem.TXITEM_InsertShape">
			<summary>Identifies the InsertShape button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab.RibbonItem.TXITEM_InsertBarcode">
			<summary>Identifies the InsertBarcode button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab.RibbonItem.TXITEM_InsertHyperlink">
			<summary>Identifies the InsertHyperlink button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab.RibbonItem.TXITEM_InsertBookmark">
			<summary>Identifies the InsertBookmark button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab.RibbonItem.TXITEM_InsertHeader">
			<summary>Identifies the InsertHeader button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab.RibbonItem.TXITEM_InsertFooter">
			<summary>Identifies the InsertFooter button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab.RibbonItem.TXITEM_InsertPageNumber">
			<summary>Identifies the InsertPageNumber button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab.RibbonItem.TXITEM_InsertTextFrame">
			<summary>Identifies the InsertTextFrame button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab.RibbonItem.TXITEM_InsertFile">
			<summary>Identifies the InsertFile button of the RibbonInsertTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab.RibbonItem.TXITEM_InsertSymbol">
			<summary>Identifies the InsertSymbol button of the RibbonInsertTab.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonInsertTab.FindItem(Windows.Forms.Ribbon.RibbonInsertTab.RibbonItem)">
			<summary>Finds a control that has the provided RibbonInsertTab.RibbonItem identifier.</summary>
			<param name="ribbonItem">Specifies the identifier of the requested control.</param>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonItemCollection">
			<summary>An instance of the RibbonItemCollection class contains controls of type RibbonButton, RibbonComboBox, RibbonLabel, RibbonListView, RibbonTextBox or RibbonSeperator and can be obtained with the RibbonGroup.RibbonItems, Ribbon.ApplicationMenuHelpPaneItems, Ribbon.ApplicationMenuItems, RibbonMenuButton.DropDownItems or RibbonListView.DropDownItems property.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonItemCollection.Add(System.Windows.Forms.Control)">
			<summary>Adds a control of the type RibbonButton, RibbonComboBox, RibbonLabel, RibbonListView, RibbonTextBox or RibbonSeperator to the end of the collection.</summary>
			<param name="item">The control to be added to the end of this collection.</param>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonItemCollection.AddRange(System.Windows.Forms.Control[])">
			<summary>Adds an array of controls to the end of the collection. These controls must be objects of type RibbonButton, RibbonComboBox, RibbonLabel, RibbonListView, RibbonTextBox or RibbonSeperator.</summary>
			<param name="items">An array of controls to be added to the end of this collection.</param>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonItemCollection.Contains(System.Windows.Forms.Control)">
			<summary>Determines whether a control is in the collection.</summary>
			<param name="item">The item to locate in this collection.</param>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonItemCollection.Insert(System.Int32,System.Windows.Forms.Control)">
			<summary>Inserts a control of the type RibbonButton, RibbonComboBox, RibbonLabel, RibbonListView, RibbonTextBox or RibbonSeperator at the specified index.</summary>
			<param name="index">The zero-based index at which the control should be inserted.</param>
			<param name="item">The control to be inserted.</param>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonItemCollection.InsertRange(System.Int32,System.Windows.Forms.Control[])">
			<summary>Inserts an array of controls at the specified index. These controls must be objects of type RibbonButton, RibbonComboBox, RibbonLabel, RibbonListView, RibbonTextBox or RibbonSeperator.</summary>
			<param name="index">The zero-based index at which the controls should be inserted.</param>
			<param name="items">An array of controlsto be inserted.</param>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonItemCollection.Item">
			<summary>Gets a control of type RibbonButton, RibbonComboBox, RibbonLabel, RibbonListView, RibbonTextBox or RibbonSeperator from the collection. This property is the indexer for the RibbonItemCollection class.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonItemCollection.Remove(System.Windows.Forms.Control)">
			<summary>Removes a control of the type RibbonButton, RibbonComboBox, RibbonLabel, RibbonListView, RibbonTextBox or RibbonSeperator from this collection.</summary>
			<param name="item">The control to be removed from this collection.</param>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonLabel">
			<summary>The RibbonLabel class represents a label which is inherited from the System.Windows.Forms.Control class.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonLabel.#ctor">
			<summary>Initializes a new instance of the RibbonLabel class.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonLabel.ParentCollection">
			<summary>Gets the RibbonItemCollection that contains this RibbonLabel.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonLabel.SmallIcon">
			<summary>Gets or sets a 16x16 icon for this RibbonLabel.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonLabel.Text">
			<summary>Overridden. Gets or sets the RibbonLabel's text.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonLabel.ToolTip">
			<summary>Gets an object of type RibbonToolTip that displays text when the mouse pointer hovers over the item.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonListView">
			<summary>The RibbonListView class is a list view control, which displays a collection of items that can be displayed using one of three different views.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonListView.#ctor">
			<summary>Initializes a new instance of the RibbonListView class.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonListView.ScrollTo(RibbonListView.RibbonListViewItem)">
			<summary>Scrolls the contents of the RibbonListView to a specified RibbonListViewItem.</summary>
			<param name="item">The specified RibbonListViewItem where to scroll to.</param>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.CellPadding">
			<summary>Gets or sets the amount of space between the cell's item and the cell's border.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.ColumnCount">
			<summary>Gets the number of columns in this RibbonListView.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.ColumnWidth">
			<summary>Gets the width for each column in this RibbonListView.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.Deselectable">
			<summary>Gets or sets a value whether a selected RibbonListViewItem can be deselected by clicking into a cell that does not contain a RibbonListViewItem or clicking on it in combination with the pressed Ctrl key.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.DropDownItems">
			<summary>Gets the collection of controls in the drop-down menu that is associated with this RibbonListView.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.HideItems">
			<summary>Gets or sets a value indicating whether the RibbonListViewItems are displayed inside the RibbonListView or not.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.HideSelectedItems">
			<summary>Gets or sets a value indicating whether the selected RibbonListViewItems are highlighted inside the RibbonListView or not.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.ItemsSource">
			<summary>Gets or sets an array of RibbonListViewItems used to generate the content of this RibbonListView.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.KeyTip">
			<summary>Gets or sets the keyboard shortcut of the RibbonListView.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.MaxVisibleRows">
			<summary>Gets or sets a value specifying the maximum number of rows that are displayed by the RibbonListView.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.MinColumnCount">
			<summary>Gets or sets the minimum number of columns in this RibbonListView.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.MultiSelect">
			<summary>Gets or sets a value indicating whether multiple items can be selected.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.ParentCollection">
			<summary>Gets the RibbonItemCollection that contains this RibbonListView.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.RibbonListViewItems">
			<summary>Gets a collection containing all items in this RibbonListView.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.RowCount">
			<summary>Gets the number of rows in this RibbonListView.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.RowHeight">
			<summary>Gets the height for each row in this RibbonListView.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.SelectedIndices">
			<summary>Gets the indexes of the selected items in this RibbonListView.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.SelectedItems">
			<summary>Gets the items that are selected in this RibbonListView.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.ShowBorder">
			<summary>Gets or sets a value indicating whether this RibbonListView is surrounded by a border or not.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.ShowItemsInDropDown">
			<summary>Gets or sets a value indicating whether this RibbonListView's drop down menu displays additionally to the drop down items the control's RibbonListViewItems or not.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.ScrollButtonsVisible">
			<summary>Gets or sets a value whether the scroll bars buttons should be displayed or not.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.ToolTip">
			<summary>Gets an object of type RibbonToolTip that displays text when the mouse pointer hovers over RibbonListView's scroll bar or drop-down button.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.ViewMode">
			<summary>Gets or sets the mode in which this RibbonListView displays its items.</summary>
		</member>
		<member name="E:TXTextControl.Windows.Forms.Ribbon.RibbonListView.DropDownClosed">
			<summary>Occurs as the RibbonListView's drop-down menu is closed.</summary>
		</member>
		<member name="E:TXTextControl.Windows.Forms.Ribbon.RibbonListView.DropDownOpening">
			<summary>Occurs as the RibbonListView's drop-down menu is opening.</summary>
		</member>
		<member name="E:TXTextControl.Windows.Forms.Ribbon.RibbonListView.ItemClick">
			<summary>Occurs as an RibbonListViewItem is clicked.</summary>
		</member>
		<member name="E:TXTextControl.Windows.Forms.Ribbon.RibbonListView.ItemMouseEnter">
			<summary>Occurs when the mouse pointer enters a RibbonListViewItem.</summary>
		</member>
		<member name="E:TXTextControl.Windows.Forms.Ribbon.RibbonListView.ItemMouseLeave">
			<summary>Occurs when the mouse pointer leaves a RibbonListViewItem.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonListView.RibbonListViewItem">
			<summary>The RibbonListViewItem class represents an item in a RibbonListView control.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonListView.RibbonListViewItem.#ctor">
			<summary>Initializes a new instance of the RibbonListViewItem class.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.RibbonListViewItem.Tag">
			<summary>Gets or sets the data associated with this RibbonListViewItem.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.RibbonListViewItem.Icon">
			<summary>Gets or sets the icon for this RibbonListViewItem.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.RibbonListViewItem.Text">
			<summary>Gets or sets the RibbonListViewItem's text</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.RibbonListViewItem.ToolTip">
			<summary>Gets an object of type RibbonToolTip that displays text when the mouse pointer hovers over the item.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonListView.RibbonListViewItemCollection">
			<summary>An instance of the RibbonListViewItemCollection class contains controls of type RibbonListViewItem and can be obtained with the RibbonListView.RibbonListViewItems property.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonListView.RibbonListViewItemCollection.Add(RibbonListView.RibbonListViewItem)">
			<summary>Adds an item of the type RibbonListViewItem to the end of this collection.</summary>
			<param name="item">The item to be added to the end of this collection.</param>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonListView.RibbonListViewItemCollection.Item">
			<summary>Gets an item of type RibbonListViewItem from this collection. This property is the indexer for the RibbonListViewItemCollection class.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonListView.RibbonListViewItemEventArgs">
			<summary>The RibbonListViewItemEventArgs class provides data for the RibbonListView.ItemClick, ItemMouseEnter or ItemMouseLeave event.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonListView.RibbonListViewItemEventArgs.Item">
			<summary>Gets an object of type RibbonListViewItem that represents the handled item.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonMenuButton">
			<summary>The RibbonMenuButton class is a button control that displays a drop-down menu when clicked.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonMenuButton.#ctor">
			<summary>Initializes a new instance of the RibbonMenuButton class.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonMenuButton.DropDownItems">
			<summary>Gets the collection of controls in the drop-down menu that is associated with this RibbonMenuButton.</summary>
		</member>
		<member name="E:TXTextControl.Windows.Forms.Ribbon.RibbonMenuButton.DropDownClosed">
			<summary>Occurs as the RibbonMenuButton's drop-down menu is closed.</summary>
		</member>
		<member name="E:TXTextControl.Windows.Forms.Ribbon.RibbonMenuButton.DropDownOpening">
			<summary>Occurs as the RibbonMenuButton's drop-down menu is opening.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonPageLayoutTab">
			<summary>The RibbonPageLayoutTab class represents a Windows Forms ribbon tab for editing the page setup and layout.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonPageLayoutTab.#ctor">
			<summary>Initializes a new instance of the RibbonPageLayoutTab class.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonPageLayoutTab.RibbonItem">
			<summary>Each RibbonItem represents an item in a Windows.Forms.Ribbon.RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonPageLayoutTab.RibbonItem.TXITEM_PageMargins">
			<summary>Identifies the PageMargins button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonPageLayoutTab.RibbonItem.TXITEM_Orientation">
			<summary>Identifies the Orientation button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonPageLayoutTab.RibbonItem.TXITEM_PageSize">
			<summary>Identifies the PageSize button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonPageLayoutTab.RibbonItem.TXITEM_Columns">
			<summary>Identifies the Columns button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonPageLayoutTab.RibbonItem.TXITEM_Breaks">
			<summary>Identifies the Breaks button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonPageLayoutTab.RibbonItem.TXITEM_PageColor">
			<summary>Identifies the PageColor button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonPageLayoutTab.RibbonItem.TXITEM_PageBorders">
			<summary>Identifies the PageBorders button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonPageLayoutTab.RibbonItem.TXITEM_PageLineColor">
			<summary>Identifies the PageLineColor button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonPageLayoutTab.RibbonItem.TXITEM_PageLineWidth">
			<summary>Identifies the PageLineWidth button of the RibbonPageLayoutTab.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonPageLayoutTab.FindItem(Windows.Forms.Ribbon.RibbonPageLayoutTab.RibbonItem)">
			<summary>Finds a control that has the provided RibbonPageLayoutTab.RibbonItem identifier.</summary>
			<param name="ribbonItem">Specifies the identifier of the requested control.</param>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonProofingTab">
			<summary>The RibbonProofingTab class represents a Windows Forms ribbon tab for setting proofing options such as spelling, hyphenation or language settings.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonProofingTab.#ctor">
			<summary>Initializes a new instance of the RibbonProofingTab class.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonProofingTab.RibbonItem">
			<summary>Each RibbonItem represents an item in a Windows.Forms.Ribbon.RibbonProofingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonProofingTab.RibbonItem.TXITEM_EnableSpellChecking">
			<summary>Identifies the EnableSpellChecking button of the RibbonProofingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonProofingTab.RibbonItem.TXITEM_EnableHyphenations">
			<summary>Identifies the button of the RibbonProofingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonProofingTab.RibbonItem.TXITEM_Spelling">
			<summary>Identifies the Spelling button of the RibbonProofingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonProofingTab.RibbonItem.TXITEM_LoadDictionary">
			<summary>Identifies the LoadDictionary button of the RibbonProofingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonProofingTab.RibbonItem.TXITEM_SpellingOptions">
			<summary>Identifies the SpellingOptions button of the RibbonProofingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonProofingTab.RibbonItem.TXITEM_EnableLanguageDetection">
			<summary>Identifies the EnableLanguageDetection button of the RibbonProofingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonProofingTab.RibbonItem.TXITEM_SetLanguage">
			<summary>Identifies the SetLanguage button of the RibbonProofingTab.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonProofingTab.FindItem(Windows.Forms.Ribbon.RibbonProofingTab.RibbonItem)">
			<summary>Finds a control that has the provided RibbonProofingTab.RibbonItem identifier.</summary>
			<param name="ribbonItem">Specifies the identifier of the requested control.</param>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab">
			<summary>The RibbonReportingTab class represents a Windows Forms ribbon tab to integrate mail merge and reporting functionality.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.#ctor">
			<summary>Initializes a new instance of the RibbonReportingTab class.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.RibbonItem">
			<summary>Each RibbonItem represents an item in a Windows.Forms.Ribbon.RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.RibbonItem.TTXITEM_DataSource">
			<summary>Identifies the DataSource button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.RibbonItem.TTXITEM_SelectMasterTable">
			<summary>Identifies the SelectMasterTable button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.RibbonItem.TTXITEM_EditDataRelations">
			<summary>Identifies the EditDataRelations button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.RibbonItem.TTXITEM_ConfigFile">
			<summary>Identifies the ConfigFile button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.RibbonItem.TTXITEM_InsertMergeField">
			<summary>Identifies the InsertMergeField button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.RibbonItem.TTXITEM_InsertSpecialField">
			<summary>Identifies the InsertSpecialField button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.RibbonItem.TTXITEM_FieldProperties">
			<summary>Identifies the FieldProperties button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.RibbonItem.TTXITEM_DeleteField">
			<summary>Identifies the DeleteField button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.RibbonItem.TTXITEM_InsertMergeBlock">
			<summary>Identifies the InsertMergeBlock button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.RibbonItem.TTXITEM_EditMergeBlocks">
			<summary>Identifies the EditMergeBlocks button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.RibbonItem.TTXITEM_ShowFieldCodes">
			<summary>Identifies the ShowFieldCodes button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.RibbonItem.TTXITEM_ShowFieldText">
			<summary>Identifies the ShowFieldText button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.RibbonItem.TTXITEM_FieldNavigation">
			<summary>Identifies the FieldNavigation button of the RibbonReportingTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.RibbonItem.TTXITEM_PreviewMergeFields">
			<summary>Identifies the PreviewMergeFields button of the RibbonReportingTab.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.FindItem(Windows.Forms.Ribbon.RibbonReportingTab.RibbonItem)">
			<summary>Finds a control that has the provided RibbonReportingTab.RibbonItem identifier.</summary>
			<param name="ribbonItem">Specifies the identifier of the requested control.</param>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonReportingTab.DataSourceManager">
			<summary>Provides the DataSourceManager that is connected with the RibbonReportingTab.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonSeperator">
			<summary>The RibbonSeperator class represents a control that provides a seperator between elements in a HorizontalRibbonGroup, an ApplicationMenu or a drop-down menu of a RibbonMenuButton.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonSeperator.#ctor">
			<summary>Initializes a new instance of the RibbonSeperator class.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonSeperator.Alignment">
			<summary>Gets the alignment of this RibbonSeperator.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonSeperator.ParentCollection">
			<summary>Gets the RibbonItemCollection that contains this RibbonSeperator.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonSplitButton">
			<summary>The RibbonSplitButton class is a control that has a primary button that responds to a Click event and a secondary button that displays a drop-down menu when clicked.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonSplitButton.#ctor">
			<summary>Initializes a new instance of the RibbonSplitButton class.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonSplitButton.ButtonEnabled">
			<summary>Gets or set a value indicating whether the primary button is enabled.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonSplitButton.Checkable">
			<summary>Gets or set a value indicating whether the primary button is checkable.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonSplitButton.Checked">
			<summary>Gets or set a value indicating whether the primary button is checked.</summary>
		</member>
		<member name="E:TXTextControl.Windows.Forms.Ribbon.RibbonSplitButton.ButtonClick">
			<summary>Occurs as the primary button is clicked.</summary>
		</member>
		<member name="E:TXTextControl.Windows.Forms.Ribbon.RibbonSplitButton.CheckedChanged">
			<summary>Occurs when the value of the Checked property changes.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonTab">
			<summary>The RibbonTab class represents a tab in a Ribbon.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonTab.#ctor">
			<summary>Initializes a new instance of the RibbonTab class.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonTab.KeyTip">
			<summary>Gets or sets the keyboard shortcut of the RibbonTab.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonTab.RibbonGroups">
			<summary>Gets a collection of all RibbonGroups in a RibbonTab.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab">
			<summary>The RibbonTableLayoutTab class represents a Windows Forms ribbon tab for editing tables.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.#ctor">
			<summary>Initializes a new instance of the RibbonTableLayoutTab class.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem">
			<summary>Each RibbonItem represents an item in a Windows.Forms.Ribbon.RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_SelectTable">
			<summary>Identifies the SelectTable button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_TableGridLines">
			<summary>Identifies the TableGridLines button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_TableProperties">
			<summary>Identifies the TableProperties button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_DeleteTable">
			<summary>Identifies the DeleteTable button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_InsertTableRowAbove">
			<summary>Identifies the InsertTableRowAbove button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_InsertTableRowBelow">
			<summary>Identifies the InsertTableRowBelow button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_InsertTableColLeft">
			<summary>Identifies the InsertTableColLeft button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_InsertTableColRight">
			<summary>Identifies the InsertTableColRight button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_MergeTableCells">
			<summary>Identifies the MergeTableCells button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_SplitTableCells">
			<summary>Identifies the SplitTableCells button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_SplitTable">
			<summary>Identifies the SplitTable button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_TableFrameLines">
			<summary>Identifies the TableFrameLines button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_TableLineColor">
			<summary>Identifies the TableLineColor button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_TableBackColor">
			<summary>Identifies the TableBackColor button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_TableLineWidth">
			<summary>Identifies the TableLineWidth button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignTopLeft">
			<summary>Identifies the CellAlignTopLeft button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignTopCentered">
			<summary>Identifies the CellAlignTopCentered button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignTopRight">
			<summary>Identifies the CellAlignTopRight button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignTopJustified">
			<summary>Identifies the CellAlignTopJustified button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignMiddleLeft">
			<summary>Identifies the CellAlignMiddleLeft button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignMiddleCentered">
			<summary>Identifies the CellAlignMiddleCentered button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignMiddleRight">
			<summary>Identifies the CellAlignMiddleRight button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignMiddleJustified">
			<summary>Identifies the CellAlignMiddleJustified button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignBottomLeft">
			<summary>Identifies the CellAlignBottomLeft button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignBottomCentered">
			<summary>Identifies the CellAlignBottomCentered button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignBottomRight">
			<summary>Identifies the CellAlignBottomRight button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem.TXITEM_CellAlignBottomJustified">
			<summary>Identifies the CellAlignBottomJustified button of the RibbonTableLayoutTab.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonTableLayoutTab.FindItem(Windows.Forms.Ribbon.RibbonTableLayoutTab.RibbonItem)">
			<summary>Finds a control that has the provided RibbonTableLayoutTab.RibbonItem identifier.</summary>
			<param name="ribbonItem">Specifies the identifier of the requested control.</param>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox">
			<summary>The RibbonTextBox class is a control that can be used to display or edit unformatted text.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.#ctor">
			<summary>Initializes a new instance of the RibbonTextBox class.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.DisplayMode">
			<summary>Sets the RibbonTextBox's superordinate display settings and gets its corresponding text icon relation rendering to the current group's width.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.KeyTip">
			<summary>Gets or sets the keyboard shortcut of the RibbonTextBox.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.Label">
			<summary>Gets or sets the text that is displayed before the text box.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.LargeIcon">
			<summary>Gets or sets a 32x32 icon for this RibbonTextBox.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.ParentCollection">
			<summary>Gets the RibbonItemCollection that contains this RibbonTextBox.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.SmallIcon">
			<summary>Gets or sets a 16x16 icon for this RibbonTextBox.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.ShowUpDownButtons">
			<summary>Gets or sets a value whether the text box's up down buttons are shown or not.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.Text">
			<summary>Overridden. Gets or sets the text that is inserted in the text box.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.TextAlign">
			<summary>Gets or sets how text is aligned in the text box.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.TextBoxLabel">
			<summary>Gets or sets the text that is displayed behind the text box.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.TextBoxWidth">
			<summary>Gets or sets width of the text box.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.ToolTip">
			<summary>Gets an object of type RibbonToolTip that displays text when the mouse pointer hovers over the item.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.ValidationMode">
			<summary>Gets or sets the RibbonTextBox's input validation mode that is used to validate the inserted text in the text box.</summary>
		</member>
		<member name="E:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.DownButtonClicked">
			<summary>Occurs as the text box's down button is clicked.</summary>
		</member>
		<member name="E:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.TextValidated">
			<summary>Occurs when text box's text is validated.</summary>
		</member>
		<member name="E:TXTextControl.Windows.Forms.Ribbon.RibbonTextBox.UpButtonClicked">
			<summary>Occurs as the text box's up button is clicked.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonToggleButton">
			<summary>The RibbonToggleButton class is a checkable button control which can be added to a RibbonGroup or to a RibbonMenuButton where it is stored as an item of the drop-down menu.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonToggleButton.#ctor">
			<summary>Initializes a new instance of the RibbonToggleButton class.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonToggleButton.Checked">
			<summary>Gets or set a value indicating whether this RibbonToggleButton is checked.</summary>
		</member>
		<member name="E:TXTextControl.Windows.Forms.Ribbon.RibbonToggleButton.CheckedChanged">
			<summary>Occurs when the value of the Checked property changes.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonToolTip">
			<summary>The RibbonToolTip class represents a small rectangular pop-up window that displays the title and/or a brief description of a ribbon item's purpose when the user rests the pointer on the control.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonToolTip.Description">
			<summary>Gets or sets the description for the RibbonToolTip window.</summary>
		</member>
		<member name="P:TXTextControl.Windows.Forms.Ribbon.RibbonToolTip.Title">
			<summary>Gets or sets the title for the RibbonToolTip window.</summary>
		</member>
		<member name="E:TXTextControl.Windows.Forms.Ribbon.RibbonToolTip.Opening">
			<summary>Occurs as the the RibbonToolTip window is opening.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab">
			<summary>The RibbonViewTab class represents a Windows Forms ribbon tab for customizing the view settings.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.#ctor">
			<summary>Initializes a new instance of the RibbonViewTab class.</summary>
		</member>
		<member name="T:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.RibbonItem">
			<summary>Each RibbonItem represents an item in a Windows.Forms.Ribbon.RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.RibbonItem.TXITEM_PrintLayout">
			<summary>Identifies the PrintLayout button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.RibbonItem.TXITEM_Draft">
			<summary>Identifies the Draft button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.RibbonItem.TXITEM_ZoomFactor">
			<summary>Identifies the ZoomFactor button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.RibbonItem.TXITEM_Zoom100">
			<summary>Identifies the Zoom100 button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.RibbonItem.TXITEM_FullPage">
			<summary>Identifies the FullPage button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.RibbonItem.TXITEM_PageWidth">
			<summary>Identifies the PageWidth button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.RibbonItem.TXITEM_TextWidth">
			<summary>Identifies the TextWidth button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.RibbonItem.TXITEM_HorizontalRuler">
			<summary>Identifies the HorizontalRuler button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.RibbonItem.TXITEM_VerticalRuler">
			<summary>Identifies the VerticalRuler button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.RibbonItem.TXITEM_StatusBar">
			<summary>Identifies the StatusBar button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.RibbonItem.TXITEM_ShowTableGridlines">
			<summary>Identifies the TableGridlines button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.RibbonItem.TXITEM_ShowBookmarkMarkers">
			<summary>Identifies the BookmarkMarkers button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.RibbonItem.TXITEM_ShowTextFrameMarkersLines">
			<summary>Identifies the TextFrameMarkersLines button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.RibbonItem.TXITEM_ShowDrawingFrameMarkersLines">
			<summary>Identifies the DrawingFrameMarkersLines button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.RibbonItem.TXITEM_ShowControlChars">
			<summary>Identifies the ControlChars button of the RibbonViewTab.</summary>
		</member>
		<member name="F:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.RibbonItem.TXITEM_ShowFrameAnchors">
			<summary>Identifies the FrameAnchors button of the RibbonViewTab.</summary>
		</member>
		<member name="M:TXTextControl.Windows.Forms.Ribbon.RibbonViewTab.FindItem(Windows.Forms.Ribbon.RibbonViewTab.RibbonItem)">
			<summary>Finds a control that has the provided RibbonViewTab.RibbonItem identifier.</summary>
			<param name="ribbonItem">Specifies the identifier of the requested control.</param>
		</member>
	</members>
</doc>
